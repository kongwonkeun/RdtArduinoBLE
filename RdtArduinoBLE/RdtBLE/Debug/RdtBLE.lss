
RdtBLE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00009d7c  00002000  00002000  00002000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000002a0  20000000  0000bd7c  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000df0  200002a0  0000c01c  000102a0  2**2
                  ALLOC
  3 .ARM.attributes 00000028  00000000  00000000  000102a0  2**0
                  CONTENTS, READONLY
  4 .comment      00000059  00000000  00000000  000102c8  2**0
                  CONTENTS, READONLY
  5 .debug_info   0009fb93  00000000  00000000  00010321  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000c8bd  00000000  00000000  000afeb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_loc    00014207  00000000  00000000  000bc771  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 00001748  00000000  00000000  000d0978  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00002898  00000000  00000000  000d20c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  0002187d  00000000  00000000  000d4958  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00019621  00000000  00000000  000f61d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0008acd7  00000000  00000000  0010f7f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000049a8  00000000  00000000  0019a4d0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00002000 <exception_table>:
    2000:	00 80 00 20 19 4e 00 00 01 4e 00 00 01 4e 00 00     ... .N...N...N..
	...
    202c:	01 4e 00 00 00 00 00 00 00 00 00 00 01 4e 00 00     .N...........N..
    203c:	6d 4e 00 00 01 4e 00 00 01 4e 00 00 01 4e 00 00     mN...N...N...N..
    204c:	01 4e 00 00 01 4e 00 00 01 4e 00 00 01 4e 00 00     .N...N...N...N..
    205c:	05 4e 00 00 01 4e 00 00 01 4e 00 00 01 4e 00 00     .N...N...N...N..
    206c:	01 4e 00 00 01 4e 00 00 41 68 00 00 31 68 00 00     .N...N..Ah..1h..
    207c:	01 4e 00 00 01 4e 00 00 01 4e 00 00 01 4e 00 00     .N...N...N...N..
    208c:	01 4e 00 00 00 00 00 00 01 4e 00 00 01 4e 00 00     .N.......N...N..
    209c:	01 4e 00 00 01 4e 00 00 01 4e 00 00 01 4e 00 00     .N...N...N...N..
    20ac:	01 4e 00 00 00 00 00 00                             .N......

000020b4 <__do_global_dtors_aux>:
    20b4:	b510      	push	{r4, lr}
    20b6:	4c06      	ldr	r4, [pc, #24]	; (20d0 <__do_global_dtors_aux+0x1c>)
    20b8:	7823      	ldrb	r3, [r4, #0]
    20ba:	2b00      	cmp	r3, #0
    20bc:	d107      	bne.n	20ce <__do_global_dtors_aux+0x1a>
    20be:	4b05      	ldr	r3, [pc, #20]	; (20d4 <__do_global_dtors_aux+0x20>)
    20c0:	2b00      	cmp	r3, #0
    20c2:	d002      	beq.n	20ca <__do_global_dtors_aux+0x16>
    20c4:	4804      	ldr	r0, [pc, #16]	; (20d8 <__do_global_dtors_aux+0x24>)
    20c6:	e000      	b.n	20ca <__do_global_dtors_aux+0x16>
    20c8:	bf00      	nop
    20ca:	2301      	movs	r3, #1
    20cc:	7023      	strb	r3, [r4, #0]
    20ce:	bd10      	pop	{r4, pc}
    20d0:	200002a0 	.word	0x200002a0
    20d4:	00000000 	.word	0x00000000
    20d8:	0000bd78 	.word	0x0000bd78

000020dc <frame_dummy>:
    20dc:	4b08      	ldr	r3, [pc, #32]	; (2100 <frame_dummy+0x24>)
    20de:	b510      	push	{r4, lr}
    20e0:	2b00      	cmp	r3, #0
    20e2:	d003      	beq.n	20ec <frame_dummy+0x10>
    20e4:	4907      	ldr	r1, [pc, #28]	; (2104 <frame_dummy+0x28>)
    20e6:	4808      	ldr	r0, [pc, #32]	; (2108 <frame_dummy+0x2c>)
    20e8:	e000      	b.n	20ec <frame_dummy+0x10>
    20ea:	bf00      	nop
    20ec:	4807      	ldr	r0, [pc, #28]	; (210c <frame_dummy+0x30>)
    20ee:	6803      	ldr	r3, [r0, #0]
    20f0:	2b00      	cmp	r3, #0
    20f2:	d100      	bne.n	20f6 <frame_dummy+0x1a>
    20f4:	bd10      	pop	{r4, pc}
    20f6:	4b06      	ldr	r3, [pc, #24]	; (2110 <frame_dummy+0x34>)
    20f8:	2b00      	cmp	r3, #0
    20fa:	d0fb      	beq.n	20f4 <frame_dummy+0x18>
    20fc:	4798      	blx	r3
    20fe:	e7f9      	b.n	20f4 <frame_dummy+0x18>
    2100:	00000000 	.word	0x00000000
    2104:	200002a4 	.word	0x200002a4
    2108:	0000bd78 	.word	0x0000bd78
    210c:	20000294 	.word	0x20000294
    2110:	00000000 	.word	0x00000000

00002114 <_ZN12BLEAttributeD1Ev>:
    2114:	4770      	bx	lr

00002116 <_ZNK12BLEAttribute4typeEv>:
    2116:	2000      	movs	r0, #0
    2118:	4770      	bx	lr

0000211a <_ZN12BLEAttributeD0Ev>:
    211a:	b510      	push	{r4, lr}
    211c:	0004      	movs	r4, r0
    211e:	f002 ff33 	bl	4f88 <_ZdlPv>
    2122:	0020      	movs	r0, r4
    2124:	bd10      	pop	{r4, pc}
	...

00002128 <_ZN12BLEAttributeC1EPKc>:
    2128:	4b05      	ldr	r3, [pc, #20]	; (2140 <_ZN12BLEAttributeC1EPKc+0x18>)
    212a:	b510      	push	{r4, lr}
    212c:	3308      	adds	r3, #8
    212e:	0004      	movs	r4, r0
    2130:	c008      	stmia	r0!, {r3}
    2132:	f000 f9f3 	bl	251c <_ZN7BLEUuidC1EPKc>
    2136:	2300      	movs	r3, #0
    2138:	0020      	movs	r0, r4
    213a:	61e3      	str	r3, [r4, #28]
    213c:	bd10      	pop	{r4, pc}
    213e:	46c0      	nop			; (mov r8, r8)
    2140:	0000b31c 	.word	0x0000b31c

00002144 <_ZNK12BLEAttribute4uuidEv>:
    2144:	b510      	push	{r4, lr}
    2146:	3004      	adds	r0, #4
    2148:	f000 fa22 	bl	2590 <_ZNK7BLEUuid3strEv>
    214c:	bd10      	pop	{r4, pc}

0000214e <_ZNK12BLEAttribute8uuidDataEv>:
    214e:	b510      	push	{r4, lr}
    2150:	3004      	adds	r0, #4
    2152:	f000 fa1f 	bl	2594 <_ZNK7BLEUuid4dataEv>
    2156:	bd10      	pop	{r4, pc}

00002158 <_ZNK12BLEAttribute10uuidLengthEv>:
    2158:	b510      	push	{r4, lr}
    215a:	3004      	adds	r0, #4
    215c:	f000 fa1c 	bl	2598 <_ZNK7BLEUuid6lengthEv>
    2160:	bd10      	pop	{r4, pc}

00002162 <_ZN12BLEAttribute6retainEv>:
    2162:	69c3      	ldr	r3, [r0, #28]
    2164:	3301      	adds	r3, #1
    2166:	61c3      	str	r3, [r0, #28]
    2168:	0018      	movs	r0, r3
    216a:	4770      	bx	lr

0000216c <_ZN12BLEAttribute7releaseEv>:
    216c:	69c3      	ldr	r3, [r0, #28]
    216e:	3b01      	subs	r3, #1
    2170:	61c3      	str	r3, [r0, #28]
    2172:	0018      	movs	r0, r3
    2174:	4770      	bx	lr
	...

00002178 <_ZN17BLECharacteristicD1Ev>:
    2178:	4b09      	ldr	r3, [pc, #36]	; (21a0 <_ZN17BLECharacteristicD1Ev+0x28>)
    217a:	b510      	push	{r4, lr}
    217c:	3308      	adds	r3, #8
    217e:	0004      	movs	r4, r0
    2180:	6003      	str	r3, [r0, #0]
    2182:	6840      	ldr	r0, [r0, #4]
    2184:	2800      	cmp	r0, #0
    2186:	d009      	beq.n	219c <_ZN17BLECharacteristicD1Ev+0x24>
    2188:	f7ff fff0 	bl	216c <_ZN12BLEAttribute7releaseEv>
    218c:	2800      	cmp	r0, #0
    218e:	dc05      	bgt.n	219c <_ZN17BLECharacteristicD1Ev+0x24>
    2190:	6860      	ldr	r0, [r4, #4]
    2192:	2800      	cmp	r0, #0
    2194:	d002      	beq.n	219c <_ZN17BLECharacteristicD1Ev+0x24>
    2196:	6803      	ldr	r3, [r0, #0]
    2198:	685b      	ldr	r3, [r3, #4]
    219a:	4798      	blx	r3
    219c:	0020      	movs	r0, r4
    219e:	bd10      	pop	{r4, pc}
    21a0:	0000b330 	.word	0x0000b330

000021a4 <_ZN17BLECharacteristicD0Ev>:
    21a4:	b510      	push	{r4, lr}
    21a6:	0004      	movs	r4, r0
    21a8:	f7ff ffe6 	bl	2178 <_ZN17BLECharacteristicD1Ev>
    21ac:	0020      	movs	r0, r4
    21ae:	f002 feeb 	bl	4f88 <_ZdlPv>
    21b2:	0020      	movs	r0, r4
    21b4:	bd10      	pop	{r4, pc}
	...

000021b8 <_ZN17BLECharacteristicC1EP22BLELocalCharacteristic>:
    21b8:	4b06      	ldr	r3, [pc, #24]	; (21d4 <_ZN17BLECharacteristicC1EP22BLELocalCharacteristic+0x1c>)
    21ba:	b510      	push	{r4, lr}
    21bc:	3308      	adds	r3, #8
    21be:	0004      	movs	r4, r0
    21c0:	6003      	str	r3, [r0, #0]
    21c2:	6041      	str	r1, [r0, #4]
    21c4:	2900      	cmp	r1, #0
    21c6:	d002      	beq.n	21ce <_ZN17BLECharacteristicC1EP22BLELocalCharacteristic+0x16>
    21c8:	0008      	movs	r0, r1
    21ca:	f7ff ffca 	bl	2162 <_ZN12BLEAttribute6retainEv>
    21ce:	0020      	movs	r0, r4
    21d0:	bd10      	pop	{r4, pc}
    21d2:	46c0      	nop			; (mov r8, r8)
    21d4:	0000b330 	.word	0x0000b330

000021d8 <_ZN17BLECharacteristicC1EPKchib>:
    21d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    21da:	b085      	sub	sp, #20
    21dc:	0004      	movs	r4, r0
    21de:	001e      	movs	r6, r3
    21e0:	2054      	movs	r0, #84	; 0x54
    21e2:	ab0a      	add	r3, sp, #40	; 0x28
    21e4:	781f      	ldrb	r7, [r3, #0]
    21e6:	9102      	str	r1, [sp, #8]
    21e8:	9203      	str	r2, [sp, #12]
    21ea:	f002 fec9 	bl	4f80 <_Znwj>
    21ee:	0005      	movs	r5, r0
    21f0:	0033      	movs	r3, r6
    21f2:	9a03      	ldr	r2, [sp, #12]
    21f4:	9902      	ldr	r1, [sp, #8]
    21f6:	9700      	str	r7, [sp, #0]
    21f8:	f000 fa72 	bl	26e0 <_ZN22BLELocalCharacteristicC1EPKchib>
    21fc:	0029      	movs	r1, r5
    21fe:	0020      	movs	r0, r4
    2200:	f7ff ffda 	bl	21b8 <_ZN17BLECharacteristicC1EP22BLELocalCharacteristic>
    2204:	0020      	movs	r0, r4
    2206:	b005      	add	sp, #20
    2208:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000220a <_ZN17BLECharacteristic10writeValueEPKhi>:
    220a:	6843      	ldr	r3, [r0, #4]
    220c:	b510      	push	{r4, lr}
    220e:	1e18      	subs	r0, r3, #0
    2210:	d001      	beq.n	2216 <_ZN17BLECharacteristic10writeValueEPKhi+0xc>
    2212:	f000 f9d1 	bl	25b8 <_ZN22BLELocalCharacteristic10writeValueEPKhi>
    2216:	bd10      	pop	{r4, pc}

00002218 <_ZN17BLECharacteristic5localEv>:
    2218:	6840      	ldr	r0, [r0, #4]
    221a:	4770      	bx	lr

0000221c <_ZN9BLEDeviceD1Ev>:
    221c:	4770      	bx	lr

0000221e <_ZN9BLEDeviceD0Ev>:
    221e:	b510      	push	{r4, lr}
    2220:	0004      	movs	r4, r0
    2222:	f002 feb1 	bl	4f88 <_ZdlPv>
    2226:	0020      	movs	r0, r4
    2228:	bd10      	pop	{r4, pc}
	...

0000222c <_ZN9BLEDevice4pollEv>:
    222c:	b510      	push	{r4, lr}
    222e:	4802      	ldr	r0, [pc, #8]	; (2238 <_ZN9BLEDevice4pollEv+0xc>)
    2230:	f002 f968 	bl	4504 <_ZN8HCIClass4pollEv>
    2234:	bd10      	pop	{r4, pc}
    2236:	46c0      	nop			; (mov r8, r8)
    2238:	20000480 	.word	0x20000480

0000223c <_ZN9BLEDevice4pollEm>:
    223c:	b510      	push	{r4, lr}
    223e:	4802      	ldr	r0, [pc, #8]	; (2248 <_ZN9BLEDevice4pollEm+0xc>)
    2240:	f002 f8f8 	bl	4434 <_ZN8HCIClass4pollEm>
    2244:	bd10      	pop	{r4, pc}
    2246:	46c0      	nop			; (mov r8, r8)
    2248:	20000480 	.word	0x20000480

0000224c <_ZN9BLEDevice10disconnectEv>:
    224c:	b510      	push	{r4, lr}
    224e:	4b06      	ldr	r3, [pc, #24]	; (2268 <_ZN9BLEDevice10disconnectEv+0x1c>)
    2250:	8881      	ldrh	r1, [r0, #4]
    2252:	2000      	movs	r0, #0
    2254:	4299      	cmp	r1, r3
    2256:	d005      	beq.n	2264 <_ZN9BLEDevice10disconnectEv+0x18>
    2258:	4804      	ldr	r0, [pc, #16]	; (226c <_ZN9BLEDevice10disconnectEv+0x20>)
    225a:	f002 fb39 	bl	48d0 <_ZN8HCIClass10disconnectEt>
    225e:	1e43      	subs	r3, r0, #1
    2260:	4198      	sbcs	r0, r3
    2262:	b2c0      	uxtb	r0, r0
    2264:	bd10      	pop	{r4, pc}
    2266:	46c0      	nop			; (mov r8, r8)
    2268:	0000ffff 	.word	0x0000ffff
    226c:	20000480 	.word	0x20000480

00002270 <_ZNK9BLEDevice7addressEv>:
    2270:	b510      	push	{r4, lr}
    2272:	0004      	movs	r4, r0
    2274:	7988      	ldrb	r0, [r1, #6]
    2276:	b08a      	sub	sp, #40	; 0x28
    2278:	7a8b      	ldrb	r3, [r1, #10]
    227a:	7aca      	ldrb	r2, [r1, #11]
    227c:	9003      	str	r0, [sp, #12]
    227e:	79c8      	ldrb	r0, [r1, #7]
    2280:	9002      	str	r0, [sp, #8]
    2282:	7a08      	ldrb	r0, [r1, #8]
    2284:	9001      	str	r0, [sp, #4]
    2286:	7a49      	ldrb	r1, [r1, #9]
    2288:	a805      	add	r0, sp, #20
    228a:	9100      	str	r1, [sp, #0]
    228c:	4904      	ldr	r1, [pc, #16]	; (22a0 <_ZNK9BLEDevice7addressEv+0x30>)
    228e:	f007 fc07 	bl	9aa0 <siprintf>
    2292:	a905      	add	r1, sp, #20
    2294:	0020      	movs	r0, r4
    2296:	f004 faa6 	bl	67e6 <_ZN6StringC1EPKc>
    229a:	0020      	movs	r0, r4
    229c:	b00a      	add	sp, #40	; 0x28
    229e:	bd10      	pop	{r4, pc}
    22a0:	0000b340 	.word	0x0000b340

000022a4 <_ZN9BLEDevice4rssiEv>:
    22a4:	b510      	push	{r4, lr}
    22a6:	4b04      	ldr	r3, [pc, #16]	; (22b8 <_ZN9BLEDevice4rssiEv+0x14>)
    22a8:	8881      	ldrh	r1, [r0, #4]
    22aa:	207f      	movs	r0, #127	; 0x7f
    22ac:	4299      	cmp	r1, r3
    22ae:	d002      	beq.n	22b6 <_ZN9BLEDevice4rssiEv+0x12>
    22b0:	4802      	ldr	r0, [pc, #8]	; (22bc <_ZN9BLEDevice4rssiEv+0x18>)
    22b2:	f002 f9bf 	bl	4634 <_ZN8HCIClass8readRssiEt>
    22b6:	bd10      	pop	{r4, pc}
    22b8:	0000ffff 	.word	0x0000ffff
    22bc:	20000480 	.word	0x20000480

000022c0 <_ZNK9BLEDevicecvbEv>:
    22c0:	b513      	push	{r0, r1, r4, lr}
    22c2:	0004      	movs	r4, r0
    22c4:	2206      	movs	r2, #6
    22c6:	2100      	movs	r1, #0
    22c8:	4668      	mov	r0, sp
    22ca:	f006 fead 	bl	9028 <memset>
    22ce:	88a2      	ldrh	r2, [r4, #4]
    22d0:	4b06      	ldr	r3, [pc, #24]	; (22ec <_ZNK9BLEDevicecvbEv+0x2c>)
    22d2:	2000      	movs	r0, #0
    22d4:	429a      	cmp	r2, r3
    22d6:	d007      	beq.n	22e8 <_ZNK9BLEDevicecvbEv+0x28>
    22d8:	1da0      	adds	r0, r4, #6
    22da:	2206      	movs	r2, #6
    22dc:	4669      	mov	r1, sp
    22de:	f006 fe79 	bl	8fd4 <memcmp>
    22e2:	1e43      	subs	r3, r0, #1
    22e4:	4198      	sbcs	r0, r3
    22e6:	b2c0      	uxtb	r0, r0
    22e8:	bd16      	pop	{r1, r2, r4, pc}
    22ea:	46c0      	nop			; (mov r8, r8)
    22ec:	0000ffff 	.word	0x0000ffff

000022f0 <_ZNK9BLEDeviceeqERKS_>:
    22f0:	b510      	push	{r4, lr}
    22f2:	8884      	ldrh	r4, [r0, #4]
    22f4:	888a      	ldrh	r2, [r1, #4]
    22f6:	2300      	movs	r3, #0
    22f8:	4294      	cmp	r4, r2
    22fa:	d107      	bne.n	230c <_ZNK9BLEDeviceeqERKS_+0x1c>
    22fc:	3106      	adds	r1, #6
    22fe:	3006      	adds	r0, #6
    2300:	2206      	movs	r2, #6
    2302:	f006 fe67 	bl	8fd4 <memcmp>
    2306:	4243      	negs	r3, r0
    2308:	4143      	adcs	r3, r0
    230a:	b2db      	uxtb	r3, r3
    230c:	0018      	movs	r0, r3
    230e:	bd10      	pop	{r4, pc}

00002310 <_ZNK9BLEDevice9connectedEv>:
    2310:	b510      	push	{r4, lr}
    2312:	0004      	movs	r4, r0
    2314:	4807      	ldr	r0, [pc, #28]	; (2334 <_ZNK9BLEDevice9connectedEv+0x24>)
    2316:	f002 f8f5 	bl	4504 <_ZN8HCIClass4pollEv>
    231a:	6823      	ldr	r3, [r4, #0]
    231c:	0020      	movs	r0, r4
    231e:	6a1b      	ldr	r3, [r3, #32]
    2320:	4798      	blx	r3
    2322:	2800      	cmp	r0, #0
    2324:	d004      	beq.n	2330 <_ZNK9BLEDevice9connectedEv+0x20>
    2326:	1da2      	adds	r2, r4, #6
    2328:	88a1      	ldrh	r1, [r4, #4]
    232a:	4803      	ldr	r0, [pc, #12]	; (2338 <_ZNK9BLEDevice9connectedEv+0x28>)
    232c:	f000 fdd4 	bl	2ed8 <_ZNK8ATTClass9connectedEtPKh>
    2330:	bd10      	pop	{r4, pc}
    2332:	46c0      	nop			; (mov r8, r8)
    2334:	20000480 	.word	0x20000480
    2338:	200002c8 	.word	0x200002c8

0000233c <_ZNK9BLEDeviceneERKS_>:
    233c:	b510      	push	{r4, lr}
    233e:	8884      	ldrh	r4, [r0, #4]
    2340:	888a      	ldrh	r2, [r1, #4]
    2342:	2301      	movs	r3, #1
    2344:	4294      	cmp	r4, r2
    2346:	d107      	bne.n	2358 <_ZNK9BLEDeviceneERKS_+0x1c>
    2348:	3106      	adds	r1, #6
    234a:	3006      	adds	r0, #6
    234c:	2206      	movs	r2, #6
    234e:	f006 fe41 	bl	8fd4 <memcmp>
    2352:	1e43      	subs	r3, r0, #1
    2354:	4198      	sbcs	r0, r3
    2356:	b2c3      	uxtb	r3, r0
    2358:	0018      	movs	r0, r3
    235a:	bd10      	pop	{r4, pc}

0000235c <_ZN9BLEDeviceC1Ev>:
    235c:	4b07      	ldr	r3, [pc, #28]	; (237c <_ZN9BLEDeviceC1Ev+0x20>)
    235e:	b510      	push	{r4, lr}
    2360:	3308      	adds	r3, #8
    2362:	6003      	str	r3, [r0, #0]
    2364:	2301      	movs	r3, #1
    2366:	0004      	movs	r4, r0
    2368:	425b      	negs	r3, r3
    236a:	8083      	strh	r3, [r0, #4]
    236c:	2206      	movs	r2, #6
    236e:	2100      	movs	r1, #0
    2370:	3006      	adds	r0, #6
    2372:	f006 fe59 	bl	9028 <memset>
    2376:	0020      	movs	r0, r4
    2378:	bd10      	pop	{r4, pc}
    237a:	46c0      	nop			; (mov r8, r8)
    237c:	0000b360 	.word	0x0000b360

00002380 <_ZN9BLEDeviceC1EtPh>:
    2380:	b510      	push	{r4, lr}
    2382:	0004      	movs	r4, r0
    2384:	0008      	movs	r0, r1
    2386:	4b05      	ldr	r3, [pc, #20]	; (239c <_ZN9BLEDeviceC1EtPh+0x1c>)
    2388:	0011      	movs	r1, r2
    238a:	3308      	adds	r3, #8
    238c:	80a0      	strh	r0, [r4, #4]
    238e:	6023      	str	r3, [r4, #0]
    2390:	1da0      	adds	r0, r4, #6
    2392:	2206      	movs	r2, #6
    2394:	f006 fe2d 	bl	8ff2 <memcpy>
    2398:	0020      	movs	r0, r4
    239a:	bd10      	pop	{r4, pc}
    239c:	0000b360 	.word	0x0000b360

000023a0 <_ZN10BLEServiceD1Ev>:
    23a0:	4b09      	ldr	r3, [pc, #36]	; (23c8 <_ZN10BLEServiceD1Ev+0x28>)
    23a2:	b510      	push	{r4, lr}
    23a4:	3308      	adds	r3, #8
    23a6:	0004      	movs	r4, r0
    23a8:	6003      	str	r3, [r0, #0]
    23aa:	6840      	ldr	r0, [r0, #4]
    23ac:	2800      	cmp	r0, #0
    23ae:	d009      	beq.n	23c4 <_ZN10BLEServiceD1Ev+0x24>
    23b0:	f7ff fedc 	bl	216c <_ZN12BLEAttribute7releaseEv>
    23b4:	2800      	cmp	r0, #0
    23b6:	dc05      	bgt.n	23c4 <_ZN10BLEServiceD1Ev+0x24>
    23b8:	6860      	ldr	r0, [r4, #4]
    23ba:	2800      	cmp	r0, #0
    23bc:	d002      	beq.n	23c4 <_ZN10BLEServiceD1Ev+0x24>
    23be:	6803      	ldr	r3, [r0, #0]
    23c0:	685b      	ldr	r3, [r3, #4]
    23c2:	4798      	blx	r3
    23c4:	0020      	movs	r0, r4
    23c6:	bd10      	pop	{r4, pc}
    23c8:	0000b394 	.word	0x0000b394

000023cc <_ZN10BLEServiceD0Ev>:
    23cc:	b510      	push	{r4, lr}
    23ce:	0004      	movs	r4, r0
    23d0:	f7ff ffe6 	bl	23a0 <_ZN10BLEServiceD1Ev>
    23d4:	0020      	movs	r0, r4
    23d6:	f002 fdd7 	bl	4f88 <_ZdlPv>
    23da:	0020      	movs	r0, r4
    23dc:	bd10      	pop	{r4, pc}
	...

000023e0 <_ZN10BLEServiceC1EP15BLELocalService>:
    23e0:	4b06      	ldr	r3, [pc, #24]	; (23fc <_ZN10BLEServiceC1EP15BLELocalService+0x1c>)
    23e2:	b510      	push	{r4, lr}
    23e4:	3308      	adds	r3, #8
    23e6:	0004      	movs	r4, r0
    23e8:	6003      	str	r3, [r0, #0]
    23ea:	6041      	str	r1, [r0, #4]
    23ec:	2900      	cmp	r1, #0
    23ee:	d002      	beq.n	23f6 <_ZN10BLEServiceC1EP15BLELocalService+0x16>
    23f0:	0008      	movs	r0, r1
    23f2:	f7ff feb6 	bl	2162 <_ZN12BLEAttribute6retainEv>
    23f6:	0020      	movs	r0, r4
    23f8:	bd10      	pop	{r4, pc}
    23fa:	46c0      	nop			; (mov r8, r8)
    23fc:	0000b394 	.word	0x0000b394

00002400 <_ZN10BLEServiceC1EPKc>:
    2400:	b570      	push	{r4, r5, r6, lr}
    2402:	0004      	movs	r4, r0
    2404:	2030      	movs	r0, #48	; 0x30
    2406:	000e      	movs	r6, r1
    2408:	f002 fdba 	bl	4f80 <_Znwj>
    240c:	0005      	movs	r5, r0
    240e:	0031      	movs	r1, r6
    2410:	f000 fbea 	bl	2be8 <_ZN15BLELocalServiceC1EPKc>
    2414:	0029      	movs	r1, r5
    2416:	0020      	movs	r0, r4
    2418:	f7ff ffe2 	bl	23e0 <_ZN10BLEServiceC1EP15BLELocalService>
    241c:	0020      	movs	r0, r4
    241e:	bd70      	pop	{r4, r5, r6, pc}

00002420 <_ZNK10BLEService4uuidEv>:
    2420:	6843      	ldr	r3, [r0, #4]
    2422:	b510      	push	{r4, lr}
    2424:	4803      	ldr	r0, [pc, #12]	; (2434 <_ZNK10BLEService4uuidEv+0x14>)
    2426:	2b00      	cmp	r3, #0
    2428:	d002      	beq.n	2430 <_ZNK10BLEService4uuidEv+0x10>
    242a:	0018      	movs	r0, r3
    242c:	f7ff fe8a 	bl	2144 <_ZNK12BLEAttribute4uuidEv>
    2430:	bd10      	pop	{r4, pc}
    2432:	46c0      	nop			; (mov r8, r8)
    2434:	0000b68c 	.word	0x0000b68c

00002438 <_ZN10BLEService17addCharacteristicER17BLECharacteristic>:
    2438:	6840      	ldr	r0, [r0, #4]
    243a:	b510      	push	{r4, lr}
    243c:	2800      	cmp	r0, #0
    243e:	d001      	beq.n	2444 <_ZN10BLEService17addCharacteristicER17BLECharacteristic+0xc>
    2440:	f000 fc13 	bl	2c6a <_ZN15BLELocalService17addCharacteristicER17BLECharacteristic>
    2444:	bd10      	pop	{r4, pc}

00002446 <_ZN10BLEService5localEv>:
    2446:	6840      	ldr	r0, [r0, #4]
    2448:	4770      	bx	lr
	...

0000244c <_ZN22BLETypedCharacteristicIhED1Ev>:
    244c:	b510      	push	{r4, lr}
    244e:	0004      	movs	r4, r0
    2450:	4b02      	ldr	r3, [pc, #8]	; (245c <_ZN22BLETypedCharacteristicIhED1Ev+0x10>)
    2452:	6003      	str	r3, [r0, #0]
    2454:	f7ff fe90 	bl	2178 <_ZN17BLECharacteristicD1Ev>
    2458:	0020      	movs	r0, r4
    245a:	bd10      	pop	{r4, pc}
    245c:	0000b3ac 	.word	0x0000b3ac

00002460 <_ZN22BLETypedCharacteristicIhED0Ev>:
    2460:	b510      	push	{r4, lr}
    2462:	0004      	movs	r4, r0
    2464:	f7ff fff2 	bl	244c <_ZN22BLETypedCharacteristicIhED1Ev>
    2468:	0020      	movs	r0, r4
    246a:	f002 fd8d 	bl	4f88 <_ZdlPv>
    246e:	0020      	movs	r0, r4
    2470:	bd10      	pop	{r4, pc}
	...

00002474 <_ZN29BLEUnsignedCharCharacteristicD1Ev>:
    2474:	b510      	push	{r4, lr}
    2476:	0004      	movs	r4, r0
    2478:	4b02      	ldr	r3, [pc, #8]	; (2484 <_ZN29BLEUnsignedCharCharacteristicD1Ev+0x10>)
    247a:	6003      	str	r3, [r0, #0]
    247c:	f7ff ffe6 	bl	244c <_ZN22BLETypedCharacteristicIhED1Ev>
    2480:	0020      	movs	r0, r4
    2482:	bd10      	pop	{r4, pc}
    2484:	0000b3bc 	.word	0x0000b3bc

00002488 <_ZN29BLEUnsignedCharCharacteristicD0Ev>:
    2488:	b510      	push	{r4, lr}
    248a:	0004      	movs	r4, r0
    248c:	f7ff fff2 	bl	2474 <_ZN29BLEUnsignedCharCharacteristicD1Ev>
    2490:	0020      	movs	r0, r4
    2492:	f002 fd79 	bl	4f88 <_ZdlPv>
    2496:	0020      	movs	r0, r4
    2498:	bd10      	pop	{r4, pc}
	...

0000249c <_ZN21BLEByteCharacteristicD1Ev>:
    249c:	b510      	push	{r4, lr}
    249e:	0004      	movs	r4, r0
    24a0:	4b02      	ldr	r3, [pc, #8]	; (24ac <_ZN21BLEByteCharacteristicD1Ev+0x10>)
    24a2:	6003      	str	r3, [r0, #0]
    24a4:	f7ff ffd2 	bl	244c <_ZN22BLETypedCharacteristicIhED1Ev>
    24a8:	0020      	movs	r0, r4
    24aa:	bd10      	pop	{r4, pc}
    24ac:	0000b3cc 	.word	0x0000b3cc

000024b0 <_ZN21BLEByteCharacteristicD0Ev>:
    24b0:	b510      	push	{r4, lr}
    24b2:	0004      	movs	r4, r0
    24b4:	f7ff fff2 	bl	249c <_ZN21BLEByteCharacteristicD1Ev>
    24b8:	0020      	movs	r0, r4
    24ba:	f002 fd65 	bl	4f88 <_ZdlPv>
    24be:	0020      	movs	r0, r4
    24c0:	bd10      	pop	{r4, pc}
	...

000024c4 <_ZN22BLETypedCharacteristicIhEC1EPKch>:
    24c4:	b530      	push	{r4, r5, lr}
    24c6:	2501      	movs	r5, #1
    24c8:	0004      	movs	r4, r0
    24ca:	b085      	sub	sp, #20
    24cc:	002b      	movs	r3, r5
    24ce:	9500      	str	r5, [sp, #0]
    24d0:	f7ff fe82 	bl	21d8 <_ZN17BLECharacteristicC1EPKchib>
    24d4:	4b06      	ldr	r3, [pc, #24]	; (24f0 <_ZN22BLETypedCharacteristicIhEC1EPKch+0x2c>)
    24d6:	210f      	movs	r1, #15
    24d8:	6023      	str	r3, [r4, #0]
    24da:	2300      	movs	r3, #0
    24dc:	4469      	add	r1, sp
    24de:	002a      	movs	r2, r5
    24e0:	0020      	movs	r0, r4
    24e2:	700b      	strb	r3, [r1, #0]
    24e4:	f7ff fe91 	bl	220a <_ZN17BLECharacteristic10writeValueEPKhi>
    24e8:	0020      	movs	r0, r4
    24ea:	b005      	add	sp, #20
    24ec:	bd30      	pop	{r4, r5, pc}
    24ee:	46c0      	nop			; (mov r8, r8)
    24f0:	0000b3ac 	.word	0x0000b3ac

000024f4 <_ZN29BLEUnsignedCharCharacteristicC1EPKch>:
    24f4:	b510      	push	{r4, lr}
    24f6:	0004      	movs	r4, r0
    24f8:	f7ff ffe4 	bl	24c4 <_ZN22BLETypedCharacteristicIhEC1EPKch>
    24fc:	4b01      	ldr	r3, [pc, #4]	; (2504 <_ZN29BLEUnsignedCharCharacteristicC1EPKch+0x10>)
    24fe:	0020      	movs	r0, r4
    2500:	6023      	str	r3, [r4, #0]
    2502:	bd10      	pop	{r4, pc}
    2504:	0000b3bc 	.word	0x0000b3bc

00002508 <_ZN21BLEByteCharacteristicC1EPKch>:
    2508:	b510      	push	{r4, lr}
    250a:	0004      	movs	r4, r0
    250c:	f7ff ffda 	bl	24c4 <_ZN22BLETypedCharacteristicIhEC1EPKch>
    2510:	4b01      	ldr	r3, [pc, #4]	; (2518 <_ZN21BLEByteCharacteristicC1EPKch+0x10>)
    2512:	0020      	movs	r0, r4
    2514:	6023      	str	r3, [r4, #0]
    2516:	bd10      	pop	{r4, pc}
    2518:	0000b3cc 	.word	0x0000b3cc

0000251c <_ZN7BLEUuidC1EPKc>:
    251c:	b5f0      	push	{r4, r5, r6, r7, lr}
    251e:	2500      	movs	r5, #0
    2520:	0004      	movs	r4, r0
    2522:	000f      	movs	r7, r1
    2524:	b085      	sub	sp, #20
    2526:	ae03      	add	r6, sp, #12
    2528:	c002      	stmia	r0!, {r1}
    252a:	2210      	movs	r2, #16
    252c:	0029      	movs	r1, r5
    252e:	7035      	strb	r5, [r6, #0]
    2530:	7075      	strb	r5, [r6, #1]
    2532:	70b5      	strb	r5, [r6, #2]
    2534:	f006 fd78 	bl	9028 <memset>
    2538:	7525      	strb	r5, [r4, #20]
    253a:	0038      	movs	r0, r7
    253c:	f007 fada 	bl	9af4 <strlen>
    2540:	1e45      	subs	r5, r0, #1
    2542:	7d23      	ldrb	r3, [r4, #20]
    2544:	9301      	str	r3, [sp, #4]
    2546:	2d00      	cmp	r5, #0
    2548:	db18      	blt.n	257c <_ZN7BLEUuidC1EPKc+0x60>
    254a:	2b0f      	cmp	r3, #15
    254c:	dc16      	bgt.n	257c <_ZN7BLEUuidC1EPKc+0x60>
    254e:	5d7a      	ldrb	r2, [r7, r5]
    2550:	2a2d      	cmp	r2, #45	; 0x2d
    2552:	d102      	bne.n	255a <_ZN7BLEUuidC1EPKc+0x3e>
    2554:	3501      	adds	r5, #1
    2556:	3d02      	subs	r5, #2
    2558:	e7f3      	b.n	2542 <_ZN7BLEUuidC1EPKc+0x26>
    255a:	197b      	adds	r3, r7, r5
    255c:	3b01      	subs	r3, #1
    255e:	781b      	ldrb	r3, [r3, #0]
    2560:	7072      	strb	r2, [r6, #1]
    2562:	2100      	movs	r1, #0
    2564:	2210      	movs	r2, #16
    2566:	0030      	movs	r0, r6
    2568:	7033      	strb	r3, [r6, #0]
    256a:	f007 fb51 	bl	9c10 <strtoul>
    256e:	9b01      	ldr	r3, [sp, #4]
    2570:	18e3      	adds	r3, r4, r3
    2572:	7118      	strb	r0, [r3, #4]
    2574:	7d23      	ldrb	r3, [r4, #20]
    2576:	3301      	adds	r3, #1
    2578:	7523      	strb	r3, [r4, #20]
    257a:	e7ec      	b.n	2556 <_ZN7BLEUuidC1EPKc+0x3a>
    257c:	9b01      	ldr	r3, [sp, #4]
    257e:	2b02      	cmp	r3, #2
    2580:	dc04      	bgt.n	258c <_ZN7BLEUuidC1EPKc+0x70>
    2582:	2302      	movs	r3, #2
    2584:	0020      	movs	r0, r4
    2586:	7523      	strb	r3, [r4, #20]
    2588:	b005      	add	sp, #20
    258a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    258c:	2310      	movs	r3, #16
    258e:	e7f9      	b.n	2584 <_ZN7BLEUuidC1EPKc+0x68>

00002590 <_ZNK7BLEUuid3strEv>:
    2590:	6800      	ldr	r0, [r0, #0]
    2592:	4770      	bx	lr

00002594 <_ZNK7BLEUuid4dataEv>:
    2594:	3004      	adds	r0, #4
    2596:	4770      	bx	lr

00002598 <_ZNK7BLEUuid6lengthEv>:
    2598:	7d00      	ldrb	r0, [r0, #20]
    259a:	4770      	bx	lr

0000259c <_ZNK22BLELocalCharacteristic4typeEv>:
    259c:	4800      	ldr	r0, [pc, #0]	; (25a0 <_ZNK22BLELocalCharacteristic4typeEv+0x4>)
    259e:	4770      	bx	lr
    25a0:	00002803 	.word	0x00002803

000025a4 <_ZNK22BLELocalCharacteristic10propertiesEv>:
    25a4:	3001      	adds	r0, #1
    25a6:	7fc0      	ldrb	r0, [r0, #31]
    25a8:	4770      	bx	lr

000025aa <_ZNK22BLELocalCharacteristic9valueSizeEv>:
    25aa:	6a40      	ldr	r0, [r0, #36]	; 0x24
    25ac:	4770      	bx	lr

000025ae <_ZNK22BLELocalCharacteristic5valueEv>:
    25ae:	6a80      	ldr	r0, [r0, #40]	; 0x28
    25b0:	4770      	bx	lr

000025b2 <_ZNK22BLELocalCharacteristic11valueLengthEv>:
    25b2:	8d80      	ldrh	r0, [r0, #44]	; 0x2c
    25b4:	4770      	bx	lr
	...

000025b8 <_ZN22BLELocalCharacteristic10writeValueEPKhi>:
    25b8:	6a43      	ldr	r3, [r0, #36]	; 0x24
    25ba:	b570      	push	{r4, r5, r6, lr}
    25bc:	0015      	movs	r5, r2
    25be:	0004      	movs	r4, r0
    25c0:	000e      	movs	r6, r1
    25c2:	b292      	uxth	r2, r2
    25c4:	42ab      	cmp	r3, r5
    25c6:	dc00      	bgt.n	25ca <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x12>
    25c8:	b29a      	uxth	r2, r3
    25ca:	85a2      	strh	r2, [r4, #44]	; 0x2c
    25cc:	0031      	movs	r1, r6
    25ce:	6aa0      	ldr	r0, [r4, #40]	; 0x28
    25d0:	f006 fd0f 	bl	8ff2 <memcpy>
    25d4:	0023      	movs	r3, r4
    25d6:	332e      	adds	r3, #46	; 0x2e
    25d8:	781b      	ldrb	r3, [r3, #0]
    25da:	2b00      	cmp	r3, #0
    25dc:	d001      	beq.n	25e2 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x2a>
    25de:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
    25e0:	85a3      	strh	r3, [r4, #44]	; 0x2c
    25e2:	1c63      	adds	r3, r4, #1
    25e4:	7fdb      	ldrb	r3, [r3, #31]
    25e6:	069a      	lsls	r2, r3, #26
    25e8:	d50b      	bpl.n	2602 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x4a>
    25ea:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
    25ec:	0792      	lsls	r2, r2, #30
    25ee:	d508      	bpl.n	2602 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x4a>
    25f0:	8e21      	ldrh	r1, [r4, #48]	; 0x30
    25f2:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
    25f4:	3101      	adds	r1, #1
    25f6:	b289      	uxth	r1, r1
    25f8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    25fa:	4819      	ldr	r0, [pc, #100]	; (2660 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0xa8>)
    25fc:	f000 fce6 	bl	2fcc <_ZN8ATTClass9handleIndEtPKhi>
    2600:	bd70      	pop	{r4, r5, r6, pc}
    2602:	06db      	lsls	r3, r3, #27
    2604:	d50b      	bpl.n	261e <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x66>
    2606:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
    2608:	07db      	lsls	r3, r3, #31
    260a:	d508      	bpl.n	261e <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x66>
    260c:	8e21      	ldrh	r1, [r4, #48]	; 0x30
    260e:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
    2610:	3101      	adds	r1, #1
    2612:	b289      	uxth	r1, r1
    2614:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    2616:	4812      	ldr	r0, [pc, #72]	; (2660 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0xa8>)
    2618:	f000 fc9c 	bl	2f54 <_ZN8ATTClass12handleNotifyEtPKhi>
    261c:	e7f0      	b.n	2600 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x48>
    261e:	0023      	movs	r3, r4
    2620:	3332      	adds	r3, #50	; 0x32
    2622:	781b      	ldrb	r3, [r3, #0]
    2624:	2b00      	cmp	r3, #0
    2626:	d101      	bne.n	262c <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x74>
    2628:	2001      	movs	r0, #1
    262a:	e7e9      	b.n	2600 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x48>
    262c:	0021      	movs	r1, r4
    262e:	480d      	ldr	r0, [pc, #52]	; (2664 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0xac>)
    2630:	f001 fd08 	bl	4044 <_ZNK9GATTClass28serviceUuidForCharacteristicEP22BLELocalCharacteristic>
    2634:	4c0c      	ldr	r4, [pc, #48]	; (2668 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0xb0>)
    2636:	0001      	movs	r1, r0
    2638:	002b      	movs	r3, r5
    263a:	0020      	movs	r0, r4
    263c:	0032      	movs	r2, r6
    263e:	f001 fc5f 	bl	3f00 <_ZN8GAPClass24setAdvertisedServiceDataEtPKhi>
    2642:	4807      	ldr	r0, [pc, #28]	; (2660 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0xa8>)
    2644:	f000 fc3e 	bl	2ec4 <_ZNK8ATTClass9connectedEv>
    2648:	2800      	cmp	r0, #0
    264a:	d1ed      	bne.n	2628 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x70>
    264c:	0020      	movs	r0, r4
    264e:	f001 fba5 	bl	3d9c <_ZN8GAPClass11advertisingEv>
    2652:	2800      	cmp	r0, #0
    2654:	d0e8      	beq.n	2628 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x70>
    2656:	0020      	movs	r0, r4
    2658:	f001 fba2 	bl	3da0 <_ZN8GAPClass9advertiseEv>
    265c:	e7e4      	b.n	2628 <_ZN22BLELocalCharacteristic10writeValueEPKhi+0x70>
    265e:	46c0      	nop			; (mov r8, r8)
    2660:	200002c8 	.word	0x200002c8
    2664:	20000314 	.word	0x20000314
    2668:	200002ec 	.word	0x200002ec

0000266c <_ZN22BLELocalCharacteristic10writeValueEPKc>:
    266c:	b570      	push	{r4, r5, r6, lr}
    266e:	0005      	movs	r5, r0
    2670:	0008      	movs	r0, r1
    2672:	000c      	movs	r4, r1
    2674:	f007 fa3e 	bl	9af4 <strlen>
    2678:	0021      	movs	r1, r4
    267a:	0002      	movs	r2, r0
    267c:	0028      	movs	r0, r5
    267e:	f7ff ff9b 	bl	25b8 <_ZN22BLELocalCharacteristic10writeValueEPKhi>
    2682:	bd70      	pop	{r4, r5, r6, pc}

00002684 <_ZN22BLELocalCharacteristic9setHandleEt>:
    2684:	8601      	strh	r1, [r0, #48]	; 0x30
    2686:	4770      	bx	lr

00002688 <_ZNK22BLELocalCharacteristic6handleEv>:
    2688:	8e00      	ldrh	r0, [r0, #48]	; 0x30
    268a:	4770      	bx	lr

0000268c <_ZNK22BLELocalCharacteristic11valueHandleEv>:
    268c:	8e00      	ldrh	r0, [r0, #48]	; 0x30
    268e:	3001      	adds	r0, #1
    2690:	b280      	uxth	r0, r0
    2692:	4770      	bx	lr

00002694 <_ZNK22BLELocalCharacteristic15descriptorCountEv>:
    2694:	6b80      	ldr	r0, [r0, #56]	; 0x38
    2696:	4770      	bx	lr

00002698 <_ZNK22BLELocalCharacteristic10descriptorEj>:
    2698:	6b82      	ldr	r2, [r0, #56]	; 0x38
    269a:	2300      	movs	r3, #0
    269c:	4291      	cmp	r1, r2
    269e:	d207      	bcs.n	26b0 <_ZNK22BLELocalCharacteristic10descriptorEj+0x18>
    26a0:	2200      	movs	r2, #0
    26a2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
    26a4:	4291      	cmp	r1, r2
    26a6:	d002      	beq.n	26ae <_ZNK22BLELocalCharacteristic10descriptorEj+0x16>
    26a8:	685b      	ldr	r3, [r3, #4]
    26aa:	3201      	adds	r2, #1
    26ac:	e7fa      	b.n	26a4 <_ZNK22BLELocalCharacteristic10descriptorEj+0xc>
    26ae:	681b      	ldr	r3, [r3, #0]
    26b0:	0018      	movs	r0, r3
    26b2:	4770      	bx	lr

000026b4 <_ZN13BLELinkedListIP18BLELocalDescriptorE3addES1_>:
    26b4:	b570      	push	{r4, r5, r6, lr}
    26b6:	0004      	movs	r4, r0
    26b8:	2008      	movs	r0, #8
    26ba:	000d      	movs	r5, r1
    26bc:	f002 fc60 	bl	4f80 <_Znwj>
    26c0:	2300      	movs	r3, #0
    26c2:	6043      	str	r3, [r0, #4]
    26c4:	6863      	ldr	r3, [r4, #4]
    26c6:	6005      	str	r5, [r0, #0]
    26c8:	2b00      	cmp	r3, #0
    26ca:	d105      	bne.n	26d8 <_ZN13BLELinkedListIP18BLELocalDescriptorE3addES1_+0x24>
    26cc:	6060      	str	r0, [r4, #4]
    26ce:	6823      	ldr	r3, [r4, #0]
    26d0:	60a0      	str	r0, [r4, #8]
    26d2:	3301      	adds	r3, #1
    26d4:	6023      	str	r3, [r4, #0]
    26d6:	bd70      	pop	{r4, r5, r6, pc}
    26d8:	68a3      	ldr	r3, [r4, #8]
    26da:	6058      	str	r0, [r3, #4]
    26dc:	e7f7      	b.n	26ce <_ZN13BLELinkedListIP18BLELocalDescriptorE3addES1_+0x1a>
	...

000026e0 <_ZN22BLELocalCharacteristicC1EPKchib>:
    26e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    26e2:	0004      	movs	r4, r0
    26e4:	001d      	movs	r5, r3
    26e6:	ab06      	add	r3, sp, #24
    26e8:	0016      	movs	r6, r2
    26ea:	781f      	ldrb	r7, [r3, #0]
    26ec:	f7ff fd1c 	bl	2128 <_ZN12BLEAttributeC1EPKc>
    26f0:	2280      	movs	r2, #128	; 0x80
    26f2:	4b1a      	ldr	r3, [pc, #104]	; (275c <_ZN22BLELocalCharacteristicC1EPKchib+0x7c>)
    26f4:	0092      	lsls	r2, r2, #2
    26f6:	3308      	adds	r3, #8
    26f8:	6023      	str	r3, [r4, #0]
    26fa:	1c63      	adds	r3, r4, #1
    26fc:	77de      	strb	r6, [r3, #31]
    26fe:	002b      	movs	r3, r5
    2700:	4295      	cmp	r5, r2
    2702:	dd00      	ble.n	2706 <_ZN22BLELocalCharacteristicC1EPKchib+0x26>
    2704:	0013      	movs	r3, r2
    2706:	6263      	str	r3, [r4, #36]	; 0x24
    2708:	0023      	movs	r3, r4
    270a:	2100      	movs	r1, #0
    270c:	0020      	movs	r0, r4
    270e:	332e      	adds	r3, #46	; 0x2e
    2710:	85a1      	strh	r1, [r4, #44]	; 0x2c
    2712:	2210      	movs	r2, #16
    2714:	701f      	strb	r7, [r3, #0]
    2716:	3044      	adds	r0, #68	; 0x44
    2718:	8621      	strh	r1, [r4, #48]	; 0x30
    271a:	7119      	strb	r1, [r3, #4]
    271c:	7159      	strb	r1, [r3, #5]
    271e:	86a1      	strh	r1, [r4, #52]	; 0x34
    2720:	63a1      	str	r1, [r4, #56]	; 0x38
    2722:	63e1      	str	r1, [r4, #60]	; 0x3c
    2724:	6421      	str	r1, [r4, #64]	; 0x40
    2726:	f006 fc7f 	bl	9028 <memset>
    272a:	2330      	movs	r3, #48	; 0x30
    272c:	421e      	tst	r6, r3
    272e:	d00e      	beq.n	274e <_ZN22BLELocalCharacteristicC1EPKchib+0x6e>
    2730:	202c      	movs	r0, #44	; 0x2c
    2732:	f002 fc25 	bl	4f80 <_Znwj>
    2736:	0022      	movs	r2, r4
    2738:	4909      	ldr	r1, [pc, #36]	; (2760 <_ZN22BLELocalCharacteristicC1EPKchib+0x80>)
    273a:	2302      	movs	r3, #2
    273c:	3234      	adds	r2, #52	; 0x34
    273e:	0006      	movs	r6, r0
    2740:	f000 f8fe 	bl	2940 <_ZN18BLELocalDescriptorC1EPKcPKhi>
    2744:	0020      	movs	r0, r4
    2746:	0031      	movs	r1, r6
    2748:	3038      	adds	r0, #56	; 0x38
    274a:	f7ff ffb3 	bl	26b4 <_ZN13BLELinkedListIP18BLELocalDescriptorE3addES1_>
    274e:	0028      	movs	r0, r5
    2750:	f006 fc1a 	bl	8f88 <malloc>
    2754:	62a0      	str	r0, [r4, #40]	; 0x28
    2756:	0020      	movs	r0, r4
    2758:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    275a:	46c0      	nop			; (mov r8, r8)
    275c:	0000b3dc 	.word	0x0000b3dc
    2760:	0000b3d4 	.word	0x0000b3d4

00002764 <_ZN13BLELinkedListIP18BLELocalDescriptorE5clearEv>:
    2764:	b570      	push	{r4, r5, r6, lr}
    2766:	2500      	movs	r5, #0
    2768:	0004      	movs	r4, r0
    276a:	6840      	ldr	r0, [r0, #4]
    276c:	6823      	ldr	r3, [r4, #0]
    276e:	429d      	cmp	r5, r3
    2770:	d205      	bcs.n	277e <_ZN13BLELinkedListIP18BLELocalDescriptorE5clearEv+0x1a>
    2772:	6846      	ldr	r6, [r0, #4]
    2774:	3501      	adds	r5, #1
    2776:	f002 fc07 	bl	4f88 <_ZdlPv>
    277a:	0030      	movs	r0, r6
    277c:	e7f6      	b.n	276c <_ZN13BLELinkedListIP18BLELocalDescriptorE5clearEv+0x8>
    277e:	2300      	movs	r3, #0
    2780:	6023      	str	r3, [r4, #0]
    2782:	6063      	str	r3, [r4, #4]
    2784:	60a3      	str	r3, [r4, #8]
    2786:	bd70      	pop	{r4, r5, r6, pc}

00002788 <_ZN22BLELocalCharacteristicD1Ev>:
    2788:	b570      	push	{r4, r5, r6, lr}
    278a:	0004      	movs	r4, r0
    278c:	2500      	movs	r5, #0
    278e:	4b16      	ldr	r3, [pc, #88]	; (27e8 <_ZN22BLELocalCharacteristicD1Ev+0x60>)
    2790:	3308      	adds	r3, #8
    2792:	6003      	str	r3, [r0, #0]
    2794:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    2796:	429d      	cmp	r5, r3
    2798:	d214      	bcs.n	27c4 <_ZN22BLELocalCharacteristicD1Ev+0x3c>
    279a:	2200      	movs	r2, #0
    279c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    279e:	4295      	cmp	r5, r2
    27a0:	d002      	beq.n	27a8 <_ZN22BLELocalCharacteristicD1Ev+0x20>
    27a2:	685b      	ldr	r3, [r3, #4]
    27a4:	3201      	adds	r2, #1
    27a6:	e7fa      	b.n	279e <_ZN22BLELocalCharacteristicD1Ev+0x16>
    27a8:	681e      	ldr	r6, [r3, #0]
    27aa:	0030      	movs	r0, r6
    27ac:	f7ff fcde 	bl	216c <_ZN12BLEAttribute7releaseEv>
    27b0:	2800      	cmp	r0, #0
    27b2:	dc05      	bgt.n	27c0 <_ZN22BLELocalCharacteristicD1Ev+0x38>
    27b4:	2e00      	cmp	r6, #0
    27b6:	d003      	beq.n	27c0 <_ZN22BLELocalCharacteristicD1Ev+0x38>
    27b8:	6833      	ldr	r3, [r6, #0]
    27ba:	0030      	movs	r0, r6
    27bc:	685b      	ldr	r3, [r3, #4]
    27be:	4798      	blx	r3
    27c0:	3501      	adds	r5, #1
    27c2:	e7e7      	b.n	2794 <_ZN22BLELocalCharacteristicD1Ev+0xc>
    27c4:	0025      	movs	r5, r4
    27c6:	3538      	adds	r5, #56	; 0x38
    27c8:	0028      	movs	r0, r5
    27ca:	f7ff ffcb 	bl	2764 <_ZN13BLELinkedListIP18BLELocalDescriptorE5clearEv>
    27ce:	6aa0      	ldr	r0, [r4, #40]	; 0x28
    27d0:	2800      	cmp	r0, #0
    27d2:	d001      	beq.n	27d8 <_ZN22BLELocalCharacteristicD1Ev+0x50>
    27d4:	f006 fbe2 	bl	8f9c <free>
    27d8:	0028      	movs	r0, r5
    27da:	f7ff ffc3 	bl	2764 <_ZN13BLELinkedListIP18BLELocalDescriptorE5clearEv>
    27de:	0020      	movs	r0, r4
    27e0:	f7ff fc98 	bl	2114 <_ZN12BLEAttributeD1Ev>
    27e4:	0020      	movs	r0, r4
    27e6:	bd70      	pop	{r4, r5, r6, pc}
    27e8:	0000b3dc 	.word	0x0000b3dc

000027ec <_ZN22BLELocalCharacteristicD0Ev>:
    27ec:	b510      	push	{r4, lr}
    27ee:	0004      	movs	r4, r0
    27f0:	f7ff ffca 	bl	2788 <_ZN22BLELocalCharacteristicD1Ev>
    27f4:	0020      	movs	r0, r4
    27f6:	f002 fbc7 	bl	4f88 <_ZdlPv>
    27fa:	0020      	movs	r0, r4
    27fc:	bd10      	pop	{r4, pc}
	...

00002800 <_ZN22BLELocalCharacteristic9readValueE9BLEDevicetPhi>:
    2800:	b5f0      	push	{r4, r5, r6, r7, lr}
    2802:	6cc6      	ldr	r6, [r0, #76]	; 0x4c
    2804:	b089      	sub	sp, #36	; 0x24
    2806:	0004      	movs	r4, r0
    2808:	0017      	movs	r7, r2
    280a:	9301      	str	r3, [sp, #4]
    280c:	2e00      	cmp	r6, #0
    280e:	d018      	beq.n	2842 <_ZN22BLELocalCharacteristic9readValueE9BLEDevicetPhi+0x42>
    2810:	2012      	movs	r0, #18
    2812:	4b10      	ldr	r3, [pc, #64]	; (2854 <_ZN22BLELocalCharacteristic9readValueE9BLEDevicetPhi+0x54>)
    2814:	ad05      	add	r5, sp, #20
    2816:	9305      	str	r3, [sp, #20]
    2818:	888b      	ldrh	r3, [r1, #4]
    281a:	2206      	movs	r2, #6
    281c:	80ab      	strh	r3, [r5, #4]
    281e:	ab02      	add	r3, sp, #8
    2820:	18c0      	adds	r0, r0, r3
    2822:	3106      	adds	r1, #6
    2824:	f006 fbe5 	bl	8ff2 <memcpy>
    2828:	0021      	movs	r1, r4
    282a:	a803      	add	r0, sp, #12
    282c:	f7ff fcc4 	bl	21b8 <_ZN17BLECharacteristicC1EP22BLELocalCharacteristic>
    2830:	a903      	add	r1, sp, #12
    2832:	0028      	movs	r0, r5
    2834:	47b0      	blx	r6
    2836:	a803      	add	r0, sp, #12
    2838:	f7ff fc9e 	bl	2178 <_ZN17BLECharacteristicD1Ev>
    283c:	0028      	movs	r0, r5
    283e:	f7ff fced 	bl	221c <_ZN9BLEDeviceD1Ev>
    2842:	6aa1      	ldr	r1, [r4, #40]	; 0x28
    2844:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    2846:	19c9      	adds	r1, r1, r7
    2848:	9801      	ldr	r0, [sp, #4]
    284a:	f006 fbd2 	bl	8ff2 <memcpy>
    284e:	b009      	add	sp, #36	; 0x24
    2850:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2852:	46c0      	nop			; (mov r8, r8)
    2854:	0000b368 	.word	0x0000b368

00002858 <_ZN22BLELocalCharacteristic10writeValueE9BLEDevicePKhi>:
    2858:	b5f0      	push	{r4, r5, r6, r7, lr}
    285a:	000d      	movs	r5, r1
    285c:	0011      	movs	r1, r2
    285e:	0002      	movs	r2, r0
    2860:	0004      	movs	r4, r0
    2862:	2001      	movs	r0, #1
    2864:	3233      	adds	r2, #51	; 0x33
    2866:	7010      	strb	r0, [r2, #0]
    2868:	b087      	sub	sp, #28
    286a:	001a      	movs	r2, r3
    286c:	0020      	movs	r0, r4
    286e:	f7ff fea3 	bl	25b8 <_ZN22BLELocalCharacteristic10writeValueEPKhi>
    2872:	6d27      	ldr	r7, [r4, #80]	; 0x50
    2874:	2f00      	cmp	r7, #0
    2876:	d017      	beq.n	28a8 <_ZN22BLELocalCharacteristic10writeValueE9BLEDevicePKhi+0x50>
    2878:	2012      	movs	r0, #18
    287a:	4b0c      	ldr	r3, [pc, #48]	; (28ac <_ZN22BLELocalCharacteristic10writeValueE9BLEDevicePKhi+0x54>)
    287c:	2206      	movs	r2, #6
    287e:	9303      	str	r3, [sp, #12]
    2880:	88ab      	ldrh	r3, [r5, #4]
    2882:	ae03      	add	r6, sp, #12
    2884:	1da9      	adds	r1, r5, #6
    2886:	4468      	add	r0, sp
    2888:	80b3      	strh	r3, [r6, #4]
    288a:	f006 fbb2 	bl	8ff2 <memcpy>
    288e:	0021      	movs	r1, r4
    2890:	a801      	add	r0, sp, #4
    2892:	f7ff fc91 	bl	21b8 <_ZN17BLECharacteristicC1EP22BLELocalCharacteristic>
    2896:	a901      	add	r1, sp, #4
    2898:	0030      	movs	r0, r6
    289a:	47b8      	blx	r7
    289c:	a801      	add	r0, sp, #4
    289e:	f7ff fc6b 	bl	2178 <_ZN17BLECharacteristicD1Ev>
    28a2:	0030      	movs	r0, r6
    28a4:	f7ff fcba 	bl	221c <_ZN9BLEDeviceD1Ev>
    28a8:	b007      	add	sp, #28
    28aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    28ac:	0000b368 	.word	0x0000b368

000028b0 <_ZN22BLELocalCharacteristic14writeCccdValueE9BLEDevicet>:
    28b0:	2303      	movs	r3, #3
    28b2:	b570      	push	{r4, r5, r6, lr}
    28b4:	401a      	ands	r2, r3
    28b6:	8e83      	ldrh	r3, [r0, #52]	; 0x34
    28b8:	b086      	sub	sp, #24
    28ba:	0004      	movs	r4, r0
    28bc:	4293      	cmp	r3, r2
    28be:	d020      	beq.n	2902 <_ZN22BLELocalCharacteristic14writeCccdValueE9BLEDevicet+0x52>
    28c0:	8682      	strh	r2, [r0, #52]	; 0x34
    28c2:	4253      	negs	r3, r2
    28c4:	415a      	adcs	r2, r3
    28c6:	3210      	adds	r2, #16
    28c8:	0092      	lsls	r2, r2, #2
    28ca:	1882      	adds	r2, r0, r2
    28cc:	6856      	ldr	r6, [r2, #4]
    28ce:	2e00      	cmp	r6, #0
    28d0:	d017      	beq.n	2902 <_ZN22BLELocalCharacteristic14writeCccdValueE9BLEDevicet+0x52>
    28d2:	2012      	movs	r0, #18
    28d4:	4b0c      	ldr	r3, [pc, #48]	; (2908 <_ZN22BLELocalCharacteristic14writeCccdValueE9BLEDevicet+0x58>)
    28d6:	2206      	movs	r2, #6
    28d8:	9303      	str	r3, [sp, #12]
    28da:	888b      	ldrh	r3, [r1, #4]
    28dc:	ad03      	add	r5, sp, #12
    28de:	3106      	adds	r1, #6
    28e0:	4468      	add	r0, sp
    28e2:	80ab      	strh	r3, [r5, #4]
    28e4:	f006 fb85 	bl	8ff2 <memcpy>
    28e8:	0021      	movs	r1, r4
    28ea:	a801      	add	r0, sp, #4
    28ec:	f7ff fc64 	bl	21b8 <_ZN17BLECharacteristicC1EP22BLELocalCharacteristic>
    28f0:	a901      	add	r1, sp, #4
    28f2:	0028      	movs	r0, r5
    28f4:	47b0      	blx	r6
    28f6:	a801      	add	r0, sp, #4
    28f8:	f7ff fc3e 	bl	2178 <_ZN17BLECharacteristicD1Ev>
    28fc:	0028      	movs	r0, r5
    28fe:	f7ff fc8d 	bl	221c <_ZN9BLEDeviceD1Ev>
    2902:	b006      	add	sp, #24
    2904:	bd70      	pop	{r4, r5, r6, pc}
    2906:	46c0      	nop			; (mov r8, r8)
    2908:	0000b368 	.word	0x0000b368

0000290c <_ZNK18BLELocalDescriptor4typeEv>:
    290c:	20a4      	movs	r0, #164	; 0xa4
    290e:	0180      	lsls	r0, r0, #6
    2910:	4770      	bx	lr
	...

00002914 <_ZN18BLELocalDescriptorD1Ev>:
    2914:	b510      	push	{r4, lr}
    2916:	0004      	movs	r4, r0
    2918:	4b03      	ldr	r3, [pc, #12]	; (2928 <_ZN18BLELocalDescriptorD1Ev+0x14>)
    291a:	3308      	adds	r3, #8
    291c:	6003      	str	r3, [r0, #0]
    291e:	f7ff fbf9 	bl	2114 <_ZN12BLEAttributeD1Ev>
    2922:	0020      	movs	r0, r4
    2924:	bd10      	pop	{r4, pc}
    2926:	46c0      	nop			; (mov r8, r8)
    2928:	0000b3f0 	.word	0x0000b3f0

0000292c <_ZN18BLELocalDescriptorD0Ev>:
    292c:	b510      	push	{r4, lr}
    292e:	0004      	movs	r4, r0
    2930:	f7ff fff0 	bl	2914 <_ZN18BLELocalDescriptorD1Ev>
    2934:	0020      	movs	r0, r4
    2936:	f002 fb27 	bl	4f88 <_ZdlPv>
    293a:	0020      	movs	r0, r4
    293c:	bd10      	pop	{r4, pc}
	...

00002940 <_ZN18BLELocalDescriptorC1EPKcPKhi>:
    2940:	b570      	push	{r4, r5, r6, lr}
    2942:	0004      	movs	r4, r0
    2944:	0016      	movs	r6, r2
    2946:	001d      	movs	r5, r3
    2948:	f7ff fbee 	bl	2128 <_ZN12BLEAttributeC1EPKc>
    294c:	2280      	movs	r2, #128	; 0x80
    294e:	4b06      	ldr	r3, [pc, #24]	; (2968 <_ZN18BLELocalDescriptorC1EPKcPKhi+0x28>)
    2950:	6226      	str	r6, [r4, #32]
    2952:	3308      	adds	r3, #8
    2954:	6023      	str	r3, [r4, #0]
    2956:	0092      	lsls	r2, r2, #2
    2958:	4295      	cmp	r5, r2
    295a:	dd00      	ble.n	295e <_ZN18BLELocalDescriptorC1EPKcPKhi+0x1e>
    295c:	0015      	movs	r5, r2
    295e:	2300      	movs	r3, #0
    2960:	6265      	str	r5, [r4, #36]	; 0x24
    2962:	0020      	movs	r0, r4
    2964:	8523      	strh	r3, [r4, #40]	; 0x28
    2966:	bd70      	pop	{r4, r5, r6, pc}
    2968:	0000b3f0 	.word	0x0000b3f0

0000296c <_ZNK18BLELocalDescriptor9valueSizeEv>:
    296c:	6a40      	ldr	r0, [r0, #36]	; 0x24
    296e:	4770      	bx	lr

00002970 <_ZNK18BLELocalDescriptor5valueEv>:
    2970:	6a00      	ldr	r0, [r0, #32]
    2972:	4770      	bx	lr

00002974 <_ZN18BLELocalDescriptor9setHandleEt>:
    2974:	8501      	strh	r1, [r0, #40]	; 0x28
    2976:	4770      	bx	lr

00002978 <_ZNK14BLELocalDevicecvbEv>:
    2978:	2001      	movs	r0, #1
    297a:	4770      	bx	lr

0000297c <_ZNK14BLELocalDeviceeqERK9BLEDevice>:
    297c:	1a40      	subs	r0, r0, r1
    297e:	4241      	negs	r1, r0
    2980:	4148      	adcs	r0, r1
    2982:	b2c0      	uxtb	r0, r0
    2984:	4770      	bx	lr

00002986 <_ZNK14BLELocalDeviceneERK9BLEDevice>:
    2986:	1a40      	subs	r0, r0, r1
    2988:	1e41      	subs	r1, r0, #1
    298a:	4188      	sbcs	r0, r1
    298c:	b2c0      	uxtb	r0, r0
    298e:	4770      	bx	lr

00002990 <_ZN14BLELocalDeviceD1Ev>:
    2990:	b510      	push	{r4, lr}
    2992:	0004      	movs	r4, r0
    2994:	4b03      	ldr	r3, [pc, #12]	; (29a4 <_ZN14BLELocalDeviceD1Ev+0x14>)
    2996:	3308      	adds	r3, #8
    2998:	6003      	str	r3, [r0, #0]
    299a:	f7ff fc3f 	bl	221c <_ZN9BLEDeviceD1Ev>
    299e:	0020      	movs	r0, r4
    29a0:	bd10      	pop	{r4, pc}
    29a2:	46c0      	nop			; (mov r8, r8)
    29a4:	0000b404 	.word	0x0000b404

000029a8 <_ZN14BLELocalDeviceD0Ev>:
    29a8:	b510      	push	{r4, lr}
    29aa:	0004      	movs	r4, r0
    29ac:	f7ff fff0 	bl	2990 <_ZN14BLELocalDeviceD1Ev>
    29b0:	0020      	movs	r0, r4
    29b2:	f002 fae9 	bl	4f88 <_ZdlPv>
    29b6:	0020      	movs	r0, r4
    29b8:	bd10      	pop	{r4, pc}
	...

000029bc <_ZNK14BLELocalDevice9connectedEv>:
    29bc:	b510      	push	{r4, lr}
    29be:	4803      	ldr	r0, [pc, #12]	; (29cc <_ZNK14BLELocalDevice9connectedEv+0x10>)
    29c0:	f001 fda0 	bl	4504 <_ZN8HCIClass4pollEv>
    29c4:	4802      	ldr	r0, [pc, #8]	; (29d0 <_ZNK14BLELocalDevice9connectedEv+0x14>)
    29c6:	f000 fa7d 	bl	2ec4 <_ZNK8ATTClass9connectedEv>
    29ca:	bd10      	pop	{r4, pc}
    29cc:	20000480 	.word	0x20000480
    29d0:	200002c8 	.word	0x200002c8

000029d4 <_ZN14BLELocalDevice10disconnectEv>:
    29d4:	b510      	push	{r4, lr}
    29d6:	4802      	ldr	r0, [pc, #8]	; (29e0 <_ZN14BLELocalDevice10disconnectEv+0xc>)
    29d8:	f000 fa8e 	bl	2ef8 <_ZN8ATTClass10disconnectEv>
    29dc:	bd10      	pop	{r4, pc}
    29de:	46c0      	nop			; (mov r8, r8)
    29e0:	200002c8 	.word	0x200002c8

000029e4 <_ZNK14BLELocalDevice7addressEv>:
    29e4:	b530      	push	{r4, r5, lr}
    29e6:	0005      	movs	r5, r0
    29e8:	b08d      	sub	sp, #52	; 0x34
    29ea:	ac05      	add	r4, sp, #20
    29ec:	2206      	movs	r2, #6
    29ee:	2100      	movs	r1, #0
    29f0:	0020      	movs	r0, r4
    29f2:	f006 fb19 	bl	9028 <memset>
    29f6:	0021      	movs	r1, r4
    29f8:	480b      	ldr	r0, [pc, #44]	; (2a28 <_ZNK14BLELocalDevice7addressEv+0x44>)
    29fa:	f001 fe07 	bl	460c <_ZN8HCIClass10readBdAddrEPh>
    29fe:	7821      	ldrb	r1, [r4, #0]
    2a00:	7923      	ldrb	r3, [r4, #4]
    2a02:	7962      	ldrb	r2, [r4, #5]
    2a04:	9103      	str	r1, [sp, #12]
    2a06:	7861      	ldrb	r1, [r4, #1]
    2a08:	a807      	add	r0, sp, #28
    2a0a:	9102      	str	r1, [sp, #8]
    2a0c:	78a1      	ldrb	r1, [r4, #2]
    2a0e:	9101      	str	r1, [sp, #4]
    2a10:	78e1      	ldrb	r1, [r4, #3]
    2a12:	9100      	str	r1, [sp, #0]
    2a14:	4905      	ldr	r1, [pc, #20]	; (2a2c <_ZNK14BLELocalDevice7addressEv+0x48>)
    2a16:	f007 f843 	bl	9aa0 <siprintf>
    2a1a:	a907      	add	r1, sp, #28
    2a1c:	0028      	movs	r0, r5
    2a1e:	f003 fee2 	bl	67e6 <_ZN6StringC1EPKc>
    2a22:	0028      	movs	r0, r5
    2a24:	b00d      	add	sp, #52	; 0x34
    2a26:	bd30      	pop	{r4, r5, pc}
    2a28:	20000480 	.word	0x20000480
    2a2c:	0000b340 	.word	0x0000b340

00002a30 <_ZN14BLELocalDeviceC1Ev>:
    2a30:	b510      	push	{r4, lr}
    2a32:	0004      	movs	r4, r0
    2a34:	f7ff fc92 	bl	235c <_ZN9BLEDeviceC1Ev>
    2a38:	4b02      	ldr	r3, [pc, #8]	; (2a44 <_ZN14BLELocalDeviceC1Ev+0x14>)
    2a3a:	0020      	movs	r0, r4
    2a3c:	3308      	adds	r3, #8
    2a3e:	6023      	str	r3, [r4, #0]
    2a40:	bd10      	pop	{r4, pc}
    2a42:	46c0      	nop			; (mov r8, r8)
    2a44:	0000b404 	.word	0x0000b404

00002a48 <_ZN14BLELocalDevice3endEv>:
    2a48:	b510      	push	{r4, lr}
    2a4a:	4805      	ldr	r0, [pc, #20]	; (2a60 <_ZN14BLELocalDevice3endEv+0x18>)
    2a4c:	f001 fae2 	bl	4014 <_ZN9GATTClass3endEv>
    2a50:	4804      	ldr	r0, [pc, #16]	; (2a64 <_ZN14BLELocalDevice3endEv+0x1c>)
    2a52:	f001 fc15 	bl	4280 <_ZN8HCIClass3endEv>
    2a56:	2101      	movs	r1, #1
    2a58:	201f      	movs	r0, #31
    2a5a:	f003 fde7 	bl	662c <digitalWrite>
    2a5e:	bd10      	pop	{r4, pc}
    2a60:	20000314 	.word	0x20000314
    2a64:	20000480 	.word	0x20000480

00002a68 <_ZN14BLELocalDevice5beginEv>:
    2a68:	b530      	push	{r4, r5, lr}
    2a6a:	2101      	movs	r1, #1
    2a6c:	b087      	sub	sp, #28
    2a6e:	0005      	movs	r5, r0
    2a70:	201c      	movs	r0, #28
    2a72:	f003 fd8f 	bl	6594 <pinMode>
    2a76:	2101      	movs	r1, #1
    2a78:	201f      	movs	r0, #31
    2a7a:	f003 fd8b 	bl	6594 <pinMode>
    2a7e:	2100      	movs	r1, #0
    2a80:	201c      	movs	r0, #28
    2a82:	f003 fdd3 	bl	662c <digitalWrite>
    2a86:	2101      	movs	r1, #1
    2a88:	201f      	movs	r0, #31
    2a8a:	f003 fdcf 	bl	662c <digitalWrite>
    2a8e:	2064      	movs	r0, #100	; 0x64
    2a90:	f002 fa30 	bl	4ef4 <delay>
    2a94:	2100      	movs	r1, #0
    2a96:	201f      	movs	r0, #31
    2a98:	f003 fdc8 	bl	662c <digitalWrite>
    2a9c:	481d      	ldr	r0, [pc, #116]	; (2b14 <_ZN14BLELocalDevice5beginEv+0xac>)
    2a9e:	f002 fa29 	bl	4ef4 <delay>
    2aa2:	4c1d      	ldr	r4, [pc, #116]	; (2b18 <_ZN14BLELocalDevice5beginEv+0xb0>)
    2aa4:	0020      	movs	r0, r4
    2aa6:	f001 fbdf 	bl	4268 <_ZN8HCIClass5beginEv>
    2aaa:	2800      	cmp	r0, #0
    2aac:	d105      	bne.n	2aba <_ZN14BLELocalDevice5beginEv+0x52>
    2aae:	0028      	movs	r0, r5
    2ab0:	f7ff ffca 	bl	2a48 <_ZN14BLELocalDevice3endEv>
    2ab4:	2000      	movs	r0, #0
    2ab6:	b007      	add	sp, #28
    2ab8:	bd30      	pop	{r4, r5, pc}
    2aba:	2064      	movs	r0, #100	; 0x64
    2abc:	f002 fa1a 	bl	4ef4 <delay>
    2ac0:	0020      	movs	r0, r4
    2ac2:	f001 fd73 	bl	45ac <_ZN8HCIClass5resetEv>
    2ac6:	2800      	cmp	r0, #0
    2ac8:	d1f1      	bne.n	2aae <_ZN14BLELocalDevice5beginEv+0x46>
    2aca:	ab05      	add	r3, sp, #20
    2acc:	9301      	str	r3, [sp, #4]
    2ace:	2312      	movs	r3, #18
    2ad0:	446b      	add	r3, sp
    2ad2:	9300      	str	r3, [sp, #0]
    2ad4:	210d      	movs	r1, #13
    2ad6:	230e      	movs	r3, #14
    2ad8:	aa04      	add	r2, sp, #16
    2ada:	446b      	add	r3, sp
    2adc:	4469      	add	r1, sp
    2ade:	0020      	movs	r0, r4
    2ae0:	f001 fd6e 	bl	45c0 <_ZN8HCIClass16readLocalVersionERhRtS0_S1_S1_>
    2ae4:	2800      	cmp	r0, #0
    2ae6:	d1e2      	bne.n	2aae <_ZN14BLELocalDevice5beginEv+0x46>
    2ae8:	2201      	movs	r2, #1
    2aea:	4b0c      	ldr	r3, [pc, #48]	; (2b1c <_ZN14BLELocalDevice5beginEv+0xb4>)
    2aec:	4252      	negs	r2, r2
    2aee:	0020      	movs	r0, r4
    2af0:	f001 fdbc 	bl	466c <_ZN8HCIClass12setEventMaskEy>
    2af4:	2800      	cmp	r0, #0
    2af6:	d1da      	bne.n	2aae <_ZN14BLELocalDevice5beginEv+0x46>
    2af8:	220f      	movs	r2, #15
    2afa:	2116      	movs	r1, #22
    2afc:	446a      	add	r2, sp
    2afe:	4469      	add	r1, sp
    2b00:	0020      	movs	r0, r4
    2b02:	f001 fdbf 	bl	4684 <_ZN8HCIClass16readLeBufferSizeERtRh>
    2b06:	2800      	cmp	r0, #0
    2b08:	d1d1      	bne.n	2aae <_ZN14BLELocalDevice5beginEv+0x46>
    2b0a:	4805      	ldr	r0, [pc, #20]	; (2b20 <_ZN14BLELocalDevice5beginEv+0xb8>)
    2b0c:	f001 fb40 	bl	4190 <_ZN9GATTClass5beginEv>
    2b10:	2001      	movs	r0, #1
    2b12:	e7d0      	b.n	2ab6 <_ZN14BLELocalDevice5beginEv+0x4e>
    2b14:	000002ee 	.word	0x000002ee
    2b18:	20000480 	.word	0x20000480
    2b1c:	3fffffff 	.word	0x3fffffff
    2b20:	20000314 	.word	0x20000314

00002b24 <_ZN14BLELocalDevice20setAdvertisedServiceERK10BLEService>:
    2b24:	b510      	push	{r4, lr}
    2b26:	0008      	movs	r0, r1
    2b28:	f7ff fc7a 	bl	2420 <_ZNK10BLEService4uuidEv>
    2b2c:	0001      	movs	r1, r0
    2b2e:	4802      	ldr	r0, [pc, #8]	; (2b38 <_ZN14BLELocalDevice20setAdvertisedServiceERK10BLEService+0x14>)
    2b30:	f001 f930 	bl	3d94 <_ZN8GAPClass24setAdvertisedServiceUuidEPKc>
    2b34:	bd10      	pop	{r4, pc}
    2b36:	46c0      	nop			; (mov r8, r8)
    2b38:	200002ec 	.word	0x200002ec

00002b3c <_ZN14BLELocalDevice12setLocalNameEPKc>:
    2b3c:	b510      	push	{r4, lr}
    2b3e:	4802      	ldr	r0, [pc, #8]	; (2b48 <_ZN14BLELocalDevice12setLocalNameEPKc+0xc>)
    2b40:	f001 f92a 	bl	3d98 <_ZN8GAPClass12setLocalNameEPKc>
    2b44:	bd10      	pop	{r4, pc}
    2b46:	46c0      	nop			; (mov r8, r8)
    2b48:	200002ec 	.word	0x200002ec

00002b4c <_ZN14BLELocalDevice10addServiceER10BLEService>:
    2b4c:	b510      	push	{r4, lr}
    2b4e:	4802      	ldr	r0, [pc, #8]	; (2b58 <_ZN14BLELocalDevice10addServiceER10BLEService+0xc>)
    2b50:	f001 fb38 	bl	41c4 <_ZN9GATTClass10addServiceER10BLEService>
    2b54:	bd10      	pop	{r4, pc}
    2b56:	46c0      	nop			; (mov r8, r8)
    2b58:	20000314 	.word	0x20000314

00002b5c <_ZN14BLELocalDevice9advertiseEv>:
    2b5c:	b510      	push	{r4, lr}
    2b5e:	4802      	ldr	r0, [pc, #8]	; (2b68 <_ZN14BLELocalDevice9advertiseEv+0xc>)
    2b60:	f001 f91e 	bl	3da0 <_ZN8GAPClass9advertiseEv>
    2b64:	bd10      	pop	{r4, pc}
    2b66:	46c0      	nop			; (mov r8, r8)
    2b68:	200002ec 	.word	0x200002ec

00002b6c <_ZN14BLELocalDevice7centralEv>:
    2b6c:	b510      	push	{r4, lr}
    2b6e:	0004      	movs	r4, r0
    2b70:	4804      	ldr	r0, [pc, #16]	; (2b84 <_ZN14BLELocalDevice7centralEv+0x18>)
    2b72:	f001 fcc7 	bl	4504 <_ZN8HCIClass4pollEv>
    2b76:	0020      	movs	r0, r4
    2b78:	4903      	ldr	r1, [pc, #12]	; (2b88 <_ZN14BLELocalDevice7centralEv+0x1c>)
    2b7a:	f000 f9d9 	bl	2f30 <_ZN8ATTClass7centralEv>
    2b7e:	0020      	movs	r0, r4
    2b80:	bd10      	pop	{r4, pc}
    2b82:	46c0      	nop			; (mov r8, r8)
    2b84:	20000480 	.word	0x20000480
    2b88:	200002c8 	.word	0x200002c8

00002b8c <_GLOBAL__sub_I__ZN14BLELocalDeviceC2Ev>:
    2b8c:	b510      	push	{r4, lr}
    2b8e:	4c05      	ldr	r4, [pc, #20]	; (2ba4 <_GLOBAL__sub_I__ZN14BLELocalDeviceC2Ev+0x18>)
    2b90:	0020      	movs	r0, r4
    2b92:	f7ff ff4d 	bl	2a30 <_ZN14BLELocalDeviceC1Ev>
    2b96:	4a04      	ldr	r2, [pc, #16]	; (2ba8 <_GLOBAL__sub_I__ZN14BLELocalDeviceC2Ev+0x1c>)
    2b98:	4904      	ldr	r1, [pc, #16]	; (2bac <_GLOBAL__sub_I__ZN14BLELocalDeviceC2Ev+0x20>)
    2b9a:	0020      	movs	r0, r4
    2b9c:	f004 fa74 	bl	7088 <__aeabi_atexit>
    2ba0:	bd10      	pop	{r4, pc}
    2ba2:	46c0      	nop			; (mov r8, r8)
    2ba4:	200002bc 	.word	0x200002bc
    2ba8:	20000000 	.word	0x20000000
    2bac:	00002991 	.word	0x00002991

00002bb0 <_ZN14BLELocalDevice4rssiEv>:
    2bb0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2bb2:	490a      	ldr	r1, [pc, #40]	; (2bdc <_ZN14BLELocalDevice4rssiEv+0x2c>)
    2bb4:	a801      	add	r0, sp, #4
    2bb6:	f000 f9bb 	bl	2f30 <_ZN8ATTClass7centralEv>
    2bba:	a801      	add	r0, sp, #4
    2bbc:	f7ff fb80 	bl	22c0 <_ZNK9BLEDevicecvbEv>
    2bc0:	247f      	movs	r4, #127	; 0x7f
    2bc2:	2800      	cmp	r0, #0
    2bc4:	d003      	beq.n	2bce <_ZN14BLELocalDevice4rssiEv+0x1e>
    2bc6:	a801      	add	r0, sp, #4
    2bc8:	f7ff fb6c 	bl	22a4 <_ZN9BLEDevice4rssiEv>
    2bcc:	0004      	movs	r4, r0
    2bce:	a801      	add	r0, sp, #4
    2bd0:	f7ff fb24 	bl	221c <_ZN9BLEDeviceD1Ev>
    2bd4:	0020      	movs	r0, r4
    2bd6:	b004      	add	sp, #16
    2bd8:	bd10      	pop	{r4, pc}
    2bda:	46c0      	nop			; (mov r8, r8)
    2bdc:	200002c8 	.word	0x200002c8

00002be0 <_ZNK15BLELocalService4typeEv>:
    2be0:	20a0      	movs	r0, #160	; 0xa0
    2be2:	0180      	lsls	r0, r0, #6
    2be4:	4770      	bx	lr
	...

00002be8 <_ZN15BLELocalServiceC1EPKc>:
    2be8:	b510      	push	{r4, lr}
    2bea:	0004      	movs	r4, r0
    2bec:	f7ff fa9c 	bl	2128 <_ZN12BLEAttributeC1EPKc>
    2bf0:	4b05      	ldr	r3, [pc, #20]	; (2c08 <_ZN15BLELocalServiceC1EPKc+0x20>)
    2bf2:	0020      	movs	r0, r4
    2bf4:	3308      	adds	r3, #8
    2bf6:	6023      	str	r3, [r4, #0]
    2bf8:	2300      	movs	r3, #0
    2bfa:	8423      	strh	r3, [r4, #32]
    2bfc:	8463      	strh	r3, [r4, #34]	; 0x22
    2bfe:	6263      	str	r3, [r4, #36]	; 0x24
    2c00:	62a3      	str	r3, [r4, #40]	; 0x28
    2c02:	62e3      	str	r3, [r4, #44]	; 0x2c
    2c04:	bd10      	pop	{r4, pc}
    2c06:	46c0      	nop			; (mov r8, r8)
    2c08:	0000b438 	.word	0x0000b438

00002c0c <_ZN15BLELocalService10setHandlesEtt>:
    2c0c:	8401      	strh	r1, [r0, #32]
    2c0e:	8442      	strh	r2, [r0, #34]	; 0x22
    2c10:	4770      	bx	lr

00002c12 <_ZNK15BLELocalService11startHandleEv>:
    2c12:	8c00      	ldrh	r0, [r0, #32]
    2c14:	4770      	bx	lr

00002c16 <_ZNK15BLELocalService9endHandleEv>:
    2c16:	8c40      	ldrh	r0, [r0, #34]	; 0x22
    2c18:	4770      	bx	lr

00002c1a <_ZNK15BLELocalService19characteristicCountEv>:
    2c1a:	6a40      	ldr	r0, [r0, #36]	; 0x24
    2c1c:	4770      	bx	lr

00002c1e <_ZNK15BLELocalService14characteristicEj>:
    2c1e:	6a42      	ldr	r2, [r0, #36]	; 0x24
    2c20:	2300      	movs	r3, #0
    2c22:	4291      	cmp	r1, r2
    2c24:	d207      	bcs.n	2c36 <_ZNK15BLELocalService14characteristicEj+0x18>
    2c26:	2200      	movs	r2, #0
    2c28:	6a83      	ldr	r3, [r0, #40]	; 0x28
    2c2a:	4291      	cmp	r1, r2
    2c2c:	d002      	beq.n	2c34 <_ZNK15BLELocalService14characteristicEj+0x16>
    2c2e:	685b      	ldr	r3, [r3, #4]
    2c30:	3201      	adds	r2, #1
    2c32:	e7fa      	b.n	2c2a <_ZNK15BLELocalService14characteristicEj+0xc>
    2c34:	681b      	ldr	r3, [r3, #0]
    2c36:	0018      	movs	r0, r3
    2c38:	4770      	bx	lr

00002c3a <_ZN15BLELocalService17addCharacteristicEP22BLELocalCharacteristic>:
    2c3a:	b570      	push	{r4, r5, r6, lr}
    2c3c:	0004      	movs	r4, r0
    2c3e:	0008      	movs	r0, r1
    2c40:	000d      	movs	r5, r1
    2c42:	f7ff fa8e 	bl	2162 <_ZN12BLEAttribute6retainEv>
    2c46:	2008      	movs	r0, #8
    2c48:	f002 f99a 	bl	4f80 <_Znwj>
    2c4c:	2300      	movs	r3, #0
    2c4e:	6043      	str	r3, [r0, #4]
    2c50:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    2c52:	6005      	str	r5, [r0, #0]
    2c54:	2b00      	cmp	r3, #0
    2c56:	d105      	bne.n	2c64 <_ZN15BLELocalService17addCharacteristicEP22BLELocalCharacteristic+0x2a>
    2c58:	62a0      	str	r0, [r4, #40]	; 0x28
    2c5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
    2c5c:	62e0      	str	r0, [r4, #44]	; 0x2c
    2c5e:	3301      	adds	r3, #1
    2c60:	6263      	str	r3, [r4, #36]	; 0x24
    2c62:	bd70      	pop	{r4, r5, r6, pc}
    2c64:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    2c66:	6058      	str	r0, [r3, #4]
    2c68:	e7f7      	b.n	2c5a <_ZN15BLELocalService17addCharacteristicEP22BLELocalCharacteristic+0x20>

00002c6a <_ZN15BLELocalService17addCharacteristicER17BLECharacteristic>:
    2c6a:	b510      	push	{r4, lr}
    2c6c:	0004      	movs	r4, r0
    2c6e:	0008      	movs	r0, r1
    2c70:	f7ff fad2 	bl	2218 <_ZN17BLECharacteristic5localEv>
    2c74:	1e01      	subs	r1, r0, #0
    2c76:	d002      	beq.n	2c7e <_ZN15BLELocalService17addCharacteristicER17BLECharacteristic+0x14>
    2c78:	0020      	movs	r0, r4
    2c7a:	f7ff ffde 	bl	2c3a <_ZN15BLELocalService17addCharacteristicEP22BLELocalCharacteristic>
    2c7e:	bd10      	pop	{r4, pc}

00002c80 <_ZN13BLELinkedListIP22BLELocalCharacteristicE5clearEv>:
    2c80:	b570      	push	{r4, r5, r6, lr}
    2c82:	2500      	movs	r5, #0
    2c84:	0004      	movs	r4, r0
    2c86:	6840      	ldr	r0, [r0, #4]
    2c88:	6823      	ldr	r3, [r4, #0]
    2c8a:	429d      	cmp	r5, r3
    2c8c:	d205      	bcs.n	2c9a <_ZN13BLELinkedListIP22BLELocalCharacteristicE5clearEv+0x1a>
    2c8e:	6846      	ldr	r6, [r0, #4]
    2c90:	3501      	adds	r5, #1
    2c92:	f002 f979 	bl	4f88 <_ZdlPv>
    2c96:	0030      	movs	r0, r6
    2c98:	e7f6      	b.n	2c88 <_ZN13BLELinkedListIP22BLELocalCharacteristicE5clearEv+0x8>
    2c9a:	2300      	movs	r3, #0
    2c9c:	6023      	str	r3, [r4, #0]
    2c9e:	6063      	str	r3, [r4, #4]
    2ca0:	60a3      	str	r3, [r4, #8]
    2ca2:	bd70      	pop	{r4, r5, r6, pc}

00002ca4 <_ZN15BLELocalServiceD1Ev>:
    2ca4:	b570      	push	{r4, r5, r6, lr}
    2ca6:	0004      	movs	r4, r0
    2ca8:	2500      	movs	r5, #0
    2caa:	4b14      	ldr	r3, [pc, #80]	; (2cfc <_ZN15BLELocalServiceD1Ev+0x58>)
    2cac:	3308      	adds	r3, #8
    2cae:	6003      	str	r3, [r0, #0]
    2cb0:	6a63      	ldr	r3, [r4, #36]	; 0x24
    2cb2:	429d      	cmp	r5, r3
    2cb4:	d214      	bcs.n	2ce0 <_ZN15BLELocalServiceD1Ev+0x3c>
    2cb6:	2200      	movs	r2, #0
    2cb8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    2cba:	4295      	cmp	r5, r2
    2cbc:	d002      	beq.n	2cc4 <_ZN15BLELocalServiceD1Ev+0x20>
    2cbe:	685b      	ldr	r3, [r3, #4]
    2cc0:	3201      	adds	r2, #1
    2cc2:	e7fa      	b.n	2cba <_ZN15BLELocalServiceD1Ev+0x16>
    2cc4:	681e      	ldr	r6, [r3, #0]
    2cc6:	0030      	movs	r0, r6
    2cc8:	f7ff fa50 	bl	216c <_ZN12BLEAttribute7releaseEv>
    2ccc:	2800      	cmp	r0, #0
    2cce:	dc05      	bgt.n	2cdc <_ZN15BLELocalServiceD1Ev+0x38>
    2cd0:	2e00      	cmp	r6, #0
    2cd2:	d003      	beq.n	2cdc <_ZN15BLELocalServiceD1Ev+0x38>
    2cd4:	6833      	ldr	r3, [r6, #0]
    2cd6:	0030      	movs	r0, r6
    2cd8:	685b      	ldr	r3, [r3, #4]
    2cda:	4798      	blx	r3
    2cdc:	3501      	adds	r5, #1
    2cde:	e7e7      	b.n	2cb0 <_ZN15BLELocalServiceD1Ev+0xc>
    2ce0:	0025      	movs	r5, r4
    2ce2:	3524      	adds	r5, #36	; 0x24
    2ce4:	0028      	movs	r0, r5
    2ce6:	f7ff ffcb 	bl	2c80 <_ZN13BLELinkedListIP22BLELocalCharacteristicE5clearEv>
    2cea:	0028      	movs	r0, r5
    2cec:	f7ff ffc8 	bl	2c80 <_ZN13BLELinkedListIP22BLELocalCharacteristicE5clearEv>
    2cf0:	0020      	movs	r0, r4
    2cf2:	f7ff fa0f 	bl	2114 <_ZN12BLEAttributeD1Ev>
    2cf6:	0020      	movs	r0, r4
    2cf8:	bd70      	pop	{r4, r5, r6, pc}
    2cfa:	46c0      	nop			; (mov r8, r8)
    2cfc:	0000b438 	.word	0x0000b438

00002d00 <_ZN15BLELocalServiceD0Ev>:
    2d00:	b510      	push	{r4, lr}
    2d02:	0004      	movs	r4, r0
    2d04:	f7ff ffce 	bl	2ca4 <_ZN15BLELocalServiceD1Ev>
    2d08:	0020      	movs	r0, r4
    2d0a:	f002 f93d 	bl	4f88 <_ZdlPv>
    2d0e:	0020      	movs	r0, r4
    2d10:	bd10      	pop	{r4, pc}
	...

00002d14 <_ZN8ATTClassD1Ev>:
    2d14:	4b05      	ldr	r3, [pc, #20]	; (2d2c <_ZN8ATTClassD1Ev+0x18>)
    2d16:	b510      	push	{r4, lr}
    2d18:	3308      	adds	r3, #8
    2d1a:	0004      	movs	r4, r0
    2d1c:	6003      	str	r3, [r0, #0]
    2d1e:	6940      	ldr	r0, [r0, #20]
    2d20:	2800      	cmp	r0, #0
    2d22:	d001      	beq.n	2d28 <_ZN8ATTClassD1Ev+0x14>
    2d24:	f006 f93a 	bl	8f9c <free>
    2d28:	0020      	movs	r0, r4
    2d2a:	bd10      	pop	{r4, pc}
    2d2c:	0000b44c 	.word	0x0000b44c

00002d30 <_ZN8ATTClassD0Ev>:
    2d30:	b510      	push	{r4, lr}
    2d32:	0004      	movs	r4, r0
    2d34:	f7ff ffee 	bl	2d14 <_ZN8ATTClassD1Ev>
    2d38:	0020      	movs	r0, r4
    2d3a:	f002 f925 	bl	4f88 <_ZdlPv>
    2d3e:	0020      	movs	r0, r4
    2d40:	bd10      	pop	{r4, pc}
	...

00002d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>:
    2d44:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d46:	2505      	movs	r5, #5
    2d48:	b087      	sub	sp, #28
    2d4a:	ac04      	add	r4, sp, #16
    2d4c:	9002      	str	r0, [sp, #8]
    2d4e:	000f      	movs	r7, r1
    2d50:	0016      	movs	r6, r2
    2d52:	2100      	movs	r1, #0
    2d54:	002a      	movs	r2, r5
    2d56:	0020      	movs	r0, r4
    2d58:	9303      	str	r3, [sp, #12]
    2d5a:	f006 f965 	bl	9028 <memset>
    2d5e:	2301      	movs	r3, #1
    2d60:	7023      	strb	r3, [r4, #0]
    2d62:	466b      	mov	r3, sp
    2d64:	7b1b      	ldrb	r3, [r3, #12]
    2d66:	7067      	strb	r7, [r4, #1]
    2d68:	7123      	strb	r3, [r4, #4]
    2d6a:	8066      	strh	r6, [r4, #2]
    2d6c:	002b      	movs	r3, r5
    2d6e:	9400      	str	r4, [sp, #0]
    2d70:	2204      	movs	r2, #4
    2d72:	9902      	ldr	r1, [sp, #8]
    2d74:	4802      	ldr	r0, [pc, #8]	; (2d80 <_ZN8ATTClass9sendErrorEthth.constprop.3+0x3c>)
    2d76:	f001 fabf 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    2d7a:	b007      	add	sp, #28
    2d7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2d7e:	46c0      	nop			; (mov r8, r8)
    2d80:	20000480 	.word	0x20000480

00002d84 <_ZN8ATTClassC1Ev>:
    2d84:	4b0d      	ldr	r3, [pc, #52]	; (2dbc <_ZN8ATTClassC1Ev+0x38>)
    2d86:	2201      	movs	r2, #1
    2d88:	3308      	adds	r3, #8
    2d8a:	b570      	push	{r4, r5, r6, lr}
    2d8c:	2500      	movs	r5, #0
    2d8e:	6003      	str	r3, [r0, #0]
    2d90:	2317      	movs	r3, #23
    2d92:	0004      	movs	r4, r0
    2d94:	4252      	negs	r2, r2
    2d96:	8083      	strh	r3, [r0, #4]
    2d98:	81c3      	strh	r3, [r0, #14]
    2d9a:	8245      	strh	r5, [r0, #18]
    2d9c:	6145      	str	r5, [r0, #20]
    2d9e:	8305      	strh	r5, [r0, #24]
    2da0:	0029      	movs	r1, r5
    2da2:	80c2      	strh	r2, [r0, #6]
    2da4:	3207      	adds	r2, #7
    2da6:	3008      	adds	r0, #8
    2da8:	f006 f93e 	bl	9028 <memset>
    2dac:	0020      	movs	r0, r4
    2dae:	0029      	movs	r1, r5
    2db0:	2208      	movs	r2, #8
    2db2:	301c      	adds	r0, #28
    2db4:	f006 f938 	bl	9028 <memset>
    2db8:	0020      	movs	r0, r4
    2dba:	bd70      	pop	{r4, r5, r6, pc}
    2dbc:	0000b44c 	.word	0x0000b44c

00002dc0 <_ZN8ATTClass9setMaxMtuEt>:
    2dc0:	8081      	strh	r1, [r0, #4]
    2dc2:	4770      	bx	lr

00002dc4 <_ZN8ATTClass13addConnectionEthhPhttth>:
    2dc4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    2dc6:	0004      	movs	r4, r0
    2dc8:	000d      	movs	r5, r1
    2dca:	2a01      	cmp	r2, #1
    2dcc:	d116      	bne.n	2dfc <_ZN8ATTClass13addConnectionEthhPhttth+0x38>
    2dce:	0006      	movs	r6, r0
    2dd0:	2317      	movs	r3, #23
    2dd2:	3608      	adds	r6, #8
    2dd4:	80e1      	strh	r1, [r4, #6]
    2dd6:	3205      	adds	r2, #5
    2dd8:	81c3      	strh	r3, [r0, #14]
    2dda:	9908      	ldr	r1, [sp, #32]
    2ddc:	0030      	movs	r0, r6
    2dde:	f006 f908 	bl	8ff2 <memcpy>
    2de2:	69e4      	ldr	r4, [r4, #28]
    2de4:	2c00      	cmp	r4, #0
    2de6:	d009      	beq.n	2dfc <_ZN8ATTClass13addConnectionEthhPhttth+0x38>
    2de8:	0032      	movs	r2, r6
    2dea:	0029      	movs	r1, r5
    2dec:	a801      	add	r0, sp, #4
    2dee:	f7ff fac7 	bl	2380 <_ZN9BLEDeviceC1EtPh>
    2df2:	a801      	add	r0, sp, #4
    2df4:	47a0      	blx	r4
    2df6:	a801      	add	r0, sp, #4
    2df8:	f7ff fa10 	bl	221c <_ZN9BLEDeviceD1Ev>
    2dfc:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
	...

00002e00 <_ZN8ATTClass16removeConnectionEht>:
    2e00:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e02:	88c3      	ldrh	r3, [r0, #6]
    2e04:	b089      	sub	sp, #36	; 0x24
    2e06:	0004      	movs	r4, r0
    2e08:	428b      	cmp	r3, r1
    2e0a:	d153      	bne.n	2eb4 <_ZN8ATTClass16removeConnectionEht+0xb4>
    2e0c:	0002      	movs	r2, r0
    2e0e:	0019      	movs	r1, r3
    2e10:	3208      	adds	r2, #8
    2e12:	a802      	add	r0, sp, #8
    2e14:	9201      	str	r2, [sp, #4]
    2e16:	2500      	movs	r5, #0
    2e18:	f7ff fab2 	bl	2380 <_ZN9BLEDeviceC1EtPh>
    2e1c:	4e26      	ldr	r6, [pc, #152]	; (2eb8 <_ZN8ATTClass16removeConnectionEht+0xb8>)
    2e1e:	0030      	movs	r0, r6
    2e20:	f001 f8e4 	bl	3fec <_ZNK9GATTClass14attributeCountEv>
    2e24:	4285      	cmp	r5, r0
    2e26:	d222      	bcs.n	2e6e <_ZN8ATTClass16removeConnectionEht+0x6e>
    2e28:	0029      	movs	r1, r5
    2e2a:	0030      	movs	r0, r6
    2e2c:	f001 f905 	bl	403a <_ZNK9GATTClass9attributeEj>
    2e30:	6803      	ldr	r3, [r0, #0]
    2e32:	0007      	movs	r7, r0
    2e34:	689b      	ldr	r3, [r3, #8]
    2e36:	4798      	blx	r3
    2e38:	4b20      	ldr	r3, [pc, #128]	; (2ebc <_ZN8ATTClass16removeConnectionEht+0xbc>)
    2e3a:	4298      	cmp	r0, r3
    2e3c:	d114      	bne.n	2e68 <_ZN8ATTClass16removeConnectionEht+0x68>
    2e3e:	2206      	movs	r2, #6
    2e40:	2012      	movs	r0, #18
    2e42:	4b1f      	ldr	r3, [pc, #124]	; (2ec0 <_ZN8ATTClass16removeConnectionEht+0xc0>)
    2e44:	ae05      	add	r6, sp, #20
    2e46:	9305      	str	r3, [sp, #20]
    2e48:	ab02      	add	r3, sp, #8
    2e4a:	889b      	ldrh	r3, [r3, #4]
    2e4c:	80b3      	strh	r3, [r6, #4]
    2e4e:	ab02      	add	r3, sp, #8
    2e50:	1899      	adds	r1, r3, r2
    2e52:	18c0      	adds	r0, r0, r3
    2e54:	f006 f8cd 	bl	8ff2 <memcpy>
    2e58:	0038      	movs	r0, r7
    2e5a:	2200      	movs	r2, #0
    2e5c:	0031      	movs	r1, r6
    2e5e:	f7ff fd27 	bl	28b0 <_ZN22BLELocalCharacteristic14writeCccdValueE9BLEDevicet>
    2e62:	0030      	movs	r0, r6
    2e64:	f7ff f9da 	bl	221c <_ZN9BLEDeviceD1Ev>
    2e68:	3501      	adds	r5, #1
    2e6a:	b2ad      	uxth	r5, r5
    2e6c:	e7d6      	b.n	2e1c <_ZN8ATTClass16removeConnectionEht+0x1c>
    2e6e:	6a26      	ldr	r6, [r4, #32]
    2e70:	2e00      	cmp	r6, #0
    2e72:	d011      	beq.n	2e98 <_ZN8ATTClass16removeConnectionEht+0x98>
    2e74:	2206      	movs	r2, #6
    2e76:	2012      	movs	r0, #18
    2e78:	4b11      	ldr	r3, [pc, #68]	; (2ec0 <_ZN8ATTClass16removeConnectionEht+0xc0>)
    2e7a:	ad05      	add	r5, sp, #20
    2e7c:	9305      	str	r3, [sp, #20]
    2e7e:	ab02      	add	r3, sp, #8
    2e80:	889b      	ldrh	r3, [r3, #4]
    2e82:	80ab      	strh	r3, [r5, #4]
    2e84:	ab02      	add	r3, sp, #8
    2e86:	1899      	adds	r1, r3, r2
    2e88:	18c0      	adds	r0, r0, r3
    2e8a:	f006 f8b2 	bl	8ff2 <memcpy>
    2e8e:	0028      	movs	r0, r5
    2e90:	47b0      	blx	r6
    2e92:	0028      	movs	r0, r5
    2e94:	f7ff f9c2 	bl	221c <_ZN9BLEDeviceD1Ev>
    2e98:	2301      	movs	r3, #1
    2e9a:	425b      	negs	r3, r3
    2e9c:	80e3      	strh	r3, [r4, #6]
    2e9e:	2206      	movs	r2, #6
    2ea0:	2100      	movs	r1, #0
    2ea2:	9801      	ldr	r0, [sp, #4]
    2ea4:	f006 f8c0 	bl	9028 <memset>
    2ea8:	2300      	movs	r3, #0
    2eaa:	a802      	add	r0, sp, #8
    2eac:	8263      	strh	r3, [r4, #18]
    2eae:	8323      	strh	r3, [r4, #24]
    2eb0:	f7ff f9b4 	bl	221c <_ZN9BLEDeviceD1Ev>
    2eb4:	b009      	add	sp, #36	; 0x24
    2eb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2eb8:	20000314 	.word	0x20000314
    2ebc:	00002803 	.word	0x00002803
    2ec0:	0000b368 	.word	0x0000b368

00002ec4 <_ZNK8ATTClass9connectedEv>:
    2ec4:	4b03      	ldr	r3, [pc, #12]	; (2ed4 <_ZNK8ATTClass9connectedEv+0x10>)
    2ec6:	88c0      	ldrh	r0, [r0, #6]
    2ec8:	18c0      	adds	r0, r0, r3
    2eca:	1e43      	subs	r3, r0, #1
    2ecc:	4198      	sbcs	r0, r3
    2ece:	b2c0      	uxtb	r0, r0
    2ed0:	4770      	bx	lr
    2ed2:	46c0      	nop			; (mov r8, r8)
    2ed4:	ffff0001 	.word	0xffff0001

00002ed8 <_ZNK8ATTClass9connectedEtPKh>:
    2ed8:	b510      	push	{r4, lr}
    2eda:	000c      	movs	r4, r1
    2edc:	0011      	movs	r1, r2
    2ede:	88c2      	ldrh	r2, [r0, #6]
    2ee0:	2300      	movs	r3, #0
    2ee2:	42a2      	cmp	r2, r4
    2ee4:	d106      	bne.n	2ef4 <_ZNK8ATTClass9connectedEtPKh+0x1c>
    2ee6:	3008      	adds	r0, #8
    2ee8:	2206      	movs	r2, #6
    2eea:	f006 f873 	bl	8fd4 <memcmp>
    2eee:	4243      	negs	r3, r0
    2ef0:	4143      	adcs	r3, r0
    2ef2:	b2db      	uxtb	r3, r3
    2ef4:	0018      	movs	r0, r3
    2ef6:	bd10      	pop	{r4, pc}

00002ef8 <_ZN8ATTClass10disconnectEv>:
    2ef8:	b510      	push	{r4, lr}
    2efa:	4b0b      	ldr	r3, [pc, #44]	; (2f28 <_ZN8ATTClass10disconnectEv+0x30>)
    2efc:	88c1      	ldrh	r1, [r0, #6]
    2efe:	0004      	movs	r4, r0
    2f00:	4299      	cmp	r1, r3
    2f02:	d101      	bne.n	2f08 <_ZN8ATTClass10disconnectEv+0x10>
    2f04:	2000      	movs	r0, #0
    2f06:	bd10      	pop	{r4, pc}
    2f08:	4808      	ldr	r0, [pc, #32]	; (2f2c <_ZN8ATTClass10disconnectEv+0x34>)
    2f0a:	f001 fce1 	bl	48d0 <_ZN8HCIClass10disconnectEt>
    2f0e:	1e01      	subs	r1, r0, #0
    2f10:	d1f8      	bne.n	2f04 <_ZN8ATTClass10disconnectEv+0xc>
    2f12:	2301      	movs	r3, #1
    2f14:	0020      	movs	r0, r4
    2f16:	425b      	negs	r3, r3
    2f18:	80e3      	strh	r3, [r4, #6]
    2f1a:	3008      	adds	r0, #8
    2f1c:	2206      	movs	r2, #6
    2f1e:	f006 f883 	bl	9028 <memset>
    2f22:	2001      	movs	r0, #1
    2f24:	e7ef      	b.n	2f06 <_ZN8ATTClass10disconnectEv+0xe>
    2f26:	46c0      	nop			; (mov r8, r8)
    2f28:	0000ffff 	.word	0x0000ffff
    2f2c:	20000480 	.word	0x20000480

00002f30 <_ZN8ATTClass7centralEv>:
    2f30:	b510      	push	{r4, lr}
    2f32:	000a      	movs	r2, r1
    2f34:	4b06      	ldr	r3, [pc, #24]	; (2f50 <_ZN8ATTClass7centralEv+0x20>)
    2f36:	88c9      	ldrh	r1, [r1, #6]
    2f38:	0004      	movs	r4, r0
    2f3a:	4299      	cmp	r1, r3
    2f3c:	d004      	beq.n	2f48 <_ZN8ATTClass7centralEv+0x18>
    2f3e:	3208      	adds	r2, #8
    2f40:	f7ff fa1e 	bl	2380 <_ZN9BLEDeviceC1EtPh>
    2f44:	0020      	movs	r0, r4
    2f46:	bd10      	pop	{r4, pc}
    2f48:	f7ff fa08 	bl	235c <_ZN9BLEDeviceC1Ev>
    2f4c:	e7fa      	b.n	2f44 <_ZN8ATTClass7centralEv+0x14>
    2f4e:	46c0      	nop			; (mov r8, r8)
    2f50:	0000ffff 	.word	0x0000ffff

00002f54 <_ZN8ATTClass12handleNotifyEtPKhi>:
    2f54:	b5f0      	push	{r4, r5, r6, r7, lr}
    2f56:	b087      	sub	sp, #28
    2f58:	af02      	add	r7, sp, #8
    2f5a:	607a      	str	r2, [r7, #4]
    2f5c:	603b      	str	r3, [r7, #0]
    2f5e:	81f9      	strh	r1, [r7, #14]
    2f60:	88c6      	ldrh	r6, [r0, #6]
    2f62:	4a18      	ldr	r2, [pc, #96]	; (2fc4 <_ZN8ATTClass12handleNotifyEtPKhi+0x70>)
    2f64:	2300      	movs	r3, #0
    2f66:	4296      	cmp	r6, r2
    2f68:	d028      	beq.n	2fbc <_ZN8ATTClass12handleNotifyEtPKhi+0x68>
    2f6a:	466b      	mov	r3, sp
    2f6c:	466a      	mov	r2, sp
    2f6e:	60bb      	str	r3, [r7, #8]
    2f70:	89c4      	ldrh	r4, [r0, #14]
    2f72:	2009      	movs	r0, #9
    2f74:	1de3      	adds	r3, r4, #7
    2f76:	08db      	lsrs	r3, r3, #3
    2f78:	00db      	lsls	r3, r3, #3
    2f7a:	1ad3      	subs	r3, r2, r3
    2f7c:	469d      	mov	sp, r3
    2f7e:	231b      	movs	r3, #27
    2f80:	ad02      	add	r5, sp, #8
    2f82:	702b      	strb	r3, [r5, #0]
    2f84:	3b0d      	subs	r3, #13
    2f86:	2202      	movs	r2, #2
    2f88:	4468      	add	r0, sp
    2f8a:	18f9      	adds	r1, r7, r3
    2f8c:	f006 f831 	bl	8ff2 <memcpy>
    2f90:	3c03      	subs	r4, #3
    2f92:	883a      	ldrh	r2, [r7, #0]
    2f94:	b2a4      	uxth	r4, r4
    2f96:	4294      	cmp	r4, r2
    2f98:	dd00      	ble.n	2f9c <_ZN8ATTClass12handleNotifyEtPKhi+0x48>
    2f9a:	0014      	movs	r4, r2
    2f9c:	0022      	movs	r2, r4
    2f9e:	6879      	ldr	r1, [r7, #4]
    2fa0:	1ce8      	adds	r0, r5, #3
    2fa2:	3403      	adds	r4, #3
    2fa4:	f006 f825 	bl	8ff2 <memcpy>
    2fa8:	b2e3      	uxtb	r3, r4
    2faa:	9500      	str	r5, [sp, #0]
    2fac:	2204      	movs	r2, #4
    2fae:	0031      	movs	r1, r6
    2fb0:	4805      	ldr	r0, [pc, #20]	; (2fc8 <_ZN8ATTClass12handleNotifyEtPKhi+0x74>)
    2fb2:	f001 f9a1 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    2fb6:	68bb      	ldr	r3, [r7, #8]
    2fb8:	469d      	mov	sp, r3
    2fba:	2301      	movs	r3, #1
    2fbc:	0018      	movs	r0, r3
    2fbe:	46bd      	mov	sp, r7
    2fc0:	b005      	add	sp, #20
    2fc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2fc4:	0000ffff 	.word	0x0000ffff
    2fc8:	20000480 	.word	0x20000480

00002fcc <_ZN8ATTClass9handleIndEtPKhi>:
    2fcc:	b5f0      	push	{r4, r5, r6, r7, lr}
    2fce:	b089      	sub	sp, #36	; 0x24
    2fd0:	af02      	add	r7, sp, #8
    2fd2:	60ba      	str	r2, [r7, #8]
    2fd4:	607b      	str	r3, [r7, #4]
    2fd6:	82f9      	strh	r1, [r7, #22]
    2fd8:	88c3      	ldrh	r3, [r0, #6]
    2fda:	0005      	movs	r5, r0
    2fdc:	613b      	str	r3, [r7, #16]
    2fde:	001a      	movs	r2, r3
    2fe0:	4b1e      	ldr	r3, [pc, #120]	; (305c <_ZN8ATTClass9handleIndEtPKhi+0x90>)
    2fe2:	2600      	movs	r6, #0
    2fe4:	429a      	cmp	r2, r3
    2fe6:	d035      	beq.n	3054 <_ZN8ATTClass9handleIndEtPKhi+0x88>
    2fe8:	466b      	mov	r3, sp
    2fea:	466a      	mov	r2, sp
    2fec:	60fb      	str	r3, [r7, #12]
    2fee:	89c4      	ldrh	r4, [r0, #14]
    2ff0:	2009      	movs	r0, #9
    2ff2:	1de3      	adds	r3, r4, #7
    2ff4:	08db      	lsrs	r3, r3, #3
    2ff6:	00db      	lsls	r3, r3, #3
    2ff8:	1ad3      	subs	r3, r2, r3
    2ffa:	469d      	mov	sp, r3
    2ffc:	231d      	movs	r3, #29
    2ffe:	ae02      	add	r6, sp, #8
    3000:	7033      	strb	r3, [r6, #0]
    3002:	3b07      	subs	r3, #7
    3004:	2202      	movs	r2, #2
    3006:	4468      	add	r0, sp
    3008:	18f9      	adds	r1, r7, r3
    300a:	f005 fff2 	bl	8ff2 <memcpy>
    300e:	3c03      	subs	r4, #3
    3010:	88ba      	ldrh	r2, [r7, #4]
    3012:	b2a4      	uxth	r4, r4
    3014:	4294      	cmp	r4, r2
    3016:	dd00      	ble.n	301a <_ZN8ATTClass9handleIndEtPKhi+0x4e>
    3018:	0014      	movs	r4, r2
    301a:	0022      	movs	r2, r4
    301c:	68b9      	ldr	r1, [r7, #8]
    301e:	1cf0      	adds	r0, r6, #3
    3020:	f005 ffe7 	bl	8ff2 <memcpy>
    3024:	2300      	movs	r3, #0
    3026:	3403      	adds	r4, #3
    3028:	742b      	strb	r3, [r5, #16]
    302a:	b2e3      	uxtb	r3, r4
    302c:	4c0c      	ldr	r4, [pc, #48]	; (3060 <_ZN8ATTClass9handleIndEtPKhi+0x94>)
    302e:	9600      	str	r6, [sp, #0]
    3030:	2204      	movs	r2, #4
    3032:	6939      	ldr	r1, [r7, #16]
    3034:	0020      	movs	r0, r4
    3036:	f001 f95f 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    303a:	7c2e      	ldrb	r6, [r5, #16]
    303c:	b2f6      	uxtb	r6, r6
    303e:	2e00      	cmp	r6, #0
    3040:	d106      	bne.n	3050 <_ZN8ATTClass9handleIndEtPKhi+0x84>
    3042:	0020      	movs	r0, r4
    3044:	f001 fa5e 	bl	4504 <_ZN8HCIClass4pollEv>
    3048:	88eb      	ldrh	r3, [r5, #6]
    304a:	4a04      	ldr	r2, [pc, #16]	; (305c <_ZN8ATTClass9handleIndEtPKhi+0x90>)
    304c:	4293      	cmp	r3, r2
    304e:	d1f4      	bne.n	303a <_ZN8ATTClass9handleIndEtPKhi+0x6e>
    3050:	68fb      	ldr	r3, [r7, #12]
    3052:	469d      	mov	sp, r3
    3054:	0030      	movs	r0, r6
    3056:	46bd      	mov	sp, r7
    3058:	b007      	add	sp, #28
    305a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    305c:	0000ffff 	.word	0x0000ffff
    3060:	20000480 	.word	0x20000480

00003064 <_ZN8ATTClass6mtuReqEthPh>:
    3064:	b5f0      	push	{r4, r5, r6, r7, lr}
    3066:	000f      	movs	r7, r1
    3068:	b085      	sub	sp, #20
    306a:	2a02      	cmp	r2, #2
    306c:	d007      	beq.n	307e <_ZN8ATTClass6mtuReqEthPh+0x1a>
    306e:	2304      	movs	r3, #4
    3070:	2200      	movs	r2, #0
    3072:	2102      	movs	r1, #2
    3074:	0038      	movs	r0, r7
    3076:	f7ff fe65 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    307a:	b005      	add	sp, #20
    307c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    307e:	881c      	ldrh	r4, [r3, #0]
    3080:	8883      	ldrh	r3, [r0, #4]
    3082:	429c      	cmp	r4, r3
    3084:	dd00      	ble.n	3088 <_ZN8ATTClass6mtuReqEthPh+0x24>
    3086:	001c      	movs	r4, r3
    3088:	2503      	movs	r5, #3
    308a:	ae03      	add	r6, sp, #12
    308c:	81c4      	strh	r4, [r0, #14]
    308e:	002a      	movs	r2, r5
    3090:	2100      	movs	r1, #0
    3092:	0030      	movs	r0, r6
    3094:	f005 ffc8 	bl	9028 <memset>
    3098:	230d      	movs	r3, #13
    309a:	446b      	add	r3, sp
    309c:	701c      	strb	r4, [r3, #0]
    309e:	0a24      	lsrs	r4, r4, #8
    30a0:	705c      	strb	r4, [r3, #1]
    30a2:	7035      	strb	r5, [r6, #0]
    30a4:	002b      	movs	r3, r5
    30a6:	9600      	str	r6, [sp, #0]
    30a8:	2204      	movs	r2, #4
    30aa:	0039      	movs	r1, r7
    30ac:	4801      	ldr	r0, [pc, #4]	; (30b4 <_ZN8ATTClass6mtuReqEthPh+0x50>)
    30ae:	f001 f923 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    30b2:	e7e2      	b.n	307a <_ZN8ATTClass6mtuReqEthPh+0x16>
    30b4:	20000480 	.word	0x20000480

000030b8 <_ZN8ATTClass11findInfoReqEthPh>:
    30b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    30ba:	b08d      	sub	sp, #52	; 0x34
    30bc:	af02      	add	r7, sp, #8
    30be:	61bb      	str	r3, [r7, #24]
    30c0:	466b      	mov	r3, sp
    30c2:	6078      	str	r0, [r7, #4]
    30c4:	60b9      	str	r1, [r7, #8]
    30c6:	603b      	str	r3, [r7, #0]
    30c8:	2a04      	cmp	r2, #4
    30ca:	d00d      	beq.n	30e8 <_ZN8ATTClass11findInfoReqEthPh+0x30>
    30cc:	69ba      	ldr	r2, [r7, #24]
    30ce:	69bb      	ldr	r3, [r7, #24]
    30d0:	7852      	ldrb	r2, [r2, #1]
    30d2:	781b      	ldrb	r3, [r3, #0]
    30d4:	0212      	lsls	r2, r2, #8
    30d6:	431a      	orrs	r2, r3
    30d8:	2304      	movs	r3, #4
    30da:	68b8      	ldr	r0, [r7, #8]
    30dc:	0019      	movs	r1, r3
    30de:	f7ff fe31 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    30e2:	46bd      	mov	sp, r7
    30e4:	b00b      	add	sp, #44	; 0x2c
    30e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    30e8:	466a      	mov	r2, sp
    30ea:	687b      	ldr	r3, [r7, #4]
    30ec:	2602      	movs	r6, #2
    30ee:	89db      	ldrh	r3, [r3, #14]
    30f0:	3307      	adds	r3, #7
    30f2:	08db      	lsrs	r3, r3, #3
    30f4:	00db      	lsls	r3, r3, #3
    30f6:	1ad3      	subs	r3, r2, r3
    30f8:	469d      	mov	sp, r3
    30fa:	ab02      	add	r3, sp, #8
    30fc:	61fb      	str	r3, [r7, #28]
    30fe:	2305      	movs	r3, #5
    3100:	69fa      	ldr	r2, [r7, #28]
    3102:	7013      	strb	r3, [r2, #0]
    3104:	2300      	movs	r3, #0
    3106:	7053      	strb	r3, [r2, #1]
    3108:	69bb      	ldr	r3, [r7, #24]
    310a:	781a      	ldrb	r2, [r3, #0]
    310c:	785b      	ldrb	r3, [r3, #1]
    310e:	021b      	lsls	r3, r3, #8
    3110:	4313      	orrs	r3, r2
    3112:	3b01      	subs	r3, #1
    3114:	b29b      	uxth	r3, r3
    3116:	617b      	str	r3, [r7, #20]
    3118:	4c49      	ldr	r4, [pc, #292]	; (3240 <_ZN8ATTClass11findInfoReqEthPh+0x188>)
    311a:	0020      	movs	r0, r4
    311c:	f000 ff66 	bl	3fec <_ZNK9GATTClass14attributeCountEv>
    3120:	697b      	ldr	r3, [r7, #20]
    3122:	4283      	cmp	r3, r0
    3124:	d207      	bcs.n	3136 <_ZN8ATTClass11findInfoReqEthPh+0x7e>
    3126:	69bb      	ldr	r3, [r7, #24]
    3128:	789a      	ldrb	r2, [r3, #2]
    312a:	78db      	ldrb	r3, [r3, #3]
    312c:	021b      	lsls	r3, r3, #8
    312e:	4313      	orrs	r3, r2
    3130:	697a      	ldr	r2, [r7, #20]
    3132:	4293      	cmp	r3, r2
    3134:	dc21      	bgt.n	317a <_ZN8ATTClass11findInfoReqEthPh+0xc2>
    3136:	2e02      	cmp	r6, #2
    3138:	d116      	bne.n	3168 <_ZN8ATTClass11findInfoReqEthPh+0xb0>
    313a:	69ba      	ldr	r2, [r7, #24]
    313c:	69bb      	ldr	r3, [r7, #24]
    313e:	7852      	ldrb	r2, [r2, #1]
    3140:	781b      	ldrb	r3, [r3, #0]
    3142:	0212      	lsls	r2, r2, #8
    3144:	431a      	orrs	r2, r3
    3146:	2104      	movs	r1, #4
    3148:	230a      	movs	r3, #10
    314a:	68b8      	ldr	r0, [r7, #8]
    314c:	f7ff fdfa 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    3150:	683b      	ldr	r3, [r7, #0]
    3152:	469d      	mov	sp, r3
    3154:	e7c5      	b.n	30e2 <_ZN8ATTClass11findInfoReqEthPh+0x2a>
    3156:	2302      	movs	r3, #2
    3158:	613b      	str	r3, [r7, #16]
    315a:	3b01      	subs	r3, #1
    315c:	60fb      	str	r3, [r7, #12]
    315e:	e02c      	b.n	31ba <_ZN8ATTClass11findInfoReqEthPh+0x102>
    3160:	2300      	movs	r3, #0
    3162:	60fb      	str	r3, [r7, #12]
    3164:	3301      	adds	r3, #1
    3166:	e028      	b.n	31ba <_ZN8ATTClass11findInfoReqEthPh+0x102>
    3168:	69fa      	ldr	r2, [r7, #28]
    316a:	b2f3      	uxtb	r3, r6
    316c:	9200      	str	r2, [sp, #0]
    316e:	68b9      	ldr	r1, [r7, #8]
    3170:	2204      	movs	r2, #4
    3172:	4834      	ldr	r0, [pc, #208]	; (3244 <_ZN8ATTClass11findInfoReqEthPh+0x18c>)
    3174:	f001 f8c0 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    3178:	e7ea      	b.n	3150 <_ZN8ATTClass11findInfoReqEthPh+0x98>
    317a:	6979      	ldr	r1, [r7, #20]
    317c:	0020      	movs	r0, r4
    317e:	f000 ff5c 	bl	403a <_ZNK9GATTClass9attributeEj>
    3182:	697b      	ldr	r3, [r7, #20]
    3184:	0005      	movs	r5, r0
    3186:	3301      	adds	r3, #1
    3188:	b29b      	uxth	r3, r3
    318a:	617b      	str	r3, [r7, #20]
    318c:	8abb      	ldrh	r3, [r7, #20]
    318e:	84bb      	strh	r3, [r7, #36]	; 0x24
    3190:	6803      	ldr	r3, [r0, #0]
    3192:	689b      	ldr	r3, [r3, #8]
    3194:	4798      	blx	r3
    3196:	4b2c      	ldr	r3, [pc, #176]	; (3248 <_ZN8ATTClass11findInfoReqEthPh+0x190>)
    3198:	4298      	cmp	r0, r3
    319a:	d105      	bne.n	31a8 <_ZN8ATTClass11findInfoReqEthPh+0xf0>
    319c:	0028      	movs	r0, r5
    319e:	f7ff fa75 	bl	268c <_ZNK22BLELocalCharacteristic11valueHandleEv>
    31a2:	697b      	ldr	r3, [r7, #20]
    31a4:	4283      	cmp	r3, r0
    31a6:	d0d6      	beq.n	3156 <_ZN8ATTClass11findInfoReqEthPh+0x9e>
    31a8:	0028      	movs	r0, r5
    31aa:	f7fe ffd5 	bl	2158 <_ZNK12BLEAttribute10uuidLengthEv>
    31ae:	6138      	str	r0, [r7, #16]
    31b0:	2802      	cmp	r0, #2
    31b2:	d0d5      	beq.n	3160 <_ZN8ATTClass11findInfoReqEthPh+0xa8>
    31b4:	2300      	movs	r3, #0
    31b6:	60fb      	str	r3, [r7, #12]
    31b8:	3302      	adds	r3, #2
    31ba:	69fa      	ldr	r2, [r7, #28]
    31bc:	7852      	ldrb	r2, [r2, #1]
    31be:	2a00      	cmp	r2, #0
    31c0:	d101      	bne.n	31c6 <_ZN8ATTClass11findInfoReqEthPh+0x10e>
    31c2:	69fa      	ldr	r2, [r7, #28]
    31c4:	7053      	strb	r3, [r2, #1]
    31c6:	69fa      	ldr	r2, [r7, #28]
    31c8:	7852      	ldrb	r2, [r2, #1]
    31ca:	4293      	cmp	r3, r2
    31cc:	d1b3      	bne.n	3136 <_ZN8ATTClass11findInfoReqEthPh+0x7e>
    31ce:	69fb      	ldr	r3, [r7, #28]
    31d0:	2202      	movs	r2, #2
    31d2:	1998      	adds	r0, r3, r6
    31d4:	2324      	movs	r3, #36	; 0x24
    31d6:	18f9      	adds	r1, r7, r3
    31d8:	f005 ff0b 	bl	8ff2 <memcpy>
    31dc:	68fb      	ldr	r3, [r7, #12]
    31de:	1cb4      	adds	r4, r6, #2
    31e0:	b2a4      	uxth	r4, r4
    31e2:	2b00      	cmp	r3, #0
    31e4:	d107      	bne.n	31f6 <_ZN8ATTClass11findInfoReqEthPh+0x13e>
    31e6:	682b      	ldr	r3, [r5, #0]
    31e8:	0028      	movs	r0, r5
    31ea:	689b      	ldr	r3, [r3, #8]
    31ec:	4798      	blx	r3
    31ee:	23a4      	movs	r3, #164	; 0xa4
    31f0:	019b      	lsls	r3, r3, #6
    31f2:	4298      	cmp	r0, r3
    31f4:	d115      	bne.n	3222 <_ZN8ATTClass11findInfoReqEthPh+0x16a>
    31f6:	69fb      	ldr	r3, [r7, #28]
    31f8:	0028      	movs	r0, r5
    31fa:	191e      	adds	r6, r3, r4
    31fc:	f7fe ffa7 	bl	214e <_ZNK12BLEAttribute8uuidDataEv>
    3200:	693a      	ldr	r2, [r7, #16]
    3202:	0001      	movs	r1, r0
    3204:	0030      	movs	r0, r6
    3206:	f005 fef4 	bl	8ff2 <memcpy>
    320a:	693b      	ldr	r3, [r7, #16]
    320c:	18e4      	adds	r4, r4, r3
    320e:	b2a6      	uxth	r6, r4
    3210:	693b      	ldr	r3, [r7, #16]
    3212:	687a      	ldr	r2, [r7, #4]
    3214:	3302      	adds	r3, #2
    3216:	89d2      	ldrh	r2, [r2, #14]
    3218:	199b      	adds	r3, r3, r6
    321a:	4293      	cmp	r3, r2
    321c:	dc00      	bgt.n	3220 <_ZN8ATTClass11findInfoReqEthPh+0x168>
    321e:	e77b      	b.n	3118 <_ZN8ATTClass11findInfoReqEthPh+0x60>
    3220:	e789      	b.n	3136 <_ZN8ATTClass11findInfoReqEthPh+0x7e>
    3222:	682b      	ldr	r3, [r5, #0]
    3224:	0028      	movs	r0, r5
    3226:	689b      	ldr	r3, [r3, #8]
    3228:	4798      	blx	r3
    322a:	69fb      	ldr	r3, [r7, #28]
    322c:	84f8      	strh	r0, [r7, #38]	; 0x26
    322e:	1918      	adds	r0, r3, r4
    3230:	2326      	movs	r3, #38	; 0x26
    3232:	2202      	movs	r2, #2
    3234:	18f9      	adds	r1, r7, r3
    3236:	3604      	adds	r6, #4
    3238:	f005 fedb 	bl	8ff2 <memcpy>
    323c:	b2b6      	uxth	r6, r6
    323e:	e7e7      	b.n	3210 <_ZN8ATTClass11findInfoReqEthPh+0x158>
    3240:	20000314 	.word	0x20000314
    3244:	20000480 	.word	0x20000480
    3248:	00002803 	.word	0x00002803

0000324c <_ZN8ATTClass13findByTypeReqEthPh>:
    324c:	b5f0      	push	{r4, r5, r6, r7, lr}
    324e:	b08b      	sub	sp, #44	; 0x2c
    3250:	001c      	movs	r4, r3
    3252:	466b      	mov	r3, sp
    3254:	af02      	add	r7, sp, #8
    3256:	60f9      	str	r1, [r7, #12]
    3258:	6078      	str	r0, [r7, #4]
    325a:	603b      	str	r3, [r7, #0]
    325c:	7821      	ldrb	r1, [r4, #0]
    325e:	2a05      	cmp	r2, #5
    3260:	d80a      	bhi.n	3278 <_ZN8ATTClass13findByTypeReqEthPh+0x2c>
    3262:	7862      	ldrb	r2, [r4, #1]
    3264:	2304      	movs	r3, #4
    3266:	0212      	lsls	r2, r2, #8
    3268:	430a      	orrs	r2, r1
    326a:	68f8      	ldr	r0, [r7, #12]
    326c:	2107      	movs	r1, #7
    326e:	f7ff fd69 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    3272:	46bd      	mov	sp, r7
    3274:	b009      	add	sp, #36	; 0x24
    3276:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3278:	4668      	mov	r0, sp
    327a:	687b      	ldr	r3, [r7, #4]
    327c:	89db      	ldrh	r3, [r3, #14]
    327e:	3307      	adds	r3, #7
    3280:	08db      	lsrs	r3, r3, #3
    3282:	00db      	lsls	r3, r3, #3
    3284:	1ac3      	subs	r3, r0, r3
    3286:	469d      	mov	sp, r3
    3288:	ab02      	add	r3, sp, #8
    328a:	613b      	str	r3, [r7, #16]
    328c:	2307      	movs	r3, #7
    328e:	6938      	ldr	r0, [r7, #16]
    3290:	7003      	strb	r3, [r0, #0]
    3292:	20a0      	movs	r0, #160	; 0xa0
    3294:	7963      	ldrb	r3, [r4, #5]
    3296:	7925      	ldrb	r5, [r4, #4]
    3298:	021b      	lsls	r3, r3, #8
    329a:	0180      	lsls	r0, r0, #6
    329c:	432b      	orrs	r3, r5
    329e:	4283      	cmp	r3, r0
    32a0:	d00b      	beq.n	32ba <_ZN8ATTClass13findByTypeReqEthPh+0x6e>
    32a2:	7862      	ldrb	r2, [r4, #1]
    32a4:	7823      	ldrb	r3, [r4, #0]
    32a6:	0212      	lsls	r2, r2, #8
    32a8:	431a      	orrs	r2, r3
    32aa:	2107      	movs	r1, #7
    32ac:	230a      	movs	r3, #10
    32ae:	68f8      	ldr	r0, [r7, #12]
    32b0:	f7ff fd48 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    32b4:	683b      	ldr	r3, [r7, #0]
    32b6:	469d      	mov	sp, r3
    32b8:	e7db      	b.n	3272 <_ZN8ATTClass13findByTypeReqEthPh+0x26>
    32ba:	2501      	movs	r5, #1
    32bc:	3a06      	subs	r2, #6
    32be:	b293      	uxth	r3, r2
    32c0:	7862      	ldrb	r2, [r4, #1]
    32c2:	60bb      	str	r3, [r7, #8]
    32c4:	0212      	lsls	r2, r2, #8
    32c6:	430a      	orrs	r2, r1
    32c8:	3a01      	subs	r2, #1
    32ca:	b293      	uxth	r3, r2
    32cc:	617b      	str	r3, [r7, #20]
    32ce:	4e2d      	ldr	r6, [pc, #180]	; (3384 <_ZN8ATTClass13findByTypeReqEthPh+0x138>)
    32d0:	0030      	movs	r0, r6
    32d2:	f000 fe8b 	bl	3fec <_ZNK9GATTClass14attributeCountEv>
    32d6:	697b      	ldr	r3, [r7, #20]
    32d8:	4283      	cmp	r3, r0
    32da:	d206      	bcs.n	32ea <_ZN8ATTClass13findByTypeReqEthPh+0x9e>
    32dc:	78e3      	ldrb	r3, [r4, #3]
    32de:	78a2      	ldrb	r2, [r4, #2]
    32e0:	021b      	lsls	r3, r3, #8
    32e2:	4313      	orrs	r3, r2
    32e4:	697a      	ldr	r2, [r7, #20]
    32e6:	4293      	cmp	r3, r2
    32e8:	dc0a      	bgt.n	3300 <_ZN8ATTClass13findByTypeReqEthPh+0xb4>
    32ea:	2d01      	cmp	r5, #1
    32ec:	d0d9      	beq.n	32a2 <_ZN8ATTClass13findByTypeReqEthPh+0x56>
    32ee:	693a      	ldr	r2, [r7, #16]
    32f0:	b2eb      	uxtb	r3, r5
    32f2:	9200      	str	r2, [sp, #0]
    32f4:	68f9      	ldr	r1, [r7, #12]
    32f6:	2204      	movs	r2, #4
    32f8:	4823      	ldr	r0, [pc, #140]	; (3388 <_ZN8ATTClass13findByTypeReqEthPh+0x13c>)
    32fa:	f000 fffd 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    32fe:	e7d9      	b.n	32b4 <_ZN8ATTClass13findByTypeReqEthPh+0x68>
    3300:	6979      	ldr	r1, [r7, #20]
    3302:	0030      	movs	r0, r6
    3304:	f000 fe99 	bl	403a <_ZNK9GATTClass9attributeEj>
    3308:	6803      	ldr	r3, [r0, #0]
    330a:	0006      	movs	r6, r0
    330c:	689b      	ldr	r3, [r3, #8]
    330e:	4798      	blx	r3
    3310:	7963      	ldrb	r3, [r4, #5]
    3312:	7922      	ldrb	r2, [r4, #4]
    3314:	021b      	lsls	r3, r3, #8
    3316:	4313      	orrs	r3, r2
    3318:	4298      	cmp	r0, r3
    331a:	d10e      	bne.n	333a <_ZN8ATTClass13findByTypeReqEthPh+0xee>
    331c:	0030      	movs	r0, r6
    331e:	f7fe ff1b 	bl	2158 <_ZNK12BLEAttribute10uuidLengthEv>
    3322:	68bb      	ldr	r3, [r7, #8]
    3324:	4298      	cmp	r0, r3
    3326:	d108      	bne.n	333a <_ZN8ATTClass13findByTypeReqEthPh+0xee>
    3328:	0030      	movs	r0, r6
    332a:	f7fe ff10 	bl	214e <_ZNK12BLEAttribute8uuidDataEv>
    332e:	1da1      	adds	r1, r4, #6
    3330:	68ba      	ldr	r2, [r7, #8]
    3332:	f005 fe4f 	bl	8fd4 <memcmp>
    3336:	2800      	cmp	r0, #0
    3338:	d009      	beq.n	334e <_ZN8ATTClass13findByTypeReqEthPh+0x102>
    333a:	687a      	ldr	r2, [r7, #4]
    333c:	1ceb      	adds	r3, r5, #3
    333e:	89d2      	ldrh	r2, [r2, #14]
    3340:	4293      	cmp	r3, r2
    3342:	dad2      	bge.n	32ea <_ZN8ATTClass13findByTypeReqEthPh+0x9e>
    3344:	697a      	ldr	r2, [r7, #20]
    3346:	3201      	adds	r2, #1
    3348:	b293      	uxth	r3, r2
    334a:	617b      	str	r3, [r7, #20]
    334c:	e7bf      	b.n	32ce <_ZN8ATTClass13findByTypeReqEthPh+0x82>
    334e:	0030      	movs	r0, r6
    3350:	f7ff fc5f 	bl	2c12 <_ZNK15BLELocalService11startHandleEv>
    3354:	693b      	ldr	r3, [r7, #16]
    3356:	83b8      	strh	r0, [r7, #28]
    3358:	1958      	adds	r0, r3, r5
    335a:	231c      	movs	r3, #28
    335c:	2202      	movs	r2, #2
    335e:	18f9      	adds	r1, r7, r3
    3360:	f005 fe47 	bl	8ff2 <memcpy>
    3364:	0030      	movs	r0, r6
    3366:	f7ff fc56 	bl	2c16 <_ZNK15BLELocalService9endHandleEv>
    336a:	693b      	ldr	r3, [r7, #16]
    336c:	83f8      	strh	r0, [r7, #30]
    336e:	1ca8      	adds	r0, r5, #2
    3370:	b280      	uxth	r0, r0
    3372:	1818      	adds	r0, r3, r0
    3374:	231e      	movs	r3, #30
    3376:	2202      	movs	r2, #2
    3378:	18f9      	adds	r1, r7, r3
    337a:	3504      	adds	r5, #4
    337c:	f005 fe39 	bl	8ff2 <memcpy>
    3380:	b2ad      	uxth	r5, r5
    3382:	e7da      	b.n	333a <_ZN8ATTClass13findByTypeReqEthPh+0xee>
    3384:	20000314 	.word	0x20000314
    3388:	20000480 	.word	0x20000480

0000338c <_ZN8ATTClass14readByGroupReqEthPh>:
    338c:	b5f0      	push	{r4, r5, r6, r7, lr}
    338e:	b08f      	sub	sp, #60	; 0x3c
    3390:	001e      	movs	r6, r3
    3392:	466b      	mov	r3, sp
    3394:	af02      	add	r7, sp, #8
    3396:	60b8      	str	r0, [r7, #8]
    3398:	6179      	str	r1, [r7, #20]
    339a:	60fb      	str	r3, [r7, #12]
    339c:	2a06      	cmp	r2, #6
    339e:	d107      	bne.n	33b0 <_ZN8ATTClass14readByGroupReqEthPh+0x24>
    33a0:	7973      	ldrb	r3, [r6, #5]
    33a2:	7931      	ldrb	r1, [r6, #4]
    33a4:	021b      	lsls	r3, r3, #8
    33a6:	430b      	orrs	r3, r1
    33a8:	4955      	ldr	r1, [pc, #340]	; (3500 <_ZN8ATTClass14readByGroupReqEthPh+0x174>)
    33aa:	185b      	adds	r3, r3, r1
    33ac:	2b01      	cmp	r3, #1
    33ae:	d90d      	bls.n	33cc <_ZN8ATTClass14readByGroupReqEthPh+0x40>
    33b0:	7872      	ldrb	r2, [r6, #1]
    33b2:	7833      	ldrb	r3, [r6, #0]
    33b4:	0212      	lsls	r2, r2, #8
    33b6:	431a      	orrs	r2, r3
    33b8:	2310      	movs	r3, #16
    33ba:	0019      	movs	r1, r3
    33bc:	6978      	ldr	r0, [r7, #20]
    33be:	f7ff fcc1 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    33c2:	68fb      	ldr	r3, [r7, #12]
    33c4:	469d      	mov	sp, r3
    33c6:	46bd      	mov	sp, r7
    33c8:	b00d      	add	sp, #52	; 0x34
    33ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    33cc:	4669      	mov	r1, sp
    33ce:	68bb      	ldr	r3, [r7, #8]
    33d0:	89db      	ldrh	r3, [r3, #14]
    33d2:	3307      	adds	r3, #7
    33d4:	08db      	lsrs	r3, r3, #3
    33d6:	00db      	lsls	r3, r3, #3
    33d8:	1acb      	subs	r3, r1, r3
    33da:	469d      	mov	sp, r3
    33dc:	ab02      	add	r3, sp, #8
    33de:	627b      	str	r3, [r7, #36]	; 0x24
    33e0:	2311      	movs	r3, #17
    33e2:	6a79      	ldr	r1, [r7, #36]	; 0x24
    33e4:	700b      	strb	r3, [r1, #0]
    33e6:	2300      	movs	r3, #0
    33e8:	704b      	strb	r3, [r1, #1]
    33ea:	7873      	ldrb	r3, [r6, #1]
    33ec:	7831      	ldrb	r1, [r6, #0]
    33ee:	021b      	lsls	r3, r3, #8
    33f0:	430b      	orrs	r3, r1
    33f2:	3b01      	subs	r3, #1
    33f4:	b29b      	uxth	r3, r3
    33f6:	61fb      	str	r3, [r7, #28]
    33f8:	2302      	movs	r3, #2
    33fa:	607a      	str	r2, [r7, #4]
    33fc:	623b      	str	r3, [r7, #32]
    33fe:	4c41      	ldr	r4, [pc, #260]	; (3504 <_ZN8ATTClass14readByGroupReqEthPh+0x178>)
    3400:	0020      	movs	r0, r4
    3402:	f000 fdf3 	bl	3fec <_ZNK9GATTClass14attributeCountEv>
    3406:	69fb      	ldr	r3, [r7, #28]
    3408:	4283      	cmp	r3, r0
    340a:	d206      	bcs.n	341a <_ZN8ATTClass14readByGroupReqEthPh+0x8e>
    340c:	78f3      	ldrb	r3, [r6, #3]
    340e:	78b2      	ldrb	r2, [r6, #2]
    3410:	021b      	lsls	r3, r3, #8
    3412:	4313      	orrs	r3, r2
    3414:	69fa      	ldr	r2, [r7, #28]
    3416:	4293      	cmp	r3, r2
    3418:	dc14      	bgt.n	3444 <_ZN8ATTClass14readByGroupReqEthPh+0xb8>
    341a:	6a3b      	ldr	r3, [r7, #32]
    341c:	2b02      	cmp	r3, #2
    341e:	d106      	bne.n	342e <_ZN8ATTClass14readByGroupReqEthPh+0xa2>
    3420:	7872      	ldrb	r2, [r6, #1]
    3422:	7833      	ldrb	r3, [r6, #0]
    3424:	0212      	lsls	r2, r2, #8
    3426:	431a      	orrs	r2, r3
    3428:	2110      	movs	r1, #16
    342a:	230a      	movs	r3, #10
    342c:	e7c6      	b.n	33bc <_ZN8ATTClass14readByGroupReqEthPh+0x30>
    342e:	2320      	movs	r3, #32
    3430:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    3432:	18fb      	adds	r3, r7, r3
    3434:	781b      	ldrb	r3, [r3, #0]
    3436:	9200      	str	r2, [sp, #0]
    3438:	6979      	ldr	r1, [r7, #20]
    343a:	2204      	movs	r2, #4
    343c:	4832      	ldr	r0, [pc, #200]	; (3508 <_ZN8ATTClass14readByGroupReqEthPh+0x17c>)
    343e:	f000 ff5b 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    3442:	e7be      	b.n	33c2 <_ZN8ATTClass14readByGroupReqEthPh+0x36>
    3444:	0020      	movs	r0, r4
    3446:	69f9      	ldr	r1, [r7, #28]
    3448:	f000 fdf7 	bl	403a <_ZNK9GATTClass9attributeEj>
    344c:	7975      	ldrb	r5, [r6, #5]
    344e:	7933      	ldrb	r3, [r6, #4]
    3450:	022d      	lsls	r5, r5, #8
    3452:	431d      	orrs	r5, r3
    3454:	6803      	ldr	r3, [r0, #0]
    3456:	0004      	movs	r4, r0
    3458:	689b      	ldr	r3, [r3, #8]
    345a:	4798      	blx	r3
    345c:	4285      	cmp	r5, r0
    345e:	d149      	bne.n	34f4 <_ZN8ATTClass14readByGroupReqEthPh+0x168>
    3460:	0020      	movs	r0, r4
    3462:	f7fe fe79 	bl	2158 <_ZNK12BLEAttribute10uuidLengthEv>
    3466:	687b      	ldr	r3, [r7, #4]
    3468:	6138      	str	r0, [r7, #16]
    346a:	61bb      	str	r3, [r7, #24]
    346c:	2802      	cmp	r0, #2
    346e:	d001      	beq.n	3474 <_ZN8ATTClass14readByGroupReqEthPh+0xe8>
    3470:	2314      	movs	r3, #20
    3472:	61bb      	str	r3, [r7, #24]
    3474:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3476:	785b      	ldrb	r3, [r3, #1]
    3478:	2b00      	cmp	r3, #0
    347a:	d102      	bne.n	3482 <_ZN8ATTClass14readByGroupReqEthPh+0xf6>
    347c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    347e:	7e3a      	ldrb	r2, [r7, #24]
    3480:	705a      	strb	r2, [r3, #1]
    3482:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3484:	69ba      	ldr	r2, [r7, #24]
    3486:	785b      	ldrb	r3, [r3, #1]
    3488:	429a      	cmp	r2, r3
    348a:	d1c6      	bne.n	341a <_ZN8ATTClass14readByGroupReqEthPh+0x8e>
    348c:	0020      	movs	r0, r4
    348e:	f7ff fbc0 	bl	2c12 <_ZNK15BLELocalService11startHandleEv>
    3492:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3494:	6a3a      	ldr	r2, [r7, #32]
    3496:	85b8      	strh	r0, [r7, #44]	; 0x2c
    3498:	1898      	adds	r0, r3, r2
    349a:	232c      	movs	r3, #44	; 0x2c
    349c:	2202      	movs	r2, #2
    349e:	18f9      	adds	r1, r7, r3
    34a0:	f005 fda7 	bl	8ff2 <memcpy>
    34a4:	0020      	movs	r0, r4
    34a6:	f7ff fbb6 	bl	2c16 <_ZNK15BLELocalService9endHandleEv>
    34aa:	6a3b      	ldr	r3, [r7, #32]
    34ac:	85f8      	strh	r0, [r7, #46]	; 0x2e
    34ae:	1c98      	adds	r0, r3, #2
    34b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    34b2:	b280      	uxth	r0, r0
    34b4:	1818      	adds	r0, r3, r0
    34b6:	232e      	movs	r3, #46	; 0x2e
    34b8:	2202      	movs	r2, #2
    34ba:	18f9      	adds	r1, r7, r3
    34bc:	f005 fd99 	bl	8ff2 <memcpy>
    34c0:	6a3b      	ldr	r3, [r7, #32]
    34c2:	0020      	movs	r0, r4
    34c4:	1d1d      	adds	r5, r3, #4
    34c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    34c8:	b2ad      	uxth	r5, r5
    34ca:	195b      	adds	r3, r3, r5
    34cc:	623b      	str	r3, [r7, #32]
    34ce:	f7fe fe3e 	bl	214e <_ZNK12BLEAttribute8uuidDataEv>
    34d2:	693a      	ldr	r2, [r7, #16]
    34d4:	0001      	movs	r1, r0
    34d6:	6a38      	ldr	r0, [r7, #32]
    34d8:	f005 fd8b 	bl	8ff2 <memcpy>
    34dc:	693b      	ldr	r3, [r7, #16]
    34de:	18ed      	adds	r5, r5, r3
    34e0:	b2ab      	uxth	r3, r5
    34e2:	623b      	str	r3, [r7, #32]
    34e4:	6a3a      	ldr	r2, [r7, #32]
    34e6:	69bb      	ldr	r3, [r7, #24]
    34e8:	4694      	mov	ip, r2
    34ea:	68ba      	ldr	r2, [r7, #8]
    34ec:	4463      	add	r3, ip
    34ee:	89d2      	ldrh	r2, [r2, #14]
    34f0:	4293      	cmp	r3, r2
    34f2:	dc92      	bgt.n	341a <_ZN8ATTClass14readByGroupReqEthPh+0x8e>
    34f4:	69fb      	ldr	r3, [r7, #28]
    34f6:	3301      	adds	r3, #1
    34f8:	b29b      	uxth	r3, r3
    34fa:	61fb      	str	r3, [r7, #28]
    34fc:	e77f      	b.n	33fe <_ZN8ATTClass14readByGroupReqEthPh+0x72>
    34fe:	46c0      	nop			; (mov r8, r8)
    3500:	ffffd800 	.word	0xffffd800
    3504:	20000314 	.word	0x20000314
    3508:	20000480 	.word	0x20000480

0000350c <_ZN8ATTClass17readOrReadBlobReqEthhPh>:
    350c:	b5f0      	push	{r4, r5, r6, r7, lr}
    350e:	b08d      	sub	sp, #52	; 0x34
    3510:	000e      	movs	r6, r1
    3512:	4669      	mov	r1, sp
    3514:	af02      	add	r7, sp, #8
    3516:	0014      	movs	r4, r2
    3518:	60b8      	str	r0, [r7, #8]
    351a:	6c3a      	ldr	r2, [r7, #64]	; 0x40
    351c:	6079      	str	r1, [r7, #4]
    351e:	2c0a      	cmp	r4, #10
    3520:	d105      	bne.n	352e <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x22>
    3522:	2b02      	cmp	r3, #2
    3524:	d010      	beq.n	3548 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x3c>
    3526:	2304      	movs	r3, #4
    3528:	2200      	movs	r2, #0
    352a:	0021      	movs	r1, r4
    352c:	e004      	b.n	3538 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x2c>
    352e:	2b04      	cmp	r3, #4
    3530:	d00a      	beq.n	3548 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x3c>
    3532:	2304      	movs	r3, #4
    3534:	2200      	movs	r2, #0
    3536:	210c      	movs	r1, #12
    3538:	0030      	movs	r0, r6
    353a:	f7ff fc03 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    353e:	687b      	ldr	r3, [r7, #4]
    3540:	469d      	mov	sp, r3
    3542:	46bd      	mov	sp, r7
    3544:	b00b      	add	sp, #44	; 0x2c
    3546:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3548:	8813      	ldrh	r3, [r2, #0]
    354a:	613b      	str	r3, [r7, #16]
    354c:	2300      	movs	r3, #0
    354e:	617b      	str	r3, [r7, #20]
    3550:	2c0a      	cmp	r4, #10
    3552:	d001      	beq.n	3558 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x4c>
    3554:	8853      	ldrh	r3, [r2, #2]
    3556:	617b      	str	r3, [r7, #20]
    3558:	4d5f      	ldr	r5, [pc, #380]	; (36d8 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x1cc>)
    355a:	0028      	movs	r0, r5
    355c:	f000 fd46 	bl	3fec <_ZNK9GATTClass14attributeCountEv>
    3560:	693b      	ldr	r3, [r7, #16]
    3562:	1e59      	subs	r1, r3, #1
    3564:	b28b      	uxth	r3, r1
    3566:	4283      	cmp	r3, r0
    3568:	d902      	bls.n	3570 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x64>
    356a:	230a      	movs	r3, #10
    356c:	693a      	ldr	r2, [r7, #16]
    356e:	e7dc      	b.n	352a <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x1e>
    3570:	466a      	mov	r2, sp
    3572:	68bb      	ldr	r3, [r7, #8]
    3574:	89db      	ldrh	r3, [r3, #14]
    3576:	3307      	adds	r3, #7
    3578:	08db      	lsrs	r3, r3, #3
    357a:	00db      	lsls	r3, r3, #3
    357c:	1ad3      	subs	r3, r2, r3
    357e:	469d      	mov	sp, r3
    3580:	ab02      	add	r3, sp, #8
    3582:	60fb      	str	r3, [r7, #12]
    3584:	230b      	movs	r3, #11
    3586:	2c0a      	cmp	r4, #10
    3588:	d000      	beq.n	358c <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x80>
    358a:	3302      	adds	r3, #2
    358c:	68fa      	ldr	r2, [r7, #12]
    358e:	0028      	movs	r0, r5
    3590:	7013      	strb	r3, [r2, #0]
    3592:	f000 fd52 	bl	403a <_ZNK9GATTClass9attributeEj>
    3596:	6803      	ldr	r3, [r0, #0]
    3598:	0005      	movs	r5, r0
    359a:	689b      	ldr	r3, [r3, #8]
    359c:	4798      	blx	r3
    359e:	23a0      	movs	r3, #160	; 0xa0
    35a0:	019b      	lsls	r3, r3, #6
    35a2:	4298      	cmp	r0, r3
    35a4:	d115      	bne.n	35d2 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0xc6>
    35a6:	697b      	ldr	r3, [r7, #20]
    35a8:	2b00      	cmp	r3, #0
    35aa:	d003      	beq.n	35b4 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0xa8>
    35ac:	2304      	movs	r3, #4
    35ae:	693a      	ldr	r2, [r7, #16]
    35b0:	210b      	movs	r1, #11
    35b2:	e7c1      	b.n	3538 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x2c>
    35b4:	0028      	movs	r0, r5
    35b6:	f7fe fdcf 	bl	2158 <_ZNK12BLEAttribute10uuidLengthEv>
    35ba:	0004      	movs	r4, r0
    35bc:	0028      	movs	r0, r5
    35be:	f7fe fdc6 	bl	214e <_ZNK12BLEAttribute8uuidDataEv>
    35c2:	0022      	movs	r2, r4
    35c4:	0001      	movs	r1, r0
    35c6:	68fb      	ldr	r3, [r7, #12]
    35c8:	3301      	adds	r3, #1
    35ca:	0018      	movs	r0, r3
    35cc:	f005 fd11 	bl	8ff2 <memcpy>
    35d0:	e062      	b.n	3698 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x18c>
    35d2:	4b42      	ldr	r3, [pc, #264]	; (36dc <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x1d0>)
    35d4:	4298      	cmp	r0, r3
    35d6:	d161      	bne.n	369c <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x190>
    35d8:	0028      	movs	r0, r5
    35da:	f7ff f855 	bl	2688 <_ZNK22BLELocalCharacteristic6handleEv>
    35de:	693b      	ldr	r3, [r7, #16]
    35e0:	4283      	cmp	r3, r0
    35e2:	d12d      	bne.n	3640 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x134>
    35e4:	697b      	ldr	r3, [r7, #20]
    35e6:	2b00      	cmp	r3, #0
    35e8:	d001      	beq.n	35ee <_ZN8ATTClass17readOrReadBlobReqEthhPh+0xe2>
    35ea:	230b      	movs	r3, #11
    35ec:	e7be      	b.n	356c <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x60>
    35ee:	0028      	movs	r0, r5
    35f0:	f7fe ffd8 	bl	25a4 <_ZNK22BLELocalCharacteristic10propertiesEv>
    35f4:	68fb      	ldr	r3, [r7, #12]
    35f6:	7058      	strb	r0, [r3, #1]
    35f8:	0028      	movs	r0, r5
    35fa:	f7ff f847 	bl	268c <_ZNK22BLELocalCharacteristic11valueHandleEv>
    35fe:	68fb      	ldr	r3, [r7, #12]
    3600:	83b8      	strh	r0, [r7, #28]
    3602:	1c98      	adds	r0, r3, #2
    3604:	231c      	movs	r3, #28
    3606:	2202      	movs	r2, #2
    3608:	18f9      	adds	r1, r7, r3
    360a:	f005 fcf2 	bl	8ff2 <memcpy>
    360e:	0028      	movs	r0, r5
    3610:	f7fe fda2 	bl	2158 <_ZNK12BLEAttribute10uuidLengthEv>
    3614:	0004      	movs	r4, r0
    3616:	0028      	movs	r0, r5
    3618:	f7fe fd99 	bl	214e <_ZNK12BLEAttribute8uuidDataEv>
    361c:	68fb      	ldr	r3, [r7, #12]
    361e:	0001      	movs	r1, r0
    3620:	3304      	adds	r3, #4
    3622:	0022      	movs	r2, r4
    3624:	0018      	movs	r0, r3
    3626:	f005 fce4 	bl	8ff2 <memcpy>
    362a:	3404      	adds	r4, #4
    362c:	b2a3      	uxth	r3, r4
    362e:	68fa      	ldr	r2, [r7, #12]
    3630:	b2db      	uxtb	r3, r3
    3632:	9200      	str	r2, [sp, #0]
    3634:	0031      	movs	r1, r6
    3636:	2204      	movs	r2, #4
    3638:	4829      	ldr	r0, [pc, #164]	; (36e0 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x1d4>)
    363a:	f000 fe5d 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    363e:	e77e      	b.n	353e <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x32>
    3640:	0028      	movs	r0, r5
    3642:	f7fe ffaf 	bl	25a4 <_ZNK22BLELocalCharacteristic10propertiesEv>
    3646:	2302      	movs	r3, #2
    3648:	4218      	tst	r0, r3
    364a:	d08f      	beq.n	356c <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x60>
    364c:	0028      	movs	r0, r5
    364e:	f7fe ffb0 	bl	25b2 <_ZNK22BLELocalCharacteristic11valueLengthEv>
    3652:	697b      	ldr	r3, [r7, #20]
    3654:	b280      	uxth	r0, r0
    3656:	4298      	cmp	r0, r3
    3658:	dc01      	bgt.n	365e <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x152>
    365a:	2307      	movs	r3, #7
    365c:	e786      	b.n	356c <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x60>
    365e:	68bb      	ldr	r3, [r7, #8]
    3660:	89dc      	ldrh	r4, [r3, #14]
    3662:	697b      	ldr	r3, [r7, #20]
    3664:	3c01      	subs	r4, #1
    3666:	1ac0      	subs	r0, r0, r3
    3668:	4284      	cmp	r4, r0
    366a:	dd00      	ble.n	366e <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x162>
    366c:	0004      	movs	r4, r0
    366e:	231c      	movs	r3, #28
    3670:	68ba      	ldr	r2, [r7, #8]
    3672:	0031      	movs	r1, r6
    3674:	3208      	adds	r2, #8
    3676:	18f8      	adds	r0, r7, r3
    3678:	f7fe fe82 	bl	2380 <_ZN9BLEDeviceC1EtPh>
    367c:	211c      	movs	r1, #28
    367e:	68fb      	ldr	r3, [r7, #12]
    3680:	b2a2      	uxth	r2, r4
    3682:	9200      	str	r2, [sp, #0]
    3684:	3301      	adds	r3, #1
    3686:	0028      	movs	r0, r5
    3688:	697a      	ldr	r2, [r7, #20]
    368a:	1879      	adds	r1, r7, r1
    368c:	f7ff f8b8 	bl	2800 <_ZN22BLELocalCharacteristic9readValueE9BLEDevicetPhi>
    3690:	231c      	movs	r3, #28
    3692:	18f8      	adds	r0, r7, r3
    3694:	f7fe fdc2 	bl	221c <_ZN9BLEDeviceD1Ev>
    3698:	3401      	adds	r4, #1
    369a:	e7c7      	b.n	362c <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x120>
    369c:	22a4      	movs	r2, #164	; 0xa4
    369e:	2301      	movs	r3, #1
    36a0:	0192      	lsls	r2, r2, #6
    36a2:	4290      	cmp	r0, r2
    36a4:	d1c3      	bne.n	362e <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x122>
    36a6:	0028      	movs	r0, r5
    36a8:	f7ff f960 	bl	296c <_ZNK18BLELocalDescriptor9valueSizeEv>
    36ac:	697b      	ldr	r3, [r7, #20]
    36ae:	b280      	uxth	r0, r0
    36b0:	4298      	cmp	r0, r3
    36b2:	ddd2      	ble.n	365a <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x14e>
    36b4:	68bb      	ldr	r3, [r7, #8]
    36b6:	89dc      	ldrh	r4, [r3, #14]
    36b8:	697b      	ldr	r3, [r7, #20]
    36ba:	3c01      	subs	r4, #1
    36bc:	1ac0      	subs	r0, r0, r3
    36be:	4284      	cmp	r4, r0
    36c0:	dd00      	ble.n	36c4 <_ZN8ATTClass17readOrReadBlobReqEthhPh+0x1b8>
    36c2:	0004      	movs	r4, r0
    36c4:	0028      	movs	r0, r5
    36c6:	f7ff f953 	bl	2970 <_ZNK18BLELocalDescriptor5valueEv>
    36ca:	68fb      	ldr	r3, [r7, #12]
    36cc:	6979      	ldr	r1, [r7, #20]
    36ce:	3301      	adds	r3, #1
    36d0:	b2a2      	uxth	r2, r4
    36d2:	1841      	adds	r1, r0, r1
    36d4:	e779      	b.n	35ca <_ZN8ATTClass17readOrReadBlobReqEthhPh+0xbe>
    36d6:	46c0      	nop			; (mov r8, r8)
    36d8:	20000314 	.word	0x20000314
    36dc:	00002803 	.word	0x00002803
    36e0:	20000480 	.word	0x20000480

000036e4 <_ZN8ATTClass13readByTypeReqEthPh>:
    36e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    36e6:	b08d      	sub	sp, #52	; 0x34
    36e8:	af02      	add	r7, sp, #8
    36ea:	61bb      	str	r3, [r7, #24]
    36ec:	466b      	mov	r3, sp
    36ee:	6178      	str	r0, [r7, #20]
    36f0:	60b9      	str	r1, [r7, #8]
    36f2:	603b      	str	r3, [r7, #0]
    36f4:	2a06      	cmp	r2, #6
    36f6:	d00d      	beq.n	3714 <_ZN8ATTClass13readByTypeReqEthPh+0x30>
    36f8:	69ba      	ldr	r2, [r7, #24]
    36fa:	69bb      	ldr	r3, [r7, #24]
    36fc:	7852      	ldrb	r2, [r2, #1]
    36fe:	781b      	ldrb	r3, [r3, #0]
    3700:	0212      	lsls	r2, r2, #8
    3702:	431a      	orrs	r2, r3
    3704:	2108      	movs	r1, #8
    3706:	2304      	movs	r3, #4
    3708:	68b8      	ldr	r0, [r7, #8]
    370a:	f7ff fb1b 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    370e:	46bd      	mov	sp, r7
    3710:	b00b      	add	sp, #44	; 0x2c
    3712:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3714:	466a      	mov	r2, sp
    3716:	697b      	ldr	r3, [r7, #20]
    3718:	2402      	movs	r4, #2
    371a:	89db      	ldrh	r3, [r3, #14]
    371c:	3307      	adds	r3, #7
    371e:	08db      	lsrs	r3, r3, #3
    3720:	00db      	lsls	r3, r3, #3
    3722:	1ad3      	subs	r3, r2, r3
    3724:	469d      	mov	sp, r3
    3726:	ab02      	add	r3, sp, #8
    3728:	61fb      	str	r3, [r7, #28]
    372a:	2309      	movs	r3, #9
    372c:	69fa      	ldr	r2, [r7, #28]
    372e:	7013      	strb	r3, [r2, #0]
    3730:	2300      	movs	r3, #0
    3732:	7053      	strb	r3, [r2, #1]
    3734:	69ba      	ldr	r2, [r7, #24]
    3736:	69bb      	ldr	r3, [r7, #24]
    3738:	7855      	ldrb	r5, [r2, #1]
    373a:	781b      	ldrb	r3, [r3, #0]
    373c:	022d      	lsls	r5, r5, #8
    373e:	431d      	orrs	r5, r3
    3740:	3d01      	subs	r5, #1
    3742:	b2ad      	uxth	r5, r5
    3744:	4e82      	ldr	r6, [pc, #520]	; (3950 <_ZN8ATTClass13readByTypeReqEthPh+0x26c>)
    3746:	0030      	movs	r0, r6
    3748:	f000 fc50 	bl	3fec <_ZNK9GATTClass14attributeCountEv>
    374c:	4285      	cmp	r5, r0
    374e:	d207      	bcs.n	3760 <_ZN8ATTClass13readByTypeReqEthPh+0x7c>
    3750:	69bb      	ldr	r3, [r7, #24]
    3752:	789a      	ldrb	r2, [r3, #2]
    3754:	78db      	ldrb	r3, [r3, #3]
    3756:	021b      	lsls	r3, r3, #8
    3758:	4313      	orrs	r3, r2
    375a:	42ab      	cmp	r3, r5
    375c:	dd00      	ble.n	3760 <_ZN8ATTClass13readByTypeReqEthPh+0x7c>
    375e:	e08c      	b.n	387a <_ZN8ATTClass13readByTypeReqEthPh+0x196>
    3760:	2c02      	cmp	r4, #2
    3762:	d000      	beq.n	3766 <_ZN8ATTClass13readByTypeReqEthPh+0x82>
    3764:	e080      	b.n	3868 <_ZN8ATTClass13readByTypeReqEthPh+0x184>
    3766:	69ba      	ldr	r2, [r7, #24]
    3768:	69bb      	ldr	r3, [r7, #24]
    376a:	7852      	ldrb	r2, [r2, #1]
    376c:	781b      	ldrb	r3, [r3, #0]
    376e:	0212      	lsls	r2, r2, #8
    3770:	431a      	orrs	r2, r3
    3772:	2108      	movs	r1, #8
    3774:	230a      	movs	r3, #10
    3776:	68b8      	ldr	r0, [r7, #8]
    3778:	f7ff fae4 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    377c:	683b      	ldr	r3, [r7, #0]
    377e:	469d      	mov	sp, r3
    3780:	e7c5      	b.n	370e <_ZN8ATTClass13readByTypeReqEthPh+0x2a>
    3782:	6833      	ldr	r3, [r6, #0]
    3784:	0030      	movs	r0, r6
    3786:	689b      	ldr	r3, [r3, #8]
    3788:	4798      	blx	r3
    378a:	4b72      	ldr	r3, [pc, #456]	; (3954 <_ZN8ATTClass13readByTypeReqEthPh+0x270>)
    378c:	4298      	cmp	r0, r3
    378e:	d000      	beq.n	3792 <_ZN8ATTClass13readByTypeReqEthPh+0xae>
    3790:	e0db      	b.n	394a <_ZN8ATTClass13readByTypeReqEthPh+0x266>
    3792:	69fb      	ldr	r3, [r7, #28]
    3794:	2202      	movs	r2, #2
    3796:	1918      	adds	r0, r3, r4
    3798:	2324      	movs	r3, #36	; 0x24
    379a:	18f9      	adds	r1, r7, r3
    379c:	f005 fc29 	bl	8ff2 <memcpy>
    37a0:	697b      	ldr	r3, [r7, #20]
    37a2:	0030      	movs	r0, r6
    37a4:	89dd      	ldrh	r5, [r3, #14]
    37a6:	f7ff f8e1 	bl	296c <_ZNK18BLELocalDescriptor9valueSizeEv>
    37aa:	3402      	adds	r4, #2
    37ac:	b2a4      	uxth	r4, r4
    37ae:	1b2d      	subs	r5, r5, r4
    37b0:	b2ad      	uxth	r5, r5
    37b2:	b280      	uxth	r0, r0
    37b4:	42a8      	cmp	r0, r5
    37b6:	dd14      	ble.n	37e2 <_ZN8ATTClass13readByTypeReqEthPh+0xfe>
    37b8:	697b      	ldr	r3, [r7, #20]
    37ba:	89dd      	ldrh	r5, [r3, #14]
    37bc:	1b2d      	subs	r5, r5, r4
    37be:	b2ad      	uxth	r5, r5
    37c0:	69fb      	ldr	r3, [r7, #28]
    37c2:	0030      	movs	r0, r6
    37c4:	191b      	adds	r3, r3, r4
    37c6:	617b      	str	r3, [r7, #20]
    37c8:	f7ff f8d2 	bl	2970 <_ZNK18BLELocalDescriptor5valueEv>
    37cc:	0001      	movs	r1, r0
    37ce:	002a      	movs	r2, r5
    37d0:	6978      	ldr	r0, [r7, #20]
    37d2:	f005 fc0e 	bl	8ff2 <memcpy>
    37d6:	69fb      	ldr	r3, [r7, #28]
    37d8:	1964      	adds	r4, r4, r5
    37da:	3502      	adds	r5, #2
    37dc:	b2a4      	uxth	r4, r4
    37de:	705d      	strb	r5, [r3, #1]
    37e0:	e7be      	b.n	3760 <_ZN8ATTClass13readByTypeReqEthPh+0x7c>
    37e2:	0030      	movs	r0, r6
    37e4:	f7ff f8c2 	bl	296c <_ZNK18BLELocalDescriptor9valueSizeEv>
    37e8:	b285      	uxth	r5, r0
    37ea:	e7e9      	b.n	37c0 <_ZN8ATTClass13readByTypeReqEthPh+0xdc>
    37ec:	6893      	ldr	r3, [r2, #8]
    37ee:	0030      	movs	r0, r6
    37f0:	4798      	blx	r3
    37f2:	4b59      	ldr	r3, [pc, #356]	; (3958 <_ZN8ATTClass13readByTypeReqEthPh+0x274>)
    37f4:	4298      	cmp	r0, r3
    37f6:	d000      	beq.n	37fa <_ZN8ATTClass13readByTypeReqEthPh+0x116>
    37f8:	e0a7      	b.n	394a <_ZN8ATTClass13readByTypeReqEthPh+0x266>
    37fa:	0030      	movs	r0, r6
    37fc:	f7fe fcac 	bl	2158 <_ZNK12BLEAttribute10uuidLengthEv>
    3800:	6138      	str	r0, [r7, #16]
    3802:	2802      	cmp	r0, #2
    3804:	d000      	beq.n	3808 <_ZN8ATTClass13readByTypeReqEthPh+0x124>
    3806:	e0a0      	b.n	394a <_ZN8ATTClass13readByTypeReqEthPh+0x266>
    3808:	0030      	movs	r0, r6
    380a:	f7fe fca0 	bl	214e <_ZNK12BLEAttribute8uuidDataEv>
    380e:	69bb      	ldr	r3, [r7, #24]
    3810:	0001      	movs	r1, r0
    3812:	3304      	adds	r3, #4
    3814:	693a      	ldr	r2, [r7, #16]
    3816:	0018      	movs	r0, r3
    3818:	f005 fbdc 	bl	8fd4 <memcmp>
    381c:	2800      	cmp	r0, #0
    381e:	d000      	beq.n	3822 <_ZN8ATTClass13readByTypeReqEthPh+0x13e>
    3820:	e093      	b.n	394a <_ZN8ATTClass13readByTypeReqEthPh+0x266>
    3822:	69fb      	ldr	r3, [r7, #28]
    3824:	693a      	ldr	r2, [r7, #16]
    3826:	1918      	adds	r0, r3, r4
    3828:	2324      	movs	r3, #36	; 0x24
    382a:	18f9      	adds	r1, r7, r3
    382c:	f005 fbe1 	bl	8ff2 <memcpy>
    3830:	697b      	ldr	r3, [r7, #20]
    3832:	0030      	movs	r0, r6
    3834:	89dd      	ldrh	r5, [r3, #14]
    3836:	f7fe febc 	bl	25b2 <_ZNK22BLELocalCharacteristic11valueLengthEv>
    383a:	3402      	adds	r4, #2
    383c:	b2a4      	uxth	r4, r4
    383e:	1b2d      	subs	r5, r5, r4
    3840:	b2ad      	uxth	r5, r5
    3842:	b280      	uxth	r0, r0
    3844:	42a8      	cmp	r0, r5
    3846:	dc04      	bgt.n	3852 <_ZN8ATTClass13readByTypeReqEthPh+0x16e>
    3848:	0030      	movs	r0, r6
    384a:	f7fe feb2 	bl	25b2 <_ZNK22BLELocalCharacteristic11valueLengthEv>
    384e:	b285      	uxth	r5, r0
    3850:	e003      	b.n	385a <_ZN8ATTClass13readByTypeReqEthPh+0x176>
    3852:	697b      	ldr	r3, [r7, #20]
    3854:	89dd      	ldrh	r5, [r3, #14]
    3856:	1b2d      	subs	r5, r5, r4
    3858:	b2ad      	uxth	r5, r5
    385a:	69fb      	ldr	r3, [r7, #28]
    385c:	0030      	movs	r0, r6
    385e:	191b      	adds	r3, r3, r4
    3860:	617b      	str	r3, [r7, #20]
    3862:	f7fe fea4 	bl	25ae <_ZNK22BLELocalCharacteristic5valueEv>
    3866:	e7b1      	b.n	37cc <_ZN8ATTClass13readByTypeReqEthPh+0xe8>
    3868:	69fa      	ldr	r2, [r7, #28]
    386a:	b2e3      	uxtb	r3, r4
    386c:	9200      	str	r2, [sp, #0]
    386e:	68b9      	ldr	r1, [r7, #8]
    3870:	2204      	movs	r2, #4
    3872:	483a      	ldr	r0, [pc, #232]	; (395c <_ZN8ATTClass13readByTypeReqEthPh+0x278>)
    3874:	f000 fd40 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    3878:	e780      	b.n	377c <_ZN8ATTClass13readByTypeReqEthPh+0x98>
    387a:	0029      	movs	r1, r5
    387c:	0030      	movs	r0, r6
    387e:	f000 fbdc 	bl	403a <_ZNK9GATTClass9attributeEj>
    3882:	1c6b      	adds	r3, r5, #1
    3884:	b29b      	uxth	r3, r3
    3886:	60fb      	str	r3, [r7, #12]
    3888:	89bb      	ldrh	r3, [r7, #12]
    388a:	0006      	movs	r6, r0
    388c:	84bb      	strh	r3, [r7, #36]	; 0x24
    388e:	6803      	ldr	r3, [r0, #0]
    3890:	689b      	ldr	r3, [r3, #8]
    3892:	4798      	blx	r3
    3894:	69bb      	ldr	r3, [r7, #24]
    3896:	791a      	ldrb	r2, [r3, #4]
    3898:	795b      	ldrb	r3, [r3, #5]
    389a:	021b      	lsls	r3, r3, #8
    389c:	4313      	orrs	r3, r2
    389e:	6832      	ldr	r2, [r6, #0]
    38a0:	4298      	cmp	r0, r3
    38a2:	d1a3      	bne.n	37ec <_ZN8ATTClass13readByTypeReqEthPh+0x108>
    38a4:	6893      	ldr	r3, [r2, #8]
    38a6:	0030      	movs	r0, r6
    38a8:	4798      	blx	r3
    38aa:	4b2b      	ldr	r3, [pc, #172]	; (3958 <_ZN8ATTClass13readByTypeReqEthPh+0x274>)
    38ac:	4298      	cmp	r0, r3
    38ae:	d000      	beq.n	38b2 <_ZN8ATTClass13readByTypeReqEthPh+0x1ce>
    38b0:	e767      	b.n	3782 <_ZN8ATTClass13readByTypeReqEthPh+0x9e>
    38b2:	0030      	movs	r0, r6
    38b4:	f7fe feea 	bl	268c <_ZNK22BLELocalCharacteristic11valueHandleEv>
    38b8:	68fb      	ldr	r3, [r7, #12]
    38ba:	4283      	cmp	r3, r0
    38bc:	d045      	beq.n	394a <_ZN8ATTClass13readByTypeReqEthPh+0x266>
    38be:	0030      	movs	r0, r6
    38c0:	f7fe fc4a 	bl	2158 <_ZNK12BLEAttribute10uuidLengthEv>
    38c4:	2307      	movs	r3, #7
    38c6:	6078      	str	r0, [r7, #4]
    38c8:	613b      	str	r3, [r7, #16]
    38ca:	2802      	cmp	r0, #2
    38cc:	d001      	beq.n	38d2 <_ZN8ATTClass13readByTypeReqEthPh+0x1ee>
    38ce:	2315      	movs	r3, #21
    38d0:	613b      	str	r3, [r7, #16]
    38d2:	69fb      	ldr	r3, [r7, #28]
    38d4:	785b      	ldrb	r3, [r3, #1]
    38d6:	2b00      	cmp	r3, #0
    38d8:	d102      	bne.n	38e0 <_ZN8ATTClass13readByTypeReqEthPh+0x1fc>
    38da:	69fb      	ldr	r3, [r7, #28]
    38dc:	7c3a      	ldrb	r2, [r7, #16]
    38de:	705a      	strb	r2, [r3, #1]
    38e0:	69fb      	ldr	r3, [r7, #28]
    38e2:	693a      	ldr	r2, [r7, #16]
    38e4:	785b      	ldrb	r3, [r3, #1]
    38e6:	429a      	cmp	r2, r3
    38e8:	d000      	beq.n	38ec <_ZN8ATTClass13readByTypeReqEthPh+0x208>
    38ea:	e739      	b.n	3760 <_ZN8ATTClass13readByTypeReqEthPh+0x7c>
    38ec:	69fb      	ldr	r3, [r7, #28]
    38ee:	2202      	movs	r2, #2
    38f0:	1918      	adds	r0, r3, r4
    38f2:	2324      	movs	r3, #36	; 0x24
    38f4:	18f9      	adds	r1, r7, r3
    38f6:	f005 fb7c 	bl	8ff2 <memcpy>
    38fa:	0030      	movs	r0, r6
    38fc:	f7fe fe52 	bl	25a4 <_ZNK22BLELocalCharacteristic10propertiesEv>
    3900:	69fa      	ldr	r2, [r7, #28]
    3902:	1ca3      	adds	r3, r4, #2
    3904:	b29b      	uxth	r3, r3
    3906:	54d0      	strb	r0, [r2, r3]
    3908:	2326      	movs	r3, #38	; 0x26
    390a:	1ce0      	adds	r0, r4, #3
    390c:	b280      	uxth	r0, r0
    390e:	18f9      	adds	r1, r7, r3
    3910:	3502      	adds	r5, #2
    3912:	1810      	adds	r0, r2, r0
    3914:	2202      	movs	r2, #2
    3916:	84fd      	strh	r5, [r7, #38]	; 0x26
    3918:	3405      	adds	r4, #5
    391a:	f005 fb6a 	bl	8ff2 <memcpy>
    391e:	69fb      	ldr	r3, [r7, #28]
    3920:	b2a4      	uxth	r4, r4
    3922:	0030      	movs	r0, r6
    3924:	191d      	adds	r5, r3, r4
    3926:	f7fe fc12 	bl	214e <_ZNK12BLEAttribute8uuidDataEv>
    392a:	687a      	ldr	r2, [r7, #4]
    392c:	0001      	movs	r1, r0
    392e:	0028      	movs	r0, r5
    3930:	f005 fb5f 	bl	8ff2 <memcpy>
    3934:	687b      	ldr	r3, [r7, #4]
    3936:	697a      	ldr	r2, [r7, #20]
    3938:	18e4      	adds	r4, r4, r3
    393a:	693b      	ldr	r3, [r7, #16]
    393c:	b2a4      	uxth	r4, r4
    393e:	89d2      	ldrh	r2, [r2, #14]
    3940:	18e3      	adds	r3, r4, r3
    3942:	4293      	cmp	r3, r2
    3944:	dd00      	ble.n	3948 <_ZN8ATTClass13readByTypeReqEthPh+0x264>
    3946:	e70b      	b.n	3760 <_ZN8ATTClass13readByTypeReqEthPh+0x7c>
    3948:	68fd      	ldr	r5, [r7, #12]
    394a:	3501      	adds	r5, #1
    394c:	b2ad      	uxth	r5, r5
    394e:	e6f9      	b.n	3744 <_ZN8ATTClass13readByTypeReqEthPh+0x60>
    3950:	20000314 	.word	0x20000314
    3954:	00002902 	.word	0x00002902
    3958:	00002803 	.word	0x00002803
    395c:	20000480 	.word	0x20000480

00003960 <_ZN8ATTClass13writeReqOrCmdEthhPh>:
    3960:	b5f0      	push	{r4, r5, r6, r7, lr}
    3962:	b08b      	sub	sp, #44	; 0x2c
    3964:	af02      	add	r7, sp, #8
    3966:	60b8      	str	r0, [r7, #8]
    3968:	000d      	movs	r5, r1
    396a:	0014      	movs	r4, r2
    396c:	607b      	str	r3, [r7, #4]
    396e:	2b01      	cmp	r3, #1
    3970:	d808      	bhi.n	3984 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x24>
    3972:	2a12      	cmp	r2, #18
    3974:	d115      	bne.n	39a2 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x42>
    3976:	2304      	movs	r3, #4
    3978:	2200      	movs	r2, #0
    397a:	0021      	movs	r1, r4
    397c:	0028      	movs	r0, r5
    397e:	f7ff f9e1 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    3982:	e00e      	b.n	39a2 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x42>
    3984:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    3986:	484b      	ldr	r0, [pc, #300]	; (3ab4 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x154>)
    3988:	881b      	ldrh	r3, [r3, #0]
    398a:	60fb      	str	r3, [r7, #12]
    398c:	f000 fb2e 	bl	3fec <_ZNK9GATTClass14attributeCountEv>
    3990:	68fb      	ldr	r3, [r7, #12]
    3992:	1e59      	subs	r1, r3, #1
    3994:	b28b      	uxth	r3, r1
    3996:	4283      	cmp	r3, r0
    3998:	d906      	bls.n	39a8 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x48>
    399a:	230a      	movs	r3, #10
    399c:	2c12      	cmp	r4, #18
    399e:	d100      	bne.n	39a2 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x42>
    39a0:	e085      	b.n	3aae <_ZN8ATTClass13writeReqOrCmdEthhPh+0x14e>
    39a2:	46bd      	mov	sp, r7
    39a4:	b009      	add	sp, #36	; 0x24
    39a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    39a8:	4842      	ldr	r0, [pc, #264]	; (3ab4 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x154>)
    39aa:	f000 fb46 	bl	403a <_ZNK9GATTClass9attributeEj>
    39ae:	6803      	ldr	r3, [r0, #0]
    39b0:	0006      	movs	r6, r0
    39b2:	689b      	ldr	r3, [r3, #8]
    39b4:	4798      	blx	r3
    39b6:	4b40      	ldr	r3, [pc, #256]	; (3ab8 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x158>)
    39b8:	4298      	cmp	r0, r3
    39ba:	d141      	bne.n	3a40 <_ZN8ATTClass13writeReqOrCmdEthhPh+0xe0>
    39bc:	0030      	movs	r0, r6
    39be:	f7fe fe65 	bl	268c <_ZNK22BLELocalCharacteristic11valueHandleEv>
    39c2:	68fb      	ldr	r3, [r7, #12]
    39c4:	4283      	cmp	r3, r0
    39c6:	d101      	bne.n	39cc <_ZN8ATTClass13writeReqOrCmdEthhPh+0x6c>
    39c8:	2c12      	cmp	r4, #18
    39ca:	d133      	bne.n	3a34 <_ZN8ATTClass13writeReqOrCmdEthhPh+0xd4>
    39cc:	0030      	movs	r0, r6
    39ce:	f7fe fde9 	bl	25a4 <_ZNK22BLELocalCharacteristic10propertiesEv>
    39d2:	0703      	lsls	r3, r0, #28
    39d4:	d567      	bpl.n	3aa6 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x146>
    39d6:	68bb      	ldr	r3, [r7, #8]
    39d8:	88db      	ldrh	r3, [r3, #6]
    39da:	42ab      	cmp	r3, r5
    39dc:	d114      	bne.n	3a08 <_ZN8ATTClass13writeReqOrCmdEthhPh+0xa8>
    39de:	2314      	movs	r3, #20
    39e0:	68ba      	ldr	r2, [r7, #8]
    39e2:	0029      	movs	r1, r5
    39e4:	3208      	adds	r2, #8
    39e6:	18f8      	adds	r0, r7, r3
    39e8:	f7fe fcca 	bl	2380 <_ZN9BLEDeviceC1EtPh>
    39ec:	2114      	movs	r1, #20
    39ee:	687b      	ldr	r3, [r7, #4]
    39f0:	6bba      	ldr	r2, [r7, #56]	; 0x38
    39f2:	3b02      	subs	r3, #2
    39f4:	b2db      	uxtb	r3, r3
    39f6:	3202      	adds	r2, #2
    39f8:	1879      	adds	r1, r7, r1
    39fa:	0030      	movs	r0, r6
    39fc:	f7fe ff2c 	bl	2858 <_ZN22BLELocalCharacteristic10writeValueE9BLEDevicePKhi>
    3a00:	2314      	movs	r3, #20
    3a02:	18f8      	adds	r0, r7, r3
    3a04:	f7fe fc0a 	bl	221c <_ZN9BLEDeviceD1Ev>
    3a08:	2c12      	cmp	r4, #18
    3a0a:	d1ca      	bne.n	39a2 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x42>
    3a0c:	466c      	mov	r4, sp
    3a0e:	68bb      	ldr	r3, [r7, #8]
    3a10:	2213      	movs	r2, #19
    3a12:	89db      	ldrh	r3, [r3, #14]
    3a14:	0029      	movs	r1, r5
    3a16:	3307      	adds	r3, #7
    3a18:	08db      	lsrs	r3, r3, #3
    3a1a:	00db      	lsls	r3, r3, #3
    3a1c:	1ae3      	subs	r3, r4, r3
    3a1e:	469d      	mov	sp, r3
    3a20:	ab02      	add	r3, sp, #8
    3a22:	701a      	strb	r2, [r3, #0]
    3a24:	4825      	ldr	r0, [pc, #148]	; (3abc <_ZN8ATTClass13writeReqOrCmdEthhPh+0x15c>)
    3a26:	9300      	str	r3, [sp, #0]
    3a28:	3a0f      	subs	r2, #15
    3a2a:	2301      	movs	r3, #1
    3a2c:	f000 fc64 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    3a30:	46a5      	mov	sp, r4
    3a32:	e7b6      	b.n	39a2 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x42>
    3a34:	0030      	movs	r0, r6
    3a36:	f7fe fdb5 	bl	25a4 <_ZNK22BLELocalCharacteristic10propertiesEv>
    3a3a:	0743      	lsls	r3, r0, #29
    3a3c:	d4cb      	bmi.n	39d6 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x76>
    3a3e:	e7b0      	b.n	39a2 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x42>
    3a40:	6833      	ldr	r3, [r6, #0]
    3a42:	0030      	movs	r0, r6
    3a44:	689b      	ldr	r3, [r3, #8]
    3a46:	4798      	blx	r3
    3a48:	23a4      	movs	r3, #164	; 0xa4
    3a4a:	019b      	lsls	r3, r3, #6
    3a4c:	4298      	cmp	r0, r3
    3a4e:	d12a      	bne.n	3aa6 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x146>
    3a50:	0030      	movs	r0, r6
    3a52:	f7fe fb81 	bl	2158 <_ZNK12BLEAttribute10uuidLengthEv>
    3a56:	2802      	cmp	r0, #2
    3a58:	d125      	bne.n	3aa6 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x146>
    3a5a:	0030      	movs	r0, r6
    3a5c:	f7fe fb77 	bl	214e <_ZNK12BLEAttribute8uuidDataEv>
    3a60:	4b17      	ldr	r3, [pc, #92]	; (3ac0 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x160>)
    3a62:	8802      	ldrh	r2, [r0, #0]
    3a64:	429a      	cmp	r2, r3
    3a66:	d11e      	bne.n	3aa6 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x146>
    3a68:	68fb      	ldr	r3, [r7, #12]
    3a6a:	4812      	ldr	r0, [pc, #72]	; (3ab4 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x154>)
    3a6c:	1e99      	subs	r1, r3, #2
    3a6e:	f000 fae4 	bl	403a <_ZNK9GATTClass9attributeEj>
    3a72:	6803      	ldr	r3, [r0, #0]
    3a74:	0006      	movs	r6, r0
    3a76:	689b      	ldr	r3, [r3, #8]
    3a78:	4798      	blx	r3
    3a7a:	4b0f      	ldr	r3, [pc, #60]	; (3ab8 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x158>)
    3a7c:	4298      	cmp	r0, r3
    3a7e:	d112      	bne.n	3aa6 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x146>
    3a80:	68bb      	ldr	r3, [r7, #8]
    3a82:	88db      	ldrh	r3, [r3, #6]
    3a84:	42ab      	cmp	r3, r5
    3a86:	d1bf      	bne.n	3a08 <_ZN8ATTClass13writeReqOrCmdEthhPh+0xa8>
    3a88:	2314      	movs	r3, #20
    3a8a:	68ba      	ldr	r2, [r7, #8]
    3a8c:	0029      	movs	r1, r5
    3a8e:	18f8      	adds	r0, r7, r3
    3a90:	3208      	adds	r2, #8
    3a92:	f7fe fc75 	bl	2380 <_ZN9BLEDeviceC1EtPh>
    3a96:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    3a98:	0030      	movs	r0, r6
    3a9a:	885a      	ldrh	r2, [r3, #2]
    3a9c:	2314      	movs	r3, #20
    3a9e:	18f9      	adds	r1, r7, r3
    3aa0:	f7fe ff06 	bl	28b0 <_ZN22BLELocalCharacteristic14writeCccdValueE9BLEDevicet>
    3aa4:	e7ac      	b.n	3a00 <_ZN8ATTClass13writeReqOrCmdEthhPh+0xa0>
    3aa6:	2c12      	cmp	r4, #18
    3aa8:	d000      	beq.n	3aac <_ZN8ATTClass13writeReqOrCmdEthhPh+0x14c>
    3aaa:	e77a      	b.n	39a2 <_ZN8ATTClass13writeReqOrCmdEthhPh+0x42>
    3aac:	2303      	movs	r3, #3
    3aae:	68fa      	ldr	r2, [r7, #12]
    3ab0:	e763      	b.n	397a <_ZN8ATTClass13writeReqOrCmdEthhPh+0x1a>
    3ab2:	46c0      	nop			; (mov r8, r8)
    3ab4:	20000314 	.word	0x20000314
    3ab8:	00002803 	.word	0x00002803
    3abc:	20000480 	.word	0x20000480
    3ac0:	00002902 	.word	0x00002902

00003ac4 <_ZN8ATTClass12prepWriteReqEthPh>:
    3ac4:	b5f0      	push	{r4, r5, r6, r7, lr}
    3ac6:	b08b      	sub	sp, #44	; 0x2c
    3ac8:	af02      	add	r7, sp, #8
    3aca:	617b      	str	r3, [r7, #20]
    3acc:	466b      	mov	r3, sp
    3ace:	0005      	movs	r5, r0
    3ad0:	61f9      	str	r1, [r7, #28]
    3ad2:	613a      	str	r2, [r7, #16]
    3ad4:	60bb      	str	r3, [r7, #8]
    3ad6:	2a03      	cmp	r2, #3
    3ad8:	d806      	bhi.n	3ae8 <_ZN8ATTClass12prepWriteReqEthPh+0x24>
    3ada:	2304      	movs	r3, #4
    3adc:	2200      	movs	r2, #0
    3ade:	2116      	movs	r1, #22
    3ae0:	69f8      	ldr	r0, [r7, #28]
    3ae2:	f7ff f92f 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    3ae6:	e075      	b.n	3bd4 <_ZN8ATTClass12prepWriteReqEthPh+0x110>
    3ae8:	697a      	ldr	r2, [r7, #20]
    3aea:	697b      	ldr	r3, [r7, #20]
    3aec:	7854      	ldrb	r4, [r2, #1]
    3aee:	781b      	ldrb	r3, [r3, #0]
    3af0:	78d0      	ldrb	r0, [r2, #3]
    3af2:	0224      	lsls	r4, r4, #8
    3af4:	431c      	orrs	r4, r3
    3af6:	7893      	ldrb	r3, [r2, #2]
    3af8:	4e3c      	ldr	r6, [pc, #240]	; (3bec <_ZN8ATTClass12prepWriteReqEthPh+0x128>)
    3afa:	0200      	lsls	r0, r0, #8
    3afc:	4318      	orrs	r0, r3
    3afe:	60f8      	str	r0, [r7, #12]
    3b00:	0030      	movs	r0, r6
    3b02:	f000 fa73 	bl	3fec <_ZNK9GATTClass14attributeCountEv>
    3b06:	1e61      	subs	r1, r4, #1
    3b08:	b28b      	uxth	r3, r1
    3b0a:	4283      	cmp	r3, r0
    3b0c:	d902      	bls.n	3b14 <_ZN8ATTClass12prepWriteReqEthPh+0x50>
    3b0e:	230a      	movs	r3, #10
    3b10:	0022      	movs	r2, r4
    3b12:	e7e4      	b.n	3ade <_ZN8ATTClass12prepWriteReqEthPh+0x1a>
    3b14:	0030      	movs	r0, r6
    3b16:	f000 fa90 	bl	403a <_ZNK9GATTClass9attributeEj>
    3b1a:	6803      	ldr	r3, [r0, #0]
    3b1c:	61b8      	str	r0, [r7, #24]
    3b1e:	689b      	ldr	r3, [r3, #8]
    3b20:	4798      	blx	r3
    3b22:	4b33      	ldr	r3, [pc, #204]	; (3bf0 <_ZN8ATTClass12prepWriteReqEthPh+0x12c>)
    3b24:	4298      	cmp	r0, r3
    3b26:	d001      	beq.n	3b2c <_ZN8ATTClass12prepWriteReqEthPh+0x68>
    3b28:	230b      	movs	r3, #11
    3b2a:	e7f1      	b.n	3b10 <_ZN8ATTClass12prepWriteReqEthPh+0x4c>
    3b2c:	69b8      	ldr	r0, [r7, #24]
    3b2e:	f7fe fdad 	bl	268c <_ZNK22BLELocalCharacteristic11valueHandleEv>
    3b32:	4284      	cmp	r4, r0
    3b34:	d1f8      	bne.n	3b28 <_ZN8ATTClass12prepWriteReqEthPh+0x64>
    3b36:	69b8      	ldr	r0, [r7, #24]
    3b38:	f7fe fd34 	bl	25a4 <_ZNK22BLELocalCharacteristic10propertiesEv>
    3b3c:	0703      	lsls	r3, r0, #28
    3b3e:	d401      	bmi.n	3b44 <_ZN8ATTClass12prepWriteReqEthPh+0x80>
    3b40:	2303      	movs	r3, #3
    3b42:	e7e5      	b.n	3b10 <_ZN8ATTClass12prepWriteReqEthPh+0x4c>
    3b44:	8a6e      	ldrh	r6, [r5, #18]
    3b46:	2e00      	cmp	r6, #0
    3b48:	d149      	bne.n	3bde <_ZN8ATTClass12prepWriteReqEthPh+0x11a>
    3b4a:	69b8      	ldr	r0, [r7, #24]
    3b4c:	f7fe fd2d 	bl	25aa <_ZNK22BLELocalCharacteristic9valueSizeEv>
    3b50:	0001      	movs	r1, r0
    3b52:	6078      	str	r0, [r7, #4]
    3b54:	6968      	ldr	r0, [r5, #20]
    3b56:	f005 ff87 	bl	9a68 <realloc>
    3b5a:	832e      	strh	r6, [r5, #24]
    3b5c:	6168      	str	r0, [r5, #20]
    3b5e:	826c      	strh	r4, [r5, #18]
    3b60:	687a      	ldr	r2, [r7, #4]
    3b62:	0031      	movs	r1, r6
    3b64:	f005 fa60 	bl	9028 <memset>
    3b68:	8b2b      	ldrh	r3, [r5, #24]
    3b6a:	68fa      	ldr	r2, [r7, #12]
    3b6c:	4293      	cmp	r3, r2
    3b6e:	d13b      	bne.n	3be8 <_ZN8ATTClass12prepWriteReqEthPh+0x124>
    3b70:	693b      	ldr	r3, [r7, #16]
    3b72:	69b8      	ldr	r0, [r7, #24]
    3b74:	1f1e      	subs	r6, r3, #4
    3b76:	b2f6      	uxtb	r6, r6
    3b78:	1993      	adds	r3, r2, r6
    3b7a:	607b      	str	r3, [r7, #4]
    3b7c:	f7fe fd15 	bl	25aa <_ZNK22BLELocalCharacteristic9valueSizeEv>
    3b80:	687b      	ldr	r3, [r7, #4]
    3b82:	b280      	uxth	r0, r0
    3b84:	4298      	cmp	r0, r3
    3b86:	db2f      	blt.n	3be8 <_ZN8ATTClass12prepWriteReqEthPh+0x124>
    3b88:	696a      	ldr	r2, [r5, #20]
    3b8a:	68fb      	ldr	r3, [r7, #12]
    3b8c:	4694      	mov	ip, r2
    3b8e:	4463      	add	r3, ip
    3b90:	0018      	movs	r0, r3
    3b92:	697b      	ldr	r3, [r7, #20]
    3b94:	0032      	movs	r2, r6
    3b96:	1d19      	adds	r1, r3, #4
    3b98:	f005 fa2b 	bl	8ff2 <memcpy>
    3b9c:	466a      	mov	r2, sp
    3b9e:	8b2b      	ldrh	r3, [r5, #24]
    3ba0:	2009      	movs	r0, #9
    3ba2:	199e      	adds	r6, r3, r6
    3ba4:	89eb      	ldrh	r3, [r5, #14]
    3ba6:	6979      	ldr	r1, [r7, #20]
    3ba8:	3307      	adds	r3, #7
    3baa:	08db      	lsrs	r3, r3, #3
    3bac:	00db      	lsls	r3, r3, #3
    3bae:	1ad3      	subs	r3, r2, r3
    3bb0:	469d      	mov	sp, r3
    3bb2:	2317      	movs	r3, #23
    3bb4:	ac02      	add	r4, sp, #8
    3bb6:	7023      	strb	r3, [r4, #0]
    3bb8:	693a      	ldr	r2, [r7, #16]
    3bba:	832e      	strh	r6, [r5, #24]
    3bbc:	4468      	add	r0, sp
    3bbe:	f005 fa18 	bl	8ff2 <memcpy>
    3bc2:	693b      	ldr	r3, [r7, #16]
    3bc4:	9400      	str	r4, [sp, #0]
    3bc6:	3301      	adds	r3, #1
    3bc8:	b2db      	uxtb	r3, r3
    3bca:	2204      	movs	r2, #4
    3bcc:	69f9      	ldr	r1, [r7, #28]
    3bce:	4809      	ldr	r0, [pc, #36]	; (3bf4 <_ZN8ATTClass12prepWriteReqEthPh+0x130>)
    3bd0:	f000 fb92 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    3bd4:	68bb      	ldr	r3, [r7, #8]
    3bd6:	469d      	mov	sp, r3
    3bd8:	46bd      	mov	sp, r7
    3bda:	b009      	add	sp, #36	; 0x24
    3bdc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3bde:	230e      	movs	r3, #14
    3be0:	42b4      	cmp	r4, r6
    3be2:	d000      	beq.n	3be6 <_ZN8ATTClass12prepWriteReqEthPh+0x122>
    3be4:	e794      	b.n	3b10 <_ZN8ATTClass12prepWriteReqEthPh+0x4c>
    3be6:	e7bf      	b.n	3b68 <_ZN8ATTClass12prepWriteReqEthPh+0xa4>
    3be8:	2307      	movs	r3, #7
    3bea:	e791      	b.n	3b10 <_ZN8ATTClass12prepWriteReqEthPh+0x4c>
    3bec:	20000314 	.word	0x20000314
    3bf0:	00002803 	.word	0x00002803
    3bf4:	20000480 	.word	0x20000480

00003bf8 <_ZN8ATTClass12execWriteReqEthPh>:
    3bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
    3bfa:	b089      	sub	sp, #36	; 0x24
    3bfc:	000d      	movs	r5, r1
    3bfe:	4669      	mov	r1, sp
    3c00:	af02      	add	r7, sp, #8
    3c02:	0004      	movs	r4, r0
    3c04:	6079      	str	r1, [r7, #4]
    3c06:	2a01      	cmp	r2, #1
    3c08:	d008      	beq.n	3c1c <_ZN8ATTClass12execWriteReqEthPh+0x24>
    3c0a:	2304      	movs	r3, #4
    3c0c:	2200      	movs	r2, #0
    3c0e:	2118      	movs	r1, #24
    3c10:	0028      	movs	r0, r5
    3c12:	f7ff f897 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    3c16:	46bd      	mov	sp, r7
    3c18:	b007      	add	sp, #28
    3c1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3c1c:	8a41      	ldrh	r1, [r0, #18]
    3c1e:	2900      	cmp	r1, #0
    3c20:	d01c      	beq.n	3c5c <_ZN8ATTClass12execWriteReqEthPh+0x64>
    3c22:	781b      	ldrb	r3, [r3, #0]
    3c24:	4213      	tst	r3, r2
    3c26:	d019      	beq.n	3c5c <_ZN8ATTClass12execWriteReqEthPh+0x64>
    3c28:	3901      	subs	r1, #1
    3c2a:	4818      	ldr	r0, [pc, #96]	; (3c8c <_ZN8ATTClass12execWriteReqEthPh+0x94>)
    3c2c:	f000 fa05 	bl	403a <_ZNK9GATTClass9attributeEj>
    3c30:	88e3      	ldrh	r3, [r4, #6]
    3c32:	0006      	movs	r6, r0
    3c34:	42ab      	cmp	r3, r5
    3c36:	d111      	bne.n	3c5c <_ZN8ATTClass12execWriteReqEthPh+0x64>
    3c38:	230c      	movs	r3, #12
    3c3a:	0022      	movs	r2, r4
    3c3c:	0029      	movs	r1, r5
    3c3e:	3208      	adds	r2, #8
    3c40:	18f8      	adds	r0, r7, r3
    3c42:	f7fe fb9d 	bl	2380 <_ZN9BLEDeviceC1EtPh>
    3c46:	210c      	movs	r1, #12
    3c48:	8b23      	ldrh	r3, [r4, #24]
    3c4a:	0030      	movs	r0, r6
    3c4c:	6962      	ldr	r2, [r4, #20]
    3c4e:	1879      	adds	r1, r7, r1
    3c50:	f7fe fe02 	bl	2858 <_ZN22BLELocalCharacteristic10writeValueE9BLEDevicePKhi>
    3c54:	230c      	movs	r3, #12
    3c56:	18f8      	adds	r0, r7, r3
    3c58:	f7fe fae0 	bl	221c <_ZN9BLEDeviceD1Ev>
    3c5c:	2300      	movs	r3, #0
    3c5e:	466a      	mov	r2, sp
    3c60:	8263      	strh	r3, [r4, #18]
    3c62:	8323      	strh	r3, [r4, #24]
    3c64:	89e3      	ldrh	r3, [r4, #14]
    3c66:	0029      	movs	r1, r5
    3c68:	3307      	adds	r3, #7
    3c6a:	08db      	lsrs	r3, r3, #3
    3c6c:	00db      	lsls	r3, r3, #3
    3c6e:	1ad3      	subs	r3, r2, r3
    3c70:	469d      	mov	sp, r3
    3c72:	2219      	movs	r2, #25
    3c74:	ab02      	add	r3, sp, #8
    3c76:	701a      	strb	r2, [r3, #0]
    3c78:	4805      	ldr	r0, [pc, #20]	; (3c90 <_ZN8ATTClass12execWriteReqEthPh+0x98>)
    3c7a:	9300      	str	r3, [sp, #0]
    3c7c:	3a15      	subs	r2, #21
    3c7e:	2301      	movs	r3, #1
    3c80:	f000 fb3a 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    3c84:	687b      	ldr	r3, [r7, #4]
    3c86:	469d      	mov	sp, r3
    3c88:	e7c5      	b.n	3c16 <_ZN8ATTClass12execWriteReqEthPh+0x1e>
    3c8a:	46c0      	nop			; (mov r8, r8)
    3c8c:	20000314 	.word	0x20000314
    3c90:	20000480 	.word	0x20000480

00003c94 <_ZN8ATTClass10handleDataEthPh>:
    3c94:	b513      	push	{r0, r1, r4, lr}
    3c96:	000c      	movs	r4, r1
    3c98:	7819      	ldrb	r1, [r3, #0]
    3c9a:	3a01      	subs	r2, #1
    3c9c:	b2d2      	uxtb	r2, r2
    3c9e:	3301      	adds	r3, #1
    3ca0:	290c      	cmp	r1, #12
    3ca2:	d011      	beq.n	3cc8 <_ZN8ATTClass10handleDataEthPh+0x34>
    3ca4:	d817      	bhi.n	3cd6 <_ZN8ATTClass10handleDataEthPh+0x42>
    3ca6:	2906      	cmp	r1, #6
    3ca8:	d035      	beq.n	3d16 <_ZN8ATTClass10handleDataEthPh+0x82>
    3caa:	d809      	bhi.n	3cc0 <_ZN8ATTClass10handleDataEthPh+0x2c>
    3cac:	2902      	cmp	r1, #2
    3cae:	d02a      	beq.n	3d06 <_ZN8ATTClass10handleDataEthPh+0x72>
    3cb0:	2904      	cmp	r1, #4
    3cb2:	d02c      	beq.n	3d0e <_ZN8ATTClass10handleDataEthPh+0x7a>
    3cb4:	2306      	movs	r3, #6
    3cb6:	2200      	movs	r2, #0
    3cb8:	0020      	movs	r0, r4
    3cba:	f7ff f843 	bl	2d44 <_ZN8ATTClass9sendErrorEthth.constprop.3>
    3cbe:	e025      	b.n	3d0c <_ZN8ATTClass10handleDataEthPh+0x78>
    3cc0:	2908      	cmp	r1, #8
    3cc2:	d02c      	beq.n	3d1e <_ZN8ATTClass10handleDataEthPh+0x8a>
    3cc4:	290a      	cmp	r1, #10
    3cc6:	d1f5      	bne.n	3cb4 <_ZN8ATTClass10handleDataEthPh+0x20>
    3cc8:	9300      	str	r3, [sp, #0]
    3cca:	0013      	movs	r3, r2
    3ccc:	000a      	movs	r2, r1
    3cce:	0021      	movs	r1, r4
    3cd0:	f7ff fc1c 	bl	350c <_ZN8ATTClass17readOrReadBlobReqEthhPh>
    3cd4:	e01a      	b.n	3d0c <_ZN8ATTClass10handleDataEthPh+0x78>
    3cd6:	2916      	cmp	r1, #22
    3cd8:	d029      	beq.n	3d2e <_ZN8ATTClass10handleDataEthPh+0x9a>
    3cda:	d80a      	bhi.n	3cf2 <_ZN8ATTClass10handleDataEthPh+0x5e>
    3cdc:	2910      	cmp	r1, #16
    3cde:	d022      	beq.n	3d26 <_ZN8ATTClass10handleDataEthPh+0x92>
    3ce0:	2912      	cmp	r1, #18
    3ce2:	d1e7      	bne.n	3cb4 <_ZN8ATTClass10handleDataEthPh+0x20>
    3ce4:	9300      	str	r3, [sp, #0]
    3ce6:	0013      	movs	r3, r2
    3ce8:	000a      	movs	r2, r1
    3cea:	0021      	movs	r1, r4
    3cec:	f7ff fe38 	bl	3960 <_ZN8ATTClass13writeReqOrCmdEthhPh>
    3cf0:	e00c      	b.n	3d0c <_ZN8ATTClass10handleDataEthPh+0x78>
    3cf2:	291e      	cmp	r1, #30
    3cf4:	d01f      	beq.n	3d36 <_ZN8ATTClass10handleDataEthPh+0xa2>
    3cf6:	2952      	cmp	r1, #82	; 0x52
    3cf8:	d0f4      	beq.n	3ce4 <_ZN8ATTClass10handleDataEthPh+0x50>
    3cfa:	2918      	cmp	r1, #24
    3cfc:	d1da      	bne.n	3cb4 <_ZN8ATTClass10handleDataEthPh+0x20>
    3cfe:	0021      	movs	r1, r4
    3d00:	f7ff ff7a 	bl	3bf8 <_ZN8ATTClass12execWriteReqEthPh>
    3d04:	e002      	b.n	3d0c <_ZN8ATTClass10handleDataEthPh+0x78>
    3d06:	0021      	movs	r1, r4
    3d08:	f7ff f9ac 	bl	3064 <_ZN8ATTClass6mtuReqEthPh>
    3d0c:	bd13      	pop	{r0, r1, r4, pc}
    3d0e:	0021      	movs	r1, r4
    3d10:	f7ff f9d2 	bl	30b8 <_ZN8ATTClass11findInfoReqEthPh>
    3d14:	e7fa      	b.n	3d0c <_ZN8ATTClass10handleDataEthPh+0x78>
    3d16:	0021      	movs	r1, r4
    3d18:	f7ff fa98 	bl	324c <_ZN8ATTClass13findByTypeReqEthPh>
    3d1c:	e7f6      	b.n	3d0c <_ZN8ATTClass10handleDataEthPh+0x78>
    3d1e:	0021      	movs	r1, r4
    3d20:	f7ff fce0 	bl	36e4 <_ZN8ATTClass13readByTypeReqEthPh>
    3d24:	e7f2      	b.n	3d0c <_ZN8ATTClass10handleDataEthPh+0x78>
    3d26:	0021      	movs	r1, r4
    3d28:	f7ff fb30 	bl	338c <_ZN8ATTClass14readByGroupReqEthPh>
    3d2c:	e7ee      	b.n	3d0c <_ZN8ATTClass10handleDataEthPh+0x78>
    3d2e:	0021      	movs	r1, r4
    3d30:	f7ff fec8 	bl	3ac4 <_ZN8ATTClass12prepWriteReqEthPh>
    3d34:	e7ea      	b.n	3d0c <_ZN8ATTClass10handleDataEthPh+0x78>
    3d36:	2301      	movs	r3, #1
    3d38:	7403      	strb	r3, [r0, #16]
    3d3a:	e7e7      	b.n	3d0c <_ZN8ATTClass10handleDataEthPh+0x78>

00003d3c <_GLOBAL__sub_I__ZN8ATTClassC2Ev>:
    3d3c:	b510      	push	{r4, lr}
    3d3e:	4c05      	ldr	r4, [pc, #20]	; (3d54 <_GLOBAL__sub_I__ZN8ATTClassC2Ev+0x18>)
    3d40:	0020      	movs	r0, r4
    3d42:	f7ff f81f 	bl	2d84 <_ZN8ATTClassC1Ev>
    3d46:	4a04      	ldr	r2, [pc, #16]	; (3d58 <_GLOBAL__sub_I__ZN8ATTClassC2Ev+0x1c>)
    3d48:	4904      	ldr	r1, [pc, #16]	; (3d5c <_GLOBAL__sub_I__ZN8ATTClassC2Ev+0x20>)
    3d4a:	0020      	movs	r0, r4
    3d4c:	f003 f99c 	bl	7088 <__aeabi_atexit>
    3d50:	bd10      	pop	{r4, pc}
    3d52:	46c0      	nop			; (mov r8, r8)
    3d54:	200002c8 	.word	0x200002c8
    3d58:	20000000 	.word	0x20000000
    3d5c:	00002d15 	.word	0x00002d15

00003d60 <_ZN8GAPClassD1Ev>:
    3d60:	4770      	bx	lr

00003d62 <_ZN8GAPClassD0Ev>:
    3d62:	b510      	push	{r4, lr}
    3d64:	0004      	movs	r4, r0
    3d66:	f001 f90f 	bl	4f88 <_ZdlPv>
    3d6a:	0020      	movs	r0, r4
    3d6c:	bd10      	pop	{r4, pc}
	...

00003d70 <_ZN8GAPClassC1Ev>:
    3d70:	4b07      	ldr	r3, [pc, #28]	; (3d90 <_ZN8GAPClassC1Ev+0x20>)
    3d72:	22a0      	movs	r2, #160	; 0xa0
    3d74:	3308      	adds	r3, #8
    3d76:	6003      	str	r3, [r0, #0]
    3d78:	2300      	movs	r3, #0
    3d7a:	8302      	strh	r2, [r0, #24]
    3d7c:	3a9f      	subs	r2, #159	; 0x9f
    3d7e:	7103      	strb	r3, [r0, #4]
    3d80:	6083      	str	r3, [r0, #8]
    3d82:	60c3      	str	r3, [r0, #12]
    3d84:	6103      	str	r3, [r0, #16]
    3d86:	6143      	str	r3, [r0, #20]
    3d88:	7682      	strb	r2, [r0, #26]
    3d8a:	6203      	str	r3, [r0, #32]
    3d8c:	6243      	str	r3, [r0, #36]	; 0x24
    3d8e:	4770      	bx	lr
    3d90:	0000b45c 	.word	0x0000b45c

00003d94 <_ZN8GAPClass24setAdvertisedServiceUuidEPKc>:
    3d94:	6081      	str	r1, [r0, #8]
    3d96:	4770      	bx	lr

00003d98 <_ZN8GAPClass12setLocalNameEPKc>:
    3d98:	6141      	str	r1, [r0, #20]
    3d9a:	4770      	bx	lr

00003d9c <_ZN8GAPClass11advertisingEv>:
    3d9c:	7900      	ldrb	r0, [r0, #4]
    3d9e:	4770      	bx	lr

00003da0 <_ZN8GAPClass9advertiseEv>:
    3da0:	b5f0      	push	{r4, r5, r6, r7, lr}
    3da2:	b09b      	sub	sp, #108	; 0x6c
    3da4:	0004      	movs	r4, r0
    3da6:	ad08      	add	r5, sp, #32
    3da8:	2206      	movs	r2, #6
    3daa:	2100      	movs	r1, #0
    3dac:	0028      	movs	r0, r5
    3dae:	f005 f93b 	bl	9028 <memset>
    3db2:	2200      	movs	r2, #0
    3db4:	7ea1      	ldrb	r1, [r4, #26]
    3db6:	0013      	movs	r3, r2
    3db8:	4291      	cmp	r1, r2
    3dba:	d103      	bne.n	3dc4 <_ZN8GAPClass9advertiseEv+0x24>
    3dbc:	6963      	ldr	r3, [r4, #20]
    3dbe:	4259      	negs	r1, r3
    3dc0:	414b      	adcs	r3, r1
    3dc2:	3302      	adds	r3, #2
    3dc4:	2007      	movs	r0, #7
    3dc6:	8b21      	ldrh	r1, [r4, #24]
    3dc8:	7122      	strb	r2, [r4, #4]
    3dca:	9204      	str	r2, [sp, #16]
    3dcc:	9003      	str	r0, [sp, #12]
    3dce:	9201      	str	r2, [sp, #4]
    3dd0:	9200      	str	r2, [sp, #0]
    3dd2:	9502      	str	r5, [sp, #8]
    3dd4:	000a      	movs	r2, r1
    3dd6:	4849      	ldr	r0, [pc, #292]	; (3efc <_ZN8GAPClass9advertiseEv+0x15c>)
    3dd8:	f000 fc78 	bl	46cc <_ZN8HCIClass26leSetAdvertisingParametersEtthhhPhhh>
    3ddc:	2800      	cmp	r0, #0
    3dde:	d002      	beq.n	3de6 <_ZN8GAPClass9advertiseEv+0x46>
    3de0:	2000      	movs	r0, #0
    3de2:	b01b      	add	sp, #108	; 0x6c
    3de4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3de6:	2302      	movs	r3, #2
    3de8:	ae0a      	add	r6, sp, #40	; 0x28
    3dea:	7033      	strb	r3, [r6, #0]
    3dec:	2706      	movs	r7, #6
    3dee:	2301      	movs	r3, #1
    3df0:	68a1      	ldr	r1, [r4, #8]
    3df2:	7073      	strb	r3, [r6, #1]
    3df4:	70b7      	strb	r7, [r6, #2]
    3df6:	2900      	cmp	r1, #0
    3df8:	d06f      	beq.n	3eda <_ZN8GAPClass9advertiseEv+0x13a>
    3dfa:	a812      	add	r0, sp, #72	; 0x48
    3dfc:	f7fe fb8e 	bl	251c <_ZN7BLEUuidC1EPKc>
    3e00:	a812      	add	r0, sp, #72	; 0x48
    3e02:	f7fe fbc9 	bl	2598 <_ZNK7BLEUuid6lengthEv>
    3e06:	1c43      	adds	r3, r0, #1
    3e08:	0005      	movs	r5, r0
    3e0a:	70f3      	strb	r3, [r6, #3]
    3e0c:	2802      	cmp	r0, #2
    3e0e:	dc00      	bgt.n	3e12 <_ZN8GAPClass9advertiseEv+0x72>
    3e10:	3f04      	subs	r7, #4
    3e12:	a812      	add	r0, sp, #72	; 0x48
    3e14:	7137      	strb	r7, [r6, #4]
    3e16:	f7fe fbbd 	bl	2594 <_ZNK7BLEUuid4dataEv>
    3e1a:	002a      	movs	r2, r5
    3e1c:	0001      	movs	r1, r0
    3e1e:	2025      	movs	r0, #37	; 0x25
    3e20:	ab02      	add	r3, sp, #8
    3e22:	18c0      	adds	r0, r0, r3
    3e24:	f005 f8e5 	bl	8ff2 <memcpy>
    3e28:	3505      	adds	r5, #5
    3e2a:	b2ed      	uxtb	r5, r5
    3e2c:	6a23      	ldr	r3, [r4, #32]
    3e2e:	9306      	str	r3, [sp, #24]
    3e30:	2b00      	cmp	r3, #0
    3e32:	d01f      	beq.n	3e74 <_ZN8GAPClass9advertiseEv+0xd4>
    3e34:	6a67      	ldr	r7, [r4, #36]	; 0x24
    3e36:	2f00      	cmp	r7, #0
    3e38:	dd1c      	ble.n	3e74 <_ZN8GAPClass9advertiseEv+0xd4>
    3e3a:	1cfb      	adds	r3, r7, #3
    3e3c:	42ab      	cmp	r3, r5
    3e3e:	da19      	bge.n	3e74 <_ZN8GAPClass9advertiseEv+0xd4>
    3e40:	2216      	movs	r2, #22
    3e42:	0021      	movs	r1, r4
    3e44:	b2fb      	uxtb	r3, r7
    3e46:	9307      	str	r3, [sp, #28]
    3e48:	3303      	adds	r3, #3
    3e4a:	5573      	strb	r3, [r6, r5]
    3e4c:	1ca8      	adds	r0, r5, #2
    3e4e:	1c6b      	adds	r3, r5, #1
    3e50:	b2db      	uxtb	r3, r3
    3e52:	b2c0      	uxtb	r0, r0
    3e54:	3504      	adds	r5, #4
    3e56:	54f2      	strb	r2, [r6, r3]
    3e58:	311c      	adds	r1, #28
    3e5a:	3a14      	subs	r2, #20
    3e5c:	b2ed      	uxtb	r5, r5
    3e5e:	1830      	adds	r0, r6, r0
    3e60:	f005 f8c7 	bl	8ff2 <memcpy>
    3e64:	1970      	adds	r0, r6, r5
    3e66:	003a      	movs	r2, r7
    3e68:	9906      	ldr	r1, [sp, #24]
    3e6a:	f005 f8c2 	bl	8ff2 <memcpy>
    3e6e:	9b07      	ldr	r3, [sp, #28]
    3e70:	195d      	adds	r5, r3, r5
    3e72:	b2ed      	uxtb	r5, r5
    3e74:	4f21      	ldr	r7, [pc, #132]	; (3efc <_ZN8GAPClass9advertiseEv+0x15c>)
    3e76:	aa0a      	add	r2, sp, #40	; 0x28
    3e78:	0029      	movs	r1, r5
    3e7a:	0038      	movs	r0, r7
    3e7c:	f000 fc4a 	bl	4714 <_ZN8HCIClass20leSetAdvertisingDataEhPh>
    3e80:	2800      	cmp	r0, #0
    3e82:	d1ad      	bne.n	3de0 <_ZN8GAPClass9advertiseEv+0x40>
    3e84:	6965      	ldr	r5, [r4, #20]
    3e86:	ae12      	add	r6, sp, #72	; 0x48
    3e88:	1e29      	subs	r1, r5, #0
    3e8a:	d015      	beq.n	3eb8 <_ZN8GAPClass9advertiseEv+0x118>
    3e8c:	0028      	movs	r0, r5
    3e8e:	f005 fe31 	bl	9af4 <strlen>
    3e92:	0002      	movs	r2, r0
    3e94:	281d      	cmp	r0, #29
    3e96:	dd2d      	ble.n	3ef4 <_ZN8GAPClass9advertiseEv+0x154>
    3e98:	2308      	movs	r3, #8
    3e9a:	221d      	movs	r2, #29
    3e9c:	7073      	strb	r3, [r6, #1]
    3e9e:	2042      	movs	r0, #66	; 0x42
    3ea0:	b2d3      	uxtb	r3, r2
    3ea2:	9306      	str	r3, [sp, #24]
    3ea4:	3301      	adds	r3, #1
    3ea6:	7033      	strb	r3, [r6, #0]
    3ea8:	ab02      	add	r3, sp, #8
    3eaa:	0029      	movs	r1, r5
    3eac:	18c0      	adds	r0, r0, r3
    3eae:	f005 f8a0 	bl	8ff2 <memcpy>
    3eb2:	9b06      	ldr	r3, [sp, #24]
    3eb4:	1c9d      	adds	r5, r3, #2
    3eb6:	b2e9      	uxtb	r1, r5
    3eb8:	0032      	movs	r2, r6
    3eba:	0038      	movs	r0, r7
    3ebc:	f000 fc46 	bl	474c <_ZN8HCIClass21leSetScanResponseDataEhPh>
    3ec0:	2800      	cmp	r0, #0
    3ec2:	d000      	beq.n	3ec6 <_ZN8GAPClass9advertiseEv+0x126>
    3ec4:	e78c      	b.n	3de0 <_ZN8GAPClass9advertiseEv+0x40>
    3ec6:	2101      	movs	r1, #1
    3ec8:	0038      	movs	r0, r7
    3eca:	f000 fc5b 	bl	4784 <_ZN8HCIClass20leSetAdvertiseEnableEh>
    3ece:	2800      	cmp	r0, #0
    3ed0:	d000      	beq.n	3ed4 <_ZN8GAPClass9advertiseEv+0x134>
    3ed2:	e785      	b.n	3de0 <_ZN8GAPClass9advertiseEv+0x40>
    3ed4:	7120      	strb	r0, [r4, #4]
    3ed6:	3001      	adds	r0, #1
    3ed8:	e783      	b.n	3de2 <_ZN8GAPClass9advertiseEv+0x42>
    3eda:	68e1      	ldr	r1, [r4, #12]
    3edc:	2503      	movs	r5, #3
    3ede:	2900      	cmp	r1, #0
    3ee0:	d0a4      	beq.n	3e2c <_ZN8GAPClass9advertiseEv+0x8c>
    3ee2:	6922      	ldr	r2, [r4, #16]
    3ee4:	2a00      	cmp	r2, #0
    3ee6:	d0a1      	beq.n	3e2c <_ZN8GAPClass9advertiseEv+0x8c>
    3ee8:	b2d5      	uxtb	r5, r2
    3eea:	1c6b      	adds	r3, r5, #1
    3eec:	70f3      	strb	r3, [r6, #3]
    3eee:	23ff      	movs	r3, #255	; 0xff
    3ef0:	7133      	strb	r3, [r6, #4]
    3ef2:	e794      	b.n	3e1e <_ZN8GAPClass9advertiseEv+0x7e>
    3ef4:	2309      	movs	r3, #9
    3ef6:	7073      	strb	r3, [r6, #1]
    3ef8:	e7d1      	b.n	3e9e <_ZN8GAPClass9advertiseEv+0xfe>
    3efa:	46c0      	nop			; (mov r8, r8)
    3efc:	20000480 	.word	0x20000480

00003f00 <_ZN8GAPClass24setAdvertisedServiceDataEtPKhi>:
    3f00:	8381      	strh	r1, [r0, #28]
    3f02:	6202      	str	r2, [r0, #32]
    3f04:	6243      	str	r3, [r0, #36]	; 0x24
    3f06:	4770      	bx	lr

00003f08 <_GLOBAL__sub_I__ZN8GAPClassC2Ev>:
    3f08:	b510      	push	{r4, lr}
    3f0a:	4c05      	ldr	r4, [pc, #20]	; (3f20 <_GLOBAL__sub_I__ZN8GAPClassC2Ev+0x18>)
    3f0c:	0020      	movs	r0, r4
    3f0e:	f7ff ff2f 	bl	3d70 <_ZN8GAPClassC1Ev>
    3f12:	4a04      	ldr	r2, [pc, #16]	; (3f24 <_GLOBAL__sub_I__ZN8GAPClassC2Ev+0x1c>)
    3f14:	4904      	ldr	r1, [pc, #16]	; (3f28 <_GLOBAL__sub_I__ZN8GAPClassC2Ev+0x20>)
    3f16:	0020      	movs	r0, r4
    3f18:	f003 f8b6 	bl	7088 <__aeabi_atexit>
    3f1c:	bd10      	pop	{r4, pc}
    3f1e:	46c0      	nop			; (mov r8, r8)
    3f20:	200002ec 	.word	0x200002ec
    3f24:	20000000 	.word	0x20000000
    3f28:	00003d61 	.word	0x00003d61

00003f2c <_ZN9GATTClassC1Ev>:
    3f2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3f2e:	0004      	movs	r4, r0
    3f30:	2700      	movs	r7, #0
    3f32:	0006      	movs	r6, r0
    3f34:	4b22      	ldr	r3, [pc, #136]	; (3fc0 <_ZN9GATTClassC1Ev+0x94>)
    3f36:	3410      	adds	r4, #16
    3f38:	3308      	adds	r3, #8
    3f3a:	b087      	sub	sp, #28
    3f3c:	6003      	str	r3, [r0, #0]
    3f3e:	6047      	str	r7, [r0, #4]
    3f40:	6087      	str	r7, [r0, #8]
    3f42:	60c7      	str	r7, [r0, #12]
    3f44:	491f      	ldr	r1, [pc, #124]	; (3fc4 <_ZN9GATTClassC1Ev+0x98>)
    3f46:	0020      	movs	r0, r4
    3f48:	f7fe fe4e 	bl	2be8 <_ZN15BLELocalServiceC1EPKc>
    3f4c:	0033      	movs	r3, r6
    3f4e:	3340      	adds	r3, #64	; 0x40
    3f50:	9303      	str	r3, [sp, #12]
    3f52:	9700      	str	r7, [sp, #0]
    3f54:	2314      	movs	r3, #20
    3f56:	2202      	movs	r2, #2
    3f58:	491b      	ldr	r1, [pc, #108]	; (3fc8 <_ZN9GATTClassC1Ev+0x9c>)
    3f5a:	9803      	ldr	r0, [sp, #12]
    3f5c:	f7fe fbc0 	bl	26e0 <_ZN22BLELocalCharacteristicC1EPKchib>
    3f60:	0033      	movs	r3, r6
    3f62:	3394      	adds	r3, #148	; 0x94
    3f64:	9304      	str	r3, [sp, #16]
    3f66:	0035      	movs	r5, r6
    3f68:	2302      	movs	r3, #2
    3f6a:	35e8      	adds	r5, #232	; 0xe8
    3f6c:	001a      	movs	r2, r3
    3f6e:	9700      	str	r7, [sp, #0]
    3f70:	4916      	ldr	r1, [pc, #88]	; (3fcc <_ZN9GATTClassC1Ev+0xa0>)
    3f72:	9804      	ldr	r0, [sp, #16]
    3f74:	f7fe fbb4 	bl	26e0 <_ZN22BLELocalCharacteristicC1EPKchib>
    3f78:	4915      	ldr	r1, [pc, #84]	; (3fd0 <_ZN9GATTClassC1Ev+0xa4>)
    3f7a:	0028      	movs	r0, r5
    3f7c:	f7fe fe34 	bl	2be8 <_ZN15BLELocalServiceC1EPKc>
    3f80:	0033      	movs	r3, r6
    3f82:	3319      	adds	r3, #25
    3f84:	33ff      	adds	r3, #255	; 0xff
    3f86:	9305      	str	r3, [sp, #20]
    3f88:	2220      	movs	r2, #32
    3f8a:	2304      	movs	r3, #4
    3f8c:	4911      	ldr	r1, [pc, #68]	; (3fd4 <_ZN9GATTClassC1Ev+0xa8>)
    3f8e:	9700      	str	r7, [sp, #0]
    3f90:	9805      	ldr	r0, [sp, #20]
    3f92:	f7fe fba5 	bl	26e0 <_ZN22BLELocalCharacteristicC1EPKchib>
    3f96:	0020      	movs	r0, r4
    3f98:	f7fe f8e3 	bl	2162 <_ZN12BLEAttribute6retainEv>
    3f9c:	0028      	movs	r0, r5
    3f9e:	f7fe f8e0 	bl	2162 <_ZN12BLEAttribute6retainEv>
    3fa2:	9903      	ldr	r1, [sp, #12]
    3fa4:	0020      	movs	r0, r4
    3fa6:	f7fe fe48 	bl	2c3a <_ZN15BLELocalService17addCharacteristicEP22BLELocalCharacteristic>
    3faa:	9904      	ldr	r1, [sp, #16]
    3fac:	0020      	movs	r0, r4
    3fae:	f7fe fe44 	bl	2c3a <_ZN15BLELocalService17addCharacteristicEP22BLELocalCharacteristic>
    3fb2:	0028      	movs	r0, r5
    3fb4:	9905      	ldr	r1, [sp, #20]
    3fb6:	f7fe fe40 	bl	2c3a <_ZN15BLELocalService17addCharacteristicEP22BLELocalCharacteristic>
    3fba:	0030      	movs	r0, r6
    3fbc:	b007      	add	sp, #28
    3fbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3fc0:	0000b490 	.word	0x0000b490
    3fc4:	0000b474 	.word	0x0000b474
    3fc8:	0000b479 	.word	0x0000b479
    3fcc:	0000b47e 	.word	0x0000b47e
    3fd0:	0000b483 	.word	0x0000b483
    3fd4:	0000b488 	.word	0x0000b488

00003fd8 <_ZN9GATTClass13setAppearanceEt>:
    3fd8:	b507      	push	{r0, r1, r2, lr}
    3fda:	466b      	mov	r3, sp
    3fdc:	80d9      	strh	r1, [r3, #6]
    3fde:	3306      	adds	r3, #6
    3fe0:	3094      	adds	r0, #148	; 0x94
    3fe2:	2202      	movs	r2, #2
    3fe4:	0019      	movs	r1, r3
    3fe6:	f7fe fae7 	bl	25b8 <_ZN22BLELocalCharacteristic10writeValueEPKhi>
    3fea:	bd07      	pop	{r0, r1, r2, pc}

00003fec <_ZNK9GATTClass14attributeCountEv>:
    3fec:	6840      	ldr	r0, [r0, #4]
    3fee:	4770      	bx	lr

00003ff0 <_ZN13BLELinkedListIP12BLEAttributeE5clearEv>:
    3ff0:	b570      	push	{r4, r5, r6, lr}
    3ff2:	2500      	movs	r5, #0
    3ff4:	0004      	movs	r4, r0
    3ff6:	6840      	ldr	r0, [r0, #4]
    3ff8:	6823      	ldr	r3, [r4, #0]
    3ffa:	429d      	cmp	r5, r3
    3ffc:	d205      	bcs.n	400a <_ZN13BLELinkedListIP12BLEAttributeE5clearEv+0x1a>
    3ffe:	6846      	ldr	r6, [r0, #4]
    4000:	3501      	adds	r5, #1
    4002:	f000 ffc1 	bl	4f88 <_ZdlPv>
    4006:	0030      	movs	r0, r6
    4008:	e7f6      	b.n	3ff8 <_ZN13BLELinkedListIP12BLEAttributeE5clearEv+0x8>
    400a:	2300      	movs	r3, #0
    400c:	6023      	str	r3, [r4, #0]
    400e:	6063      	str	r3, [r4, #4]
    4010:	60a3      	str	r3, [r4, #8]
    4012:	bd70      	pop	{r4, r5, r6, pc}

00004014 <_ZN9GATTClass3endEv>:
    4014:	b510      	push	{r4, lr}
    4016:	3004      	adds	r0, #4
    4018:	f7ff ffea 	bl	3ff0 <_ZN13BLELinkedListIP12BLEAttributeE5clearEv>
    401c:	bd10      	pop	{r4, pc}

0000401e <_ZNK13BLELinkedListIP12BLEAttributeE3getEj>:
    401e:	6802      	ldr	r2, [r0, #0]
    4020:	2300      	movs	r3, #0
    4022:	428a      	cmp	r2, r1
    4024:	d907      	bls.n	4036 <_ZNK13BLELinkedListIP12BLEAttributeE3getEj+0x18>
    4026:	2200      	movs	r2, #0
    4028:	6843      	ldr	r3, [r0, #4]
    402a:	428a      	cmp	r2, r1
    402c:	d002      	beq.n	4034 <_ZNK13BLELinkedListIP12BLEAttributeE3getEj+0x16>
    402e:	685b      	ldr	r3, [r3, #4]
    4030:	3201      	adds	r2, #1
    4032:	e7fa      	b.n	402a <_ZNK13BLELinkedListIP12BLEAttributeE3getEj+0xc>
    4034:	681b      	ldr	r3, [r3, #0]
    4036:	0018      	movs	r0, r3
    4038:	4770      	bx	lr

0000403a <_ZNK9GATTClass9attributeEj>:
    403a:	b510      	push	{r4, lr}
    403c:	3004      	adds	r0, #4
    403e:	f7ff ffee 	bl	401e <_ZNK13BLELinkedListIP12BLEAttributeE3getEj>
    4042:	bd10      	pop	{r4, pc}

00004044 <_ZNK9GATTClass28serviceUuidForCharacteristicEP22BLELocalCharacteristic>:
    4044:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4046:	2500      	movs	r5, #0
    4048:	0007      	movs	r7, r0
    404a:	002c      	movs	r4, r5
    404c:	9101      	str	r1, [sp, #4]
    404e:	687b      	ldr	r3, [r7, #4]
    4050:	429d      	cmp	r5, r3
    4052:	d20e      	bcs.n	4072 <_ZNK9GATTClass28serviceUuidForCharacteristicEP22BLELocalCharacteristic+0x2e>
    4054:	0029      	movs	r1, r5
    4056:	1d38      	adds	r0, r7, #4
    4058:	f7ff ffe1 	bl	401e <_ZNK13BLELinkedListIP12BLEAttributeE3getEj>
    405c:	6803      	ldr	r3, [r0, #0]
    405e:	0006      	movs	r6, r0
    4060:	689b      	ldr	r3, [r3, #8]
    4062:	4798      	blx	r3
    4064:	23a0      	movs	r3, #160	; 0xa0
    4066:	019b      	lsls	r3, r3, #6
    4068:	4298      	cmp	r0, r3
    406a:	d00d      	beq.n	4088 <_ZNK9GATTClass28serviceUuidForCharacteristicEP22BLELocalCharacteristic+0x44>
    406c:	9b01      	ldr	r3, [sp, #4]
    406e:	42b3      	cmp	r3, r6
    4070:	d10b      	bne.n	408a <_ZNK9GATTClass28serviceUuidForCharacteristicEP22BLELocalCharacteristic+0x46>
    4072:	1e20      	subs	r0, r4, #0
    4074:	d007      	beq.n	4086 <_ZNK9GATTClass28serviceUuidForCharacteristicEP22BLELocalCharacteristic+0x42>
    4076:	f7fe f86f 	bl	2158 <_ZNK12BLEAttribute10uuidLengthEv>
    407a:	2802      	cmp	r0, #2
    407c:	d107      	bne.n	408e <_ZNK9GATTClass28serviceUuidForCharacteristicEP22BLELocalCharacteristic+0x4a>
    407e:	0020      	movs	r0, r4
    4080:	f7fe f865 	bl	214e <_ZNK12BLEAttribute8uuidDataEv>
    4084:	8800      	ldrh	r0, [r0, #0]
    4086:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    4088:	0034      	movs	r4, r6
    408a:	3501      	adds	r5, #1
    408c:	e7df      	b.n	404e <_ZNK9GATTClass28serviceUuidForCharacteristicEP22BLELocalCharacteristic+0xa>
    408e:	0020      	movs	r0, r4
    4090:	f7fe f85d 	bl	214e <_ZNK12BLEAttribute8uuidDataEv>
    4094:	8940      	ldrh	r0, [r0, #10]
    4096:	e7f6      	b.n	4086 <_ZNK9GATTClass28serviceUuidForCharacteristicEP22BLELocalCharacteristic+0x42>

00004098 <_ZN9GATTClass15clearAttributesEv>:
    4098:	b570      	push	{r4, r5, r6, lr}
    409a:	0006      	movs	r6, r0
    409c:	2400      	movs	r4, #0
    409e:	6873      	ldr	r3, [r6, #4]
    40a0:	1d30      	adds	r0, r6, #4
    40a2:	429c      	cmp	r4, r3
    40a4:	d20f      	bcs.n	40c6 <_ZN9GATTClass15clearAttributesEv+0x2e>
    40a6:	0021      	movs	r1, r4
    40a8:	f7ff ffb9 	bl	401e <_ZNK13BLELinkedListIP12BLEAttributeE3getEj>
    40ac:	0005      	movs	r5, r0
    40ae:	f7fe f85d 	bl	216c <_ZN12BLEAttribute7releaseEv>
    40b2:	2800      	cmp	r0, #0
    40b4:	dc05      	bgt.n	40c2 <_ZN9GATTClass15clearAttributesEv+0x2a>
    40b6:	2d00      	cmp	r5, #0
    40b8:	d003      	beq.n	40c2 <_ZN9GATTClass15clearAttributesEv+0x2a>
    40ba:	682b      	ldr	r3, [r5, #0]
    40bc:	0028      	movs	r0, r5
    40be:	685b      	ldr	r3, [r3, #4]
    40c0:	4798      	blx	r3
    40c2:	3401      	adds	r4, #1
    40c4:	e7eb      	b.n	409e <_ZN9GATTClass15clearAttributesEv+0x6>
    40c6:	f7ff ff93 	bl	3ff0 <_ZN13BLELinkedListIP12BLEAttributeE5clearEv>
    40ca:	bd70      	pop	{r4, r5, r6, pc}

000040cc <_ZN13BLELinkedListIP12BLEAttributeE3addES1_>:
    40cc:	b570      	push	{r4, r5, r6, lr}
    40ce:	0004      	movs	r4, r0
    40d0:	2008      	movs	r0, #8
    40d2:	000d      	movs	r5, r1
    40d4:	f000 ff54 	bl	4f80 <_Znwj>
    40d8:	2300      	movs	r3, #0
    40da:	6043      	str	r3, [r0, #4]
    40dc:	6863      	ldr	r3, [r4, #4]
    40de:	6005      	str	r5, [r0, #0]
    40e0:	2b00      	cmp	r3, #0
    40e2:	d105      	bne.n	40f0 <_ZN13BLELinkedListIP12BLEAttributeE3addES1_+0x24>
    40e4:	6060      	str	r0, [r4, #4]
    40e6:	6823      	ldr	r3, [r4, #0]
    40e8:	60a0      	str	r0, [r4, #8]
    40ea:	3301      	adds	r3, #1
    40ec:	6023      	str	r3, [r4, #0]
    40ee:	bd70      	pop	{r4, r5, r6, pc}
    40f0:	68a3      	ldr	r3, [r4, #8]
    40f2:	6058      	str	r0, [r3, #4]
    40f4:	e7f7      	b.n	40e6 <_ZN13BLELinkedListIP12BLEAttributeE3addES1_+0x1a>

000040f6 <_ZN9GATTClass10addServiceEP15BLELocalService>:
    40f6:	b5f0      	push	{r4, r5, r6, r7, lr}
    40f8:	0006      	movs	r6, r0
    40fa:	000d      	movs	r5, r1
    40fc:	2700      	movs	r7, #0
    40fe:	b085      	sub	sp, #20
    4100:	0008      	movs	r0, r1
    4102:	f7fe f82e 	bl	2162 <_ZN12BLEAttribute6retainEv>
    4106:	1d33      	adds	r3, r6, #4
    4108:	0018      	movs	r0, r3
    410a:	0029      	movs	r1, r5
    410c:	9301      	str	r3, [sp, #4]
    410e:	f7ff ffdd 	bl	40cc <_ZN13BLELinkedListIP12BLEAttributeE3addES1_>
    4112:	88b3      	ldrh	r3, [r6, #4]
    4114:	9303      	str	r3, [sp, #12]
    4116:	0028      	movs	r0, r5
    4118:	f7fe fd7f 	bl	2c1a <_ZNK15BLELocalService19characteristicCountEv>
    411c:	4287      	cmp	r7, r0
    411e:	d22e      	bcs.n	417e <_ZN9GATTClass10addServiceEP15BLELocalService+0x88>
    4120:	0039      	movs	r1, r7
    4122:	0028      	movs	r0, r5
    4124:	f7fe fd7b 	bl	2c1e <_ZNK15BLELocalService14characteristicEj>
    4128:	0004      	movs	r4, r0
    412a:	f7fe f81a 	bl	2162 <_ZN12BLEAttribute6retainEv>
    412e:	0021      	movs	r1, r4
    4130:	9801      	ldr	r0, [sp, #4]
    4132:	f7ff ffcb 	bl	40cc <_ZN13BLELinkedListIP12BLEAttributeE3addES1_>
    4136:	88b1      	ldrh	r1, [r6, #4]
    4138:	0020      	movs	r0, r4
    413a:	f7fe faa3 	bl	2684 <_ZN22BLELocalCharacteristic9setHandleEt>
    413e:	0021      	movs	r1, r4
    4140:	9801      	ldr	r0, [sp, #4]
    4142:	f7ff ffc3 	bl	40cc <_ZN13BLELinkedListIP12BLEAttributeE3addES1_>
    4146:	2300      	movs	r3, #0
    4148:	0020      	movs	r0, r4
    414a:	9300      	str	r3, [sp, #0]
    414c:	f7fe faa2 	bl	2694 <_ZNK22BLELocalCharacteristic15descriptorCountEv>
    4150:	9b00      	ldr	r3, [sp, #0]
    4152:	4283      	cmp	r3, r0
    4154:	d211      	bcs.n	417a <_ZN9GATTClass10addServiceEP15BLELocalService+0x84>
    4156:	0019      	movs	r1, r3
    4158:	0020      	movs	r0, r4
    415a:	f7fe fa9d 	bl	2698 <_ZNK22BLELocalCharacteristic10descriptorEj>
    415e:	9002      	str	r0, [sp, #8]
    4160:	f7fd ffff 	bl	2162 <_ZN12BLEAttribute6retainEv>
    4164:	9902      	ldr	r1, [sp, #8]
    4166:	9801      	ldr	r0, [sp, #4]
    4168:	f7ff ffb0 	bl	40cc <_ZN13BLELinkedListIP12BLEAttributeE3addES1_>
    416c:	88b1      	ldrh	r1, [r6, #4]
    416e:	9802      	ldr	r0, [sp, #8]
    4170:	f7fe fc00 	bl	2974 <_ZN18BLELocalDescriptor9setHandleEt>
    4174:	9b00      	ldr	r3, [sp, #0]
    4176:	3301      	adds	r3, #1
    4178:	e7e6      	b.n	4148 <_ZN9GATTClass10addServiceEP15BLELocalService+0x52>
    417a:	3701      	adds	r7, #1
    417c:	e7cb      	b.n	4116 <_ZN9GATTClass10addServiceEP15BLELocalService+0x20>
    417e:	6872      	ldr	r2, [r6, #4]
    4180:	9903      	ldr	r1, [sp, #12]
    4182:	b292      	uxth	r2, r2
    4184:	0028      	movs	r0, r5
    4186:	f7fe fd41 	bl	2c0c <_ZN15BLELocalService10setHandlesEtt>
    418a:	b005      	add	sp, #20
    418c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

00004190 <_ZN9GATTClass5beginEv>:
    4190:	b510      	push	{r4, lr}
    4192:	0004      	movs	r4, r0
    4194:	490a      	ldr	r1, [pc, #40]	; (41c0 <_ZN9GATTClass5beginEv+0x30>)
    4196:	3040      	adds	r0, #64	; 0x40
    4198:	f7fe fa68 	bl	266c <_ZN22BLELocalCharacteristic10writeValueEPKc>
    419c:	2100      	movs	r1, #0
    419e:	0020      	movs	r0, r4
    41a0:	f7ff ff1a 	bl	3fd8 <_ZN9GATTClass13setAppearanceEt>
    41a4:	0020      	movs	r0, r4
    41a6:	f7ff ff77 	bl	4098 <_ZN9GATTClass15clearAttributesEv>
    41aa:	0021      	movs	r1, r4
    41ac:	0020      	movs	r0, r4
    41ae:	3110      	adds	r1, #16
    41b0:	f7ff ffa1 	bl	40f6 <_ZN9GATTClass10addServiceEP15BLELocalService>
    41b4:	0021      	movs	r1, r4
    41b6:	0020      	movs	r0, r4
    41b8:	31e8      	adds	r1, #232	; 0xe8
    41ba:	f7ff ff9c 	bl	40f6 <_ZN9GATTClass10addServiceEP15BLELocalService>
    41be:	bd10      	pop	{r4, pc}
    41c0:	0000b46c 	.word	0x0000b46c

000041c4 <_ZN9GATTClass10addServiceER10BLEService>:
    41c4:	b510      	push	{r4, lr}
    41c6:	0004      	movs	r4, r0
    41c8:	0008      	movs	r0, r1
    41ca:	f7fe f93c 	bl	2446 <_ZN10BLEService5localEv>
    41ce:	1e01      	subs	r1, r0, #0
    41d0:	d002      	beq.n	41d8 <_ZN9GATTClass10addServiceER10BLEService+0x14>
    41d2:	0020      	movs	r0, r4
    41d4:	f7ff ff8f 	bl	40f6 <_ZN9GATTClass10addServiceEP15BLELocalService>
    41d8:	bd10      	pop	{r4, pc}
	...

000041dc <_GLOBAL__sub_I__ZN9GATTClassC2Ev>:
    41dc:	b510      	push	{r4, lr}
    41de:	4c05      	ldr	r4, [pc, #20]	; (41f4 <_GLOBAL__sub_I__ZN9GATTClassC2Ev+0x18>)
    41e0:	0020      	movs	r0, r4
    41e2:	f7ff fea3 	bl	3f2c <_ZN9GATTClassC1Ev>
    41e6:	4a04      	ldr	r2, [pc, #16]	; (41f8 <_GLOBAL__sub_I__ZN9GATTClassC2Ev+0x1c>)
    41e8:	4904      	ldr	r1, [pc, #16]	; (41fc <_GLOBAL__sub_I__ZN9GATTClassC2Ev+0x20>)
    41ea:	0020      	movs	r0, r4
    41ec:	f002 ff4c 	bl	7088 <__aeabi_atexit>
    41f0:	bd10      	pop	{r4, pc}
    41f2:	46c0      	nop			; (mov r8, r8)
    41f4:	20000314 	.word	0x20000314
    41f8:	20000000 	.word	0x20000000
    41fc:	00004201 	.word	0x00004201

00004200 <_ZN9GATTClassD1Ev>:
    4200:	b510      	push	{r4, lr}
    4202:	0004      	movs	r4, r0
    4204:	4b0f      	ldr	r3, [pc, #60]	; (4244 <_ZN9GATTClassD1Ev+0x44>)
    4206:	3308      	adds	r3, #8
    4208:	6003      	str	r3, [r0, #0]
    420a:	f7ff ff45 	bl	4098 <_ZN9GATTClass15clearAttributesEv>
    420e:	0020      	movs	r0, r4
    4210:	3019      	adds	r0, #25
    4212:	30ff      	adds	r0, #255	; 0xff
    4214:	f7fe fab8 	bl	2788 <_ZN22BLELocalCharacteristicD1Ev>
    4218:	0020      	movs	r0, r4
    421a:	30e8      	adds	r0, #232	; 0xe8
    421c:	f7fe fd42 	bl	2ca4 <_ZN15BLELocalServiceD1Ev>
    4220:	0020      	movs	r0, r4
    4222:	3094      	adds	r0, #148	; 0x94
    4224:	f7fe fab0 	bl	2788 <_ZN22BLELocalCharacteristicD1Ev>
    4228:	0020      	movs	r0, r4
    422a:	3040      	adds	r0, #64	; 0x40
    422c:	f7fe faac 	bl	2788 <_ZN22BLELocalCharacteristicD1Ev>
    4230:	0020      	movs	r0, r4
    4232:	3010      	adds	r0, #16
    4234:	f7fe fd36 	bl	2ca4 <_ZN15BLELocalServiceD1Ev>
    4238:	1d20      	adds	r0, r4, #4
    423a:	f7ff fed9 	bl	3ff0 <_ZN13BLELinkedListIP12BLEAttributeE5clearEv>
    423e:	0020      	movs	r0, r4
    4240:	bd10      	pop	{r4, pc}
    4242:	46c0      	nop			; (mov r8, r8)
    4244:	0000b490 	.word	0x0000b490

00004248 <_ZN9GATTClassD0Ev>:
    4248:	b510      	push	{r4, lr}
    424a:	0004      	movs	r4, r0
    424c:	f7ff ffd8 	bl	4200 <_ZN9GATTClassD1Ev>
    4250:	0020      	movs	r0, r4
    4252:	f000 fe99 	bl	4f88 <_ZdlPv>
    4256:	0020      	movs	r0, r4
    4258:	bd10      	pop	{r4, pc}

0000425a <_ZN8HCIClassD1Ev>:
    425a:	4770      	bx	lr

0000425c <_ZN8HCIClassD0Ev>:
    425c:	b510      	push	{r4, lr}
    425e:	0004      	movs	r4, r0
    4260:	f000 fe92 	bl	4f88 <_ZdlPv>
    4264:	0020      	movs	r0, r4
    4266:	bd10      	pop	{r4, pc}

00004268 <_ZN8HCIClass5beginEv>:
    4268:	2300      	movs	r3, #0
    426a:	b510      	push	{r4, lr}
    426c:	6083      	str	r3, [r0, #8]
    426e:	4b03      	ldr	r3, [pc, #12]	; (427c <_ZN8HCIClass5beginEv+0x14>)
    4270:	6818      	ldr	r0, [r3, #0]
    4272:	6803      	ldr	r3, [r0, #0]
    4274:	681b      	ldr	r3, [r3, #0]
    4276:	4798      	blx	r3
    4278:	bd10      	pop	{r4, pc}
    427a:	46c0      	nop			; (mov r8, r8)
    427c:	0000b4fc 	.word	0x0000b4fc

00004280 <_ZN8HCIClass3endEv>:
    4280:	4b03      	ldr	r3, [pc, #12]	; (4290 <_ZN8HCIClass3endEv+0x10>)
    4282:	b510      	push	{r4, lr}
    4284:	6818      	ldr	r0, [r3, #0]
    4286:	6803      	ldr	r3, [r0, #0]
    4288:	685b      	ldr	r3, [r3, #4]
    428a:	4798      	blx	r3
    428c:	bd10      	pop	{r4, pc}
    428e:	46c0      	nop			; (mov r8, r8)
    4290:	0000b4fc 	.word	0x0000b4fc

00004294 <_ZN8HCIClass17handleNumCompPktsEtt>:
    4294:	30ff      	adds	r0, #255	; 0xff
    4296:	2a00      	cmp	r2, #0
    4298:	d005      	beq.n	42a6 <_ZN8HCIClass17handleNumCompPktsEtt+0x12>
    429a:	7f83      	ldrb	r3, [r0, #30]
    429c:	4293      	cmp	r3, r2
    429e:	dd02      	ble.n	42a6 <_ZN8HCIClass17handleNumCompPktsEtt+0x12>
    42a0:	1a9b      	subs	r3, r3, r2
    42a2:	7783      	strb	r3, [r0, #30]
    42a4:	4770      	bx	lr
    42a6:	2300      	movs	r3, #0
    42a8:	e7fb      	b.n	42a2 <_ZN8HCIClass17handleNumCompPktsEtt+0xe>
	...

000042ac <_ZN8HCIClass7dumpPktEPKchPh>:
    42ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    42ae:	0005      	movs	r5, r0
    42b0:	6840      	ldr	r0, [r0, #4]
    42b2:	0017      	movs	r7, r2
    42b4:	9301      	str	r3, [sp, #4]
    42b6:	2800      	cmp	r0, #0
    42b8:	d01b      	beq.n	42f2 <_ZN8HCIClass7dumpPktEPKchPh+0x46>
    42ba:	f000 fe92 	bl	4fe2 <_ZN5Print5printEPKc>
    42be:	2400      	movs	r4, #0
    42c0:	42bc      	cmp	r4, r7
    42c2:	da0f      	bge.n	42e4 <_ZN8HCIClass7dumpPktEPKchPh+0x38>
    42c4:	9b01      	ldr	r3, [sp, #4]
    42c6:	5d1e      	ldrb	r6, [r3, r4]
    42c8:	2e0f      	cmp	r6, #15
    42ca:	dc03      	bgt.n	42d4 <_ZN8HCIClass7dumpPktEPKchPh+0x28>
    42cc:	4909      	ldr	r1, [pc, #36]	; (42f4 <_ZN8HCIClass7dumpPktEPKchPh+0x48>)
    42ce:	6868      	ldr	r0, [r5, #4]
    42d0:	f000 fe87 	bl	4fe2 <_ZN5Print5printEPKc>
    42d4:	2210      	movs	r2, #16
    42d6:	0031      	movs	r1, r6
    42d8:	6868      	ldr	r0, [r5, #4]
    42da:	3401      	adds	r4, #1
    42dc:	f000 ff07 	bl	50ee <_ZN5Print5printEhi>
    42e0:	b2e4      	uxtb	r4, r4
    42e2:	e7ed      	b.n	42c0 <_ZN8HCIClass7dumpPktEPKchPh+0x14>
    42e4:	6868      	ldr	r0, [r5, #4]
    42e6:	f000 fe85 	bl	4ff4 <_ZN5Print7printlnEv>
    42ea:	6868      	ldr	r0, [r5, #4]
    42ec:	6803      	ldr	r3, [r0, #0]
    42ee:	68db      	ldr	r3, [r3, #12]
    42f0:	4798      	blx	r3
    42f2:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    42f4:	0000b477 	.word	0x0000b477

000042f8 <_ZN8HCIClass10sendAclPktEthhPv>:
    42f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    42fa:	0004      	movs	r4, r0
    42fc:	001d      	movs	r5, r3
    42fe:	b085      	sub	sp, #20
    4300:	af00      	add	r7, sp, #0
    4302:	60b9      	str	r1, [r7, #8]
    4304:	607a      	str	r2, [r7, #4]
    4306:	0023      	movs	r3, r4
    4308:	33ff      	adds	r3, #255	; 0xff
    430a:	7f9a      	ldrb	r2, [r3, #30]
    430c:	7f5b      	ldrb	r3, [r3, #29]
    430e:	429a      	cmp	r2, r3
    4310:	db03      	blt.n	431a <_ZN8HCIClass10sendAclPktEthhPv+0x22>
    4312:	0020      	movs	r0, r4
    4314:	f000 f8f6 	bl	4504 <_ZN8HCIClass4pollEv>
    4318:	e7f5      	b.n	4306 <_ZN8HCIClass10sendAclPktEthhPv+0xe>
    431a:	002b      	movs	r3, r5
    431c:	466a      	mov	r2, sp
    431e:	3310      	adds	r3, #16
    4320:	08db      	lsrs	r3, r3, #3
    4322:	00db      	lsls	r3, r3, #3
    4324:	1ad3      	subs	r3, r2, r3
    4326:	469d      	mov	sp, r3
    4328:	60fb      	str	r3, [r7, #12]
    432a:	466a      	mov	r2, sp
    432c:	2302      	movs	r3, #2
    432e:	7013      	strb	r3, [r2, #0]
    4330:	7a3b      	ldrb	r3, [r7, #8]
    4332:	3201      	adds	r2, #1
    4334:	7013      	strb	r3, [r2, #0]
    4336:	68bb      	ldr	r3, [r7, #8]
    4338:	2009      	movs	r0, #9
    433a:	0a1b      	lsrs	r3, r3, #8
    433c:	7053      	strb	r3, [r2, #1]
    433e:	466a      	mov	r2, sp
    4340:	1d2b      	adds	r3, r5, #4
    4342:	b2db      	uxtb	r3, r3
    4344:	70d3      	strb	r3, [r2, #3]
    4346:	2300      	movs	r3, #0
    4348:	7113      	strb	r3, [r2, #4]
    434a:	466b      	mov	r3, sp
    434c:	b2aa      	uxth	r2, r5
    434e:	715a      	strb	r2, [r3, #5]
    4350:	2200      	movs	r2, #0
    4352:	719a      	strb	r2, [r3, #6]
    4354:	466b      	mov	r3, sp
    4356:	1dda      	adds	r2, r3, #7
    4358:	88bb      	ldrh	r3, [r7, #4]
    435a:	002e      	movs	r6, r5
    435c:	7013      	strb	r3, [r2, #0]
    435e:	2300      	movs	r3, #0
    4360:	4468      	add	r0, sp
    4362:	7053      	strb	r3, [r2, #1]
    4364:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    4366:	002a      	movs	r2, r5
    4368:	f004 fe43 	bl	8ff2 <memcpy>
    436c:	6863      	ldr	r3, [r4, #4]
    436e:	3609      	adds	r6, #9
    4370:	2b00      	cmp	r3, #0
    4372:	d005      	beq.n	4380 <_ZN8HCIClass10sendAclPktEthhPv+0x88>
    4374:	b2f2      	uxtb	r2, r6
    4376:	466b      	mov	r3, sp
    4378:	4909      	ldr	r1, [pc, #36]	; (43a0 <_ZN8HCIClass10sendAclPktEthhPv+0xa8>)
    437a:	0020      	movs	r0, r4
    437c:	f7ff ff96 	bl	42ac <_ZN8HCIClass7dumpPktEPKchPh>
    4380:	34ff      	adds	r4, #255	; 0xff
    4382:	7fa3      	ldrb	r3, [r4, #30]
    4384:	0032      	movs	r2, r6
    4386:	3301      	adds	r3, #1
    4388:	77a3      	strb	r3, [r4, #30]
    438a:	4b06      	ldr	r3, [pc, #24]	; (43a4 <_ZN8HCIClass10sendAclPktEthhPv+0xac>)
    438c:	68f9      	ldr	r1, [r7, #12]
    438e:	6818      	ldr	r0, [r3, #0]
    4390:	6803      	ldr	r3, [r0, #0]
    4392:	699b      	ldr	r3, [r3, #24]
    4394:	4798      	blx	r3
    4396:	2000      	movs	r0, #0
    4398:	46bd      	mov	sp, r7
    439a:	b005      	add	sp, #20
    439c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    439e:	46c0      	nop			; (mov r8, r8)
    43a0:	0000b4a0 	.word	0x0000b4a0
    43a4:	0000b4fc 	.word	0x0000b4fc

000043a8 <_ZN8HCIClass16handleAclDataPktEhPh>:
    43a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    43aa:	79d7      	ldrb	r7, [r2, #7]
    43ac:	7993      	ldrb	r3, [r2, #6]
    43ae:	023f      	lsls	r7, r7, #8
    43b0:	b087      	sub	sp, #28
    43b2:	0005      	movs	r5, r0
    43b4:	0014      	movs	r4, r2
    43b6:	431f      	orrs	r7, r3
    43b8:	2f04      	cmp	r7, #4
    43ba:	d10d      	bne.n	43d8 <_ZN8HCIClass16handleAclDataPktEhPh+0x30>
    43bc:	0003      	movs	r3, r0
    43be:	7861      	ldrb	r1, [r4, #1]
    43c0:	7820      	ldrb	r0, [r4, #0]
    43c2:	0209      	lsls	r1, r1, #8
    43c4:	4301      	orrs	r1, r0
    43c6:	0509      	lsls	r1, r1, #20
    43c8:	3315      	adds	r3, #21
    43ca:	7912      	ldrb	r2, [r2, #4]
    43cc:	0d09      	lsrs	r1, r1, #20
    43ce:	4817      	ldr	r0, [pc, #92]	; (442c <_ZN8HCIClass16handleAclDataPktEhPh+0x84>)
    43d0:	f7ff fc60 	bl	3c94 <_ZN8ATTClass10handleDataEthPh>
    43d4:	b007      	add	sp, #28
    43d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    43d8:	2f05      	cmp	r7, #5
    43da:	d10c      	bne.n	43f6 <_ZN8HCIClass16handleAclDataPktEhPh+0x4e>
    43dc:	0003      	movs	r3, r0
    43de:	7861      	ldrb	r1, [r4, #1]
    43e0:	7820      	ldrb	r0, [r4, #0]
    43e2:	0209      	lsls	r1, r1, #8
    43e4:	4301      	orrs	r1, r0
    43e6:	0509      	lsls	r1, r1, #20
    43e8:	3315      	adds	r3, #21
    43ea:	7912      	ldrb	r2, [r2, #4]
    43ec:	0d09      	lsrs	r1, r1, #20
    43ee:	4810      	ldr	r0, [pc, #64]	; (4430 <_ZN8HCIClass16handleAclDataPktEhPh+0x88>)
    43f0:	f000 fb82 	bl	4af8 <_ZN19L2CAPSignalingClass10handleDataEthPh>
    43f4:	e7ee      	b.n	43d4 <_ZN8HCIClass16handleAclDataPktEhPh+0x2c>
    43f6:	ae03      	add	r6, sp, #12
    43f8:	220a      	movs	r2, #10
    43fa:	2100      	movs	r1, #0
    43fc:	0030      	movs	r0, r6
    43fe:	f004 fe13 	bl	9028 <memset>
    4402:	2301      	movs	r3, #1
    4404:	7033      	strb	r3, [r6, #0]
    4406:	3305      	adds	r3, #5
    4408:	8073      	strh	r3, [r6, #2]
    440a:	7861      	ldrb	r1, [r4, #1]
    440c:	3b04      	subs	r3, #4
    440e:	80b3      	strh	r3, [r6, #4]
    4410:	7823      	ldrb	r3, [r4, #0]
    4412:	0209      	lsls	r1, r1, #8
    4414:	4319      	orrs	r1, r3
    4416:	0509      	lsls	r1, r1, #20
    4418:	80f7      	strh	r7, [r6, #6]
    441a:	0d09      	lsrs	r1, r1, #20
    441c:	9600      	str	r6, [sp, #0]
    441e:	230a      	movs	r3, #10
    4420:	2205      	movs	r2, #5
    4422:	0028      	movs	r0, r5
    4424:	f7ff ff68 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    4428:	e7d4      	b.n	43d4 <_ZN8HCIClass16handleAclDataPktEhPh+0x2c>
    442a:	46c0      	nop			; (mov r8, r8)
    442c:	200002c8 	.word	0x200002c8
    4430:	200005ac 	.word	0x200005ac

00004434 <_ZN8HCIClass4pollEm>:
    4434:	b570      	push	{r4, r5, r6, lr}
    4436:	0004      	movs	r4, r0
    4438:	4d2f      	ldr	r5, [pc, #188]	; (44f8 <_ZN8HCIClass4pollEm+0xc4>)
    443a:	2900      	cmp	r1, #0
    443c:	d003      	beq.n	4446 <_ZN8HCIClass4pollEm+0x12>
    443e:	6828      	ldr	r0, [r5, #0]
    4440:	6803      	ldr	r3, [r0, #0]
    4442:	689b      	ldr	r3, [r3, #8]
    4444:	4798      	blx	r3
    4446:	682e      	ldr	r6, [r5, #0]
    4448:	6833      	ldr	r3, [r6, #0]
    444a:	0030      	movs	r0, r6
    444c:	68db      	ldr	r3, [r3, #12]
    444e:	4798      	blx	r3
    4450:	2800      	cmp	r0, #0
    4452:	d050      	beq.n	44f6 <_ZN8HCIClass4pollEm+0xc2>
    4454:	6833      	ldr	r3, [r6, #0]
    4456:	0030      	movs	r0, r6
    4458:	695b      	ldr	r3, [r3, #20]
    445a:	4798      	blx	r3
    445c:	68a3      	ldr	r3, [r4, #8]
    445e:	b2c1      	uxtb	r1, r0
    4460:	1c5a      	adds	r2, r3, #1
    4462:	18e3      	adds	r3, r4, r3
    4464:	60a2      	str	r2, [r4, #8]
    4466:	7319      	strb	r1, [r3, #12]
    4468:	7b23      	ldrb	r3, [r4, #12]
    446a:	2b02      	cmp	r3, #2
    446c:	d11d      	bne.n	44aa <_ZN8HCIClass4pollEm+0x76>
    446e:	2a05      	cmp	r2, #5
    4470:	dde9      	ble.n	4446 <_ZN8HCIClass4pollEm+0x12>
    4472:	7c23      	ldrb	r3, [r4, #16]
    4474:	7be1      	ldrb	r1, [r4, #15]
    4476:	021b      	lsls	r3, r3, #8
    4478:	185b      	adds	r3, r3, r1
    447a:	3304      	adds	r3, #4
    447c:	429a      	cmp	r2, r3
    447e:	dde2      	ble.n	4446 <_ZN8HCIClass4pollEm+0x12>
    4480:	6863      	ldr	r3, [r4, #4]
    4482:	2b00      	cmp	r3, #0
    4484:	d006      	beq.n	4494 <_ZN8HCIClass4pollEm+0x60>
    4486:	0023      	movs	r3, r4
    4488:	b2d2      	uxtb	r2, r2
    448a:	330c      	adds	r3, #12
    448c:	491b      	ldr	r1, [pc, #108]	; (44fc <_ZN8HCIClass4pollEm+0xc8>)
    448e:	0020      	movs	r0, r4
    4490:	f7ff ff0c 	bl	42ac <_ZN8HCIClass7dumpPktEPKchPh>
    4494:	68a3      	ldr	r3, [r4, #8]
    4496:	0022      	movs	r2, r4
    4498:	1e59      	subs	r1, r3, #1
    449a:	2300      	movs	r3, #0
    449c:	b2c9      	uxtb	r1, r1
    449e:	60a3      	str	r3, [r4, #8]
    44a0:	320d      	adds	r2, #13
    44a2:	0020      	movs	r0, r4
    44a4:	f7ff ff80 	bl	43a8 <_ZN8HCIClass16handleAclDataPktEhPh>
    44a8:	e7cd      	b.n	4446 <_ZN8HCIClass4pollEm+0x12>
    44aa:	2b04      	cmp	r3, #4
    44ac:	d11a      	bne.n	44e4 <_ZN8HCIClass4pollEm+0xb0>
    44ae:	2a03      	cmp	r2, #3
    44b0:	ddc9      	ble.n	4446 <_ZN8HCIClass4pollEm+0x12>
    44b2:	7ba3      	ldrb	r3, [r4, #14]
    44b4:	3302      	adds	r3, #2
    44b6:	429a      	cmp	r2, r3
    44b8:	ddc5      	ble.n	4446 <_ZN8HCIClass4pollEm+0x12>
    44ba:	6863      	ldr	r3, [r4, #4]
    44bc:	2b00      	cmp	r3, #0
    44be:	d006      	beq.n	44ce <_ZN8HCIClass4pollEm+0x9a>
    44c0:	0023      	movs	r3, r4
    44c2:	b2d2      	uxtb	r2, r2
    44c4:	330c      	adds	r3, #12
    44c6:	490e      	ldr	r1, [pc, #56]	; (4500 <_ZN8HCIClass4pollEm+0xcc>)
    44c8:	0020      	movs	r0, r4
    44ca:	f7ff feef 	bl	42ac <_ZN8HCIClass7dumpPktEPKchPh>
    44ce:	68a3      	ldr	r3, [r4, #8]
    44d0:	0022      	movs	r2, r4
    44d2:	1e59      	subs	r1, r3, #1
    44d4:	2300      	movs	r3, #0
    44d6:	b2c9      	uxtb	r1, r1
    44d8:	60a3      	str	r3, [r4, #8]
    44da:	320d      	adds	r2, #13
    44dc:	0020      	movs	r0, r4
    44de:	f000 f95d 	bl	479c <_ZN8HCIClass14handleEventPktEhPh>
    44e2:	e7b0      	b.n	4446 <_ZN8HCIClass4pollEm+0x12>
    44e4:	2300      	movs	r3, #0
    44e6:	6860      	ldr	r0, [r4, #4]
    44e8:	60a3      	str	r3, [r4, #8]
    44ea:	4298      	cmp	r0, r3
    44ec:	d0ab      	beq.n	4446 <_ZN8HCIClass4pollEm+0x12>
    44ee:	2210      	movs	r2, #16
    44f0:	f000 fe01 	bl	50f6 <_ZN5Print7printlnEhi>
    44f4:	e7a7      	b.n	4446 <_ZN8HCIClass4pollEm+0x12>
    44f6:	bd70      	pop	{r4, r5, r6, pc}
    44f8:	0000b4fc 	.word	0x0000b4fc
    44fc:	0000b4c6 	.word	0x0000b4c6
    4500:	0000b4d9 	.word	0x0000b4d9

00004504 <_ZN8HCIClass4pollEv>:
    4504:	b510      	push	{r4, lr}
    4506:	2100      	movs	r1, #0
    4508:	f7ff ff94 	bl	4434 <_ZN8HCIClass4pollEm>
    450c:	bd10      	pop	{r4, pc}
	...

00004510 <_ZN8HCIClass11sendCommandEthPv>:
    4510:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4512:	0004      	movs	r4, r0
    4514:	0010      	movs	r0, r2
    4516:	000d      	movs	r5, r1
    4518:	4669      	mov	r1, sp
    451a:	300b      	adds	r0, #11
    451c:	08c0      	lsrs	r0, r0, #3
    451e:	00c0      	lsls	r0, r0, #3
    4520:	1a09      	subs	r1, r1, r0
    4522:	af00      	add	r7, sp, #0
    4524:	468d      	mov	sp, r1
    4526:	6079      	str	r1, [r7, #4]
    4528:	4668      	mov	r0, sp
    452a:	2101      	movs	r1, #1
    452c:	7001      	strb	r1, [r0, #0]
    452e:	4669      	mov	r1, sp
    4530:	7045      	strb	r5, [r0, #1]
    4532:	0a28      	lsrs	r0, r5, #8
    4534:	7088      	strb	r0, [r1, #2]
    4536:	4669      	mov	r1, sp
    4538:	a801      	add	r0, sp, #4
    453a:	70ca      	strb	r2, [r1, #3]
    453c:	0019      	movs	r1, r3
    453e:	1d16      	adds	r6, r2, #4
    4540:	f004 fd57 	bl	8ff2 <memcpy>
    4544:	6863      	ldr	r3, [r4, #4]
    4546:	2b00      	cmp	r3, #0
    4548:	d005      	beq.n	4556 <_ZN8HCIClass11sendCommandEthPv+0x46>
    454a:	b2f2      	uxtb	r2, r6
    454c:	466b      	mov	r3, sp
    454e:	4915      	ldr	r1, [pc, #84]	; (45a4 <_ZN8HCIClass11sendCommandEthPv+0x94>)
    4550:	0020      	movs	r0, r4
    4552:	f7ff feab 	bl	42ac <_ZN8HCIClass7dumpPktEPKchPh>
    4556:	4b14      	ldr	r3, [pc, #80]	; (45a8 <_ZN8HCIClass11sendCommandEthPv+0x98>)
    4558:	0032      	movs	r2, r6
    455a:	6818      	ldr	r0, [r3, #0]
    455c:	6879      	ldr	r1, [r7, #4]
    455e:	6803      	ldr	r3, [r0, #0]
    4560:	0026      	movs	r6, r4
    4562:	699b      	ldr	r3, [r3, #24]
    4564:	4798      	blx	r3
    4566:	0023      	movs	r3, r4
    4568:	33fe      	adds	r3, #254	; 0xfe
    456a:	607b      	str	r3, [r7, #4]
    456c:	2301      	movs	r3, #1
    456e:	687a      	ldr	r2, [r7, #4]
    4570:	425b      	negs	r3, r3
    4572:	36fc      	adds	r6, #252	; 0xfc
    4574:	8213      	strh	r3, [r2, #16]
    4576:	6173      	str	r3, [r6, #20]
    4578:	f000 fc86 	bl	4e88 <millis>
    457c:	6038      	str	r0, [r7, #0]
    457e:	687b      	ldr	r3, [r7, #4]
    4580:	8a1b      	ldrh	r3, [r3, #16]
    4582:	42ab      	cmp	r3, r5
    4584:	d00b      	beq.n	459e <_ZN8HCIClass11sendCommandEthPv+0x8e>
    4586:	f000 fc7f 	bl	4e88 <millis>
    458a:	22fa      	movs	r2, #250	; 0xfa
    458c:	683b      	ldr	r3, [r7, #0]
    458e:	0092      	lsls	r2, r2, #2
    4590:	189b      	adds	r3, r3, r2
    4592:	4298      	cmp	r0, r3
    4594:	d203      	bcs.n	459e <_ZN8HCIClass11sendCommandEthPv+0x8e>
    4596:	0020      	movs	r0, r4
    4598:	f7ff ffb4 	bl	4504 <_ZN8HCIClass4pollEv>
    459c:	e7ef      	b.n	457e <_ZN8HCIClass11sendCommandEthPv+0x6e>
    459e:	46bd      	mov	sp, r7
    45a0:	6970      	ldr	r0, [r6, #20]
    45a2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    45a4:	0000b4b3 	.word	0x0000b4b3
    45a8:	0000b4fc 	.word	0x0000b4fc

000045ac <_ZN8HCIClass5resetEv>:
    45ac:	2300      	movs	r3, #0
    45ae:	b510      	push	{r4, lr}
    45b0:	001a      	movs	r2, r3
    45b2:	4902      	ldr	r1, [pc, #8]	; (45bc <_ZN8HCIClass5resetEv+0x10>)
    45b4:	f7ff ffac 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    45b8:	bd10      	pop	{r4, pc}
    45ba:	46c0      	nop			; (mov r8, r8)
    45bc:	00000c03 	.word	0x00000c03

000045c0 <_ZN8HCIClass16readLocalVersionERhRtS0_S1_S1_>:
    45c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    45c2:	001c      	movs	r4, r3
    45c4:	2300      	movs	r3, #0
    45c6:	000e      	movs	r6, r1
    45c8:	0015      	movs	r5, r2
    45ca:	490f      	ldr	r1, [pc, #60]	; (4608 <_ZN8HCIClass16readLocalVersionERhRtS0_S1_S1_+0x48>)
    45cc:	001a      	movs	r2, r3
    45ce:	0007      	movs	r7, r0
    45d0:	f7ff ff9e 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    45d4:	2800      	cmp	r0, #0
    45d6:	d116      	bne.n	4606 <_ZN8HCIClass16readLocalVersionERhRtS0_S1_S1_+0x46>
    45d8:	37fc      	adds	r7, #252	; 0xfc
    45da:	69fb      	ldr	r3, [r7, #28]
    45dc:	781a      	ldrb	r2, [r3, #0]
    45de:	7032      	strb	r2, [r6, #0]
    45e0:	789a      	ldrb	r2, [r3, #2]
    45e2:	7859      	ldrb	r1, [r3, #1]
    45e4:	0212      	lsls	r2, r2, #8
    45e6:	430a      	orrs	r2, r1
    45e8:	802a      	strh	r2, [r5, #0]
    45ea:	78da      	ldrb	r2, [r3, #3]
    45ec:	7022      	strb	r2, [r4, #0]
    45ee:	795a      	ldrb	r2, [r3, #5]
    45f0:	7919      	ldrb	r1, [r3, #4]
    45f2:	0212      	lsls	r2, r2, #8
    45f4:	430a      	orrs	r2, r1
    45f6:	9906      	ldr	r1, [sp, #24]
    45f8:	800a      	strh	r2, [r1, #0]
    45fa:	799a      	ldrb	r2, [r3, #6]
    45fc:	79db      	ldrb	r3, [r3, #7]
    45fe:	021b      	lsls	r3, r3, #8
    4600:	4313      	orrs	r3, r2
    4602:	9a07      	ldr	r2, [sp, #28]
    4604:	8013      	strh	r3, [r2, #0]
    4606:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4608:	00001001 	.word	0x00001001

0000460c <_ZN8HCIClass10readBdAddrEPh>:
    460c:	2300      	movs	r3, #0
    460e:	b570      	push	{r4, r5, r6, lr}
    4610:	001a      	movs	r2, r3
    4612:	000e      	movs	r6, r1
    4614:	4906      	ldr	r1, [pc, #24]	; (4630 <_ZN8HCIClass10readBdAddrEPh+0x24>)
    4616:	0004      	movs	r4, r0
    4618:	f7ff ff7a 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    461c:	1e05      	subs	r5, r0, #0
    461e:	d105      	bne.n	462c <_ZN8HCIClass10readBdAddrEPh+0x20>
    4620:	34fc      	adds	r4, #252	; 0xfc
    4622:	69e1      	ldr	r1, [r4, #28]
    4624:	2206      	movs	r2, #6
    4626:	0030      	movs	r0, r6
    4628:	f004 fce3 	bl	8ff2 <memcpy>
    462c:	0028      	movs	r0, r5
    462e:	bd70      	pop	{r4, r5, r6, pc}
    4630:	00001009 	.word	0x00001009

00004634 <_ZN8HCIClass8readRssiEt>:
    4634:	b537      	push	{r0, r1, r2, r4, r5, lr}
    4636:	466b      	mov	r3, sp
    4638:	1d9d      	adds	r5, r3, #6
    463a:	80d9      	strh	r1, [r3, #6]
    463c:	2202      	movs	r2, #2
    463e:	490a      	ldr	r1, [pc, #40]	; (4668 <_ZN8HCIClass8readRssiEt+0x34>)
    4640:	002b      	movs	r3, r5
    4642:	0004      	movs	r4, r0
    4644:	f7ff ff64 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    4648:	217f      	movs	r1, #127	; 0x7f
    464a:	2800      	cmp	r0, #0
    464c:	d10a      	bne.n	4664 <_ZN8HCIClass8readRssiEt+0x30>
    464e:	34fc      	adds	r4, #252	; 0xfc
    4650:	69e2      	ldr	r2, [r4, #28]
    4652:	8828      	ldrh	r0, [r5, #0]
    4654:	7853      	ldrb	r3, [r2, #1]
    4656:	7814      	ldrb	r4, [r2, #0]
    4658:	021b      	lsls	r3, r3, #8
    465a:	4323      	orrs	r3, r4
    465c:	4298      	cmp	r0, r3
    465e:	d101      	bne.n	4664 <_ZN8HCIClass8readRssiEt+0x30>
    4660:	2102      	movs	r1, #2
    4662:	5651      	ldrsb	r1, [r2, r1]
    4664:	0008      	movs	r0, r1
    4666:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    4668:	00001405 	.word	0x00001405

0000466c <_ZN8HCIClass12setEventMaskEy>:
    466c:	b507      	push	{r0, r1, r2, lr}
    466e:	4904      	ldr	r1, [pc, #16]	; (4680 <_ZN8HCIClass12setEventMaskEy+0x14>)
    4670:	9200      	str	r2, [sp, #0]
    4672:	9301      	str	r3, [sp, #4]
    4674:	466b      	mov	r3, sp
    4676:	2208      	movs	r2, #8
    4678:	f7ff ff4a 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    467c:	bd0e      	pop	{r1, r2, r3, pc}
    467e:	46c0      	nop			; (mov r8, r8)
    4680:	00000c01 	.word	0x00000c01

00004684 <_ZN8HCIClass16readLeBufferSizeERtRh>:
    4684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4686:	2300      	movs	r3, #0
    4688:	000e      	movs	r6, r1
    468a:	0017      	movs	r7, r2
    468c:	490d      	ldr	r1, [pc, #52]	; (46c4 <_ZN8HCIClass16readLeBufferSizeERtRh+0x40>)
    468e:	001a      	movs	r2, r3
    4690:	0005      	movs	r5, r0
    4692:	f7ff ff3d 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    4696:	1e04      	subs	r4, r0, #0
    4698:	d111      	bne.n	46be <_ZN8HCIClass16readLeBufferSizeERtRh+0x3a>
    469a:	002b      	movs	r3, r5
    469c:	33fc      	adds	r3, #252	; 0xfc
    469e:	69da      	ldr	r2, [r3, #28]
    46a0:	35ff      	adds	r5, #255	; 0xff
    46a2:	7853      	ldrb	r3, [r2, #1]
    46a4:	7811      	ldrb	r1, [r2, #0]
    46a6:	021b      	lsls	r3, r3, #8
    46a8:	430b      	orrs	r3, r1
    46aa:	8033      	strh	r3, [r6, #0]
    46ac:	7893      	ldrb	r3, [r2, #2]
    46ae:	4806      	ldr	r0, [pc, #24]	; (46c8 <_ZN8HCIClass16readLeBufferSizeERtRh+0x44>)
    46b0:	703b      	strb	r3, [r7, #0]
    46b2:	776b      	strb	r3, [r5, #29]
    46b4:	8831      	ldrh	r1, [r6, #0]
    46b6:	3909      	subs	r1, #9
    46b8:	b289      	uxth	r1, r1
    46ba:	f7fe fb81 	bl	2dc0 <_ZN8ATTClass9setMaxMtuEt>
    46be:	0020      	movs	r0, r4
    46c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    46c2:	46c0      	nop			; (mov r8, r8)
    46c4:	00002002 	.word	0x00002002
    46c8:	200002c8 	.word	0x200002c8

000046cc <_ZN8HCIClass26leSetAdvertisingParametersEtthhhPhhh>:
    46cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    46ce:	b085      	sub	sp, #20
    46d0:	469c      	mov	ip, r3
    46d2:	466b      	mov	r3, sp
    46d4:	805a      	strh	r2, [r3, #2]
    46d6:	4662      	mov	r2, ip
    46d8:	0004      	movs	r4, r0
    46da:	a80a      	add	r0, sp, #40	; 0x28
    46dc:	7807      	ldrb	r7, [r0, #0]
    46de:	a80b      	add	r0, sp, #44	; 0x2c
    46e0:	7800      	ldrb	r0, [r0, #0]
    46e2:	ad0d      	add	r5, sp, #52	; 0x34
    46e4:	782e      	ldrb	r6, [r5, #0]
    46e6:	8019      	strh	r1, [r3, #0]
    46e8:	711a      	strb	r2, [r3, #4]
    46ea:	7198      	strb	r0, [r3, #6]
    46ec:	990c      	ldr	r1, [sp, #48]	; 0x30
    46ee:	ad0e      	add	r5, sp, #56	; 0x38
    46f0:	2206      	movs	r2, #6
    46f2:	1dd8      	adds	r0, r3, #7
    46f4:	782d      	ldrb	r5, [r5, #0]
    46f6:	715f      	strb	r7, [r3, #5]
    46f8:	f004 fc7b 	bl	8ff2 <memcpy>
    46fc:	466b      	mov	r3, sp
    46fe:	220f      	movs	r2, #15
    4700:	4903      	ldr	r1, [pc, #12]	; (4710 <_ZN8HCIClass26leSetAdvertisingParametersEtthhhPhhh+0x44>)
    4702:	0020      	movs	r0, r4
    4704:	735e      	strb	r6, [r3, #13]
    4706:	739d      	strb	r5, [r3, #14]
    4708:	f7ff ff02 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    470c:	b005      	add	sp, #20
    470e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4710:	00002006 	.word	0x00002006

00004714 <_ZN8HCIClass20leSetAdvertisingDataEhPh>:
    4714:	b5f0      	push	{r4, r5, r6, r7, lr}
    4716:	2420      	movs	r4, #32
    4718:	b089      	sub	sp, #36	; 0x24
    471a:	000d      	movs	r5, r1
    471c:	0006      	movs	r6, r0
    471e:	0017      	movs	r7, r2
    4720:	2100      	movs	r1, #0
    4722:	0022      	movs	r2, r4
    4724:	4668      	mov	r0, sp
    4726:	f004 fc7f 	bl	9028 <memset>
    472a:	466b      	mov	r3, sp
    472c:	002a      	movs	r2, r5
    472e:	0039      	movs	r1, r7
    4730:	1c58      	adds	r0, r3, #1
    4732:	701d      	strb	r5, [r3, #0]
    4734:	f004 fc5d 	bl	8ff2 <memcpy>
    4738:	466b      	mov	r3, sp
    473a:	0022      	movs	r2, r4
    473c:	4902      	ldr	r1, [pc, #8]	; (4748 <_ZN8HCIClass20leSetAdvertisingDataEhPh+0x34>)
    473e:	0030      	movs	r0, r6
    4740:	f7ff fee6 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    4744:	b009      	add	sp, #36	; 0x24
    4746:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4748:	00002008 	.word	0x00002008

0000474c <_ZN8HCIClass21leSetScanResponseDataEhPh>:
    474c:	b5f0      	push	{r4, r5, r6, r7, lr}
    474e:	2420      	movs	r4, #32
    4750:	b089      	sub	sp, #36	; 0x24
    4752:	000d      	movs	r5, r1
    4754:	0006      	movs	r6, r0
    4756:	0017      	movs	r7, r2
    4758:	2100      	movs	r1, #0
    475a:	0022      	movs	r2, r4
    475c:	4668      	mov	r0, sp
    475e:	f004 fc63 	bl	9028 <memset>
    4762:	466b      	mov	r3, sp
    4764:	002a      	movs	r2, r5
    4766:	0039      	movs	r1, r7
    4768:	1c58      	adds	r0, r3, #1
    476a:	701d      	strb	r5, [r3, #0]
    476c:	f004 fc41 	bl	8ff2 <memcpy>
    4770:	466b      	mov	r3, sp
    4772:	0022      	movs	r2, r4
    4774:	4902      	ldr	r1, [pc, #8]	; (4780 <_ZN8HCIClass21leSetScanResponseDataEhPh+0x34>)
    4776:	0030      	movs	r0, r6
    4778:	f7ff feca 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    477c:	b009      	add	sp, #36	; 0x24
    477e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4780:	00002009 	.word	0x00002009

00004784 <_ZN8HCIClass20leSetAdvertiseEnableEh>:
    4784:	b507      	push	{r0, r1, r2, lr}
    4786:	466b      	mov	r3, sp
    4788:	3307      	adds	r3, #7
    478a:	7019      	strb	r1, [r3, #0]
    478c:	2201      	movs	r2, #1
    478e:	4902      	ldr	r1, [pc, #8]	; (4798 <_ZN8HCIClass20leSetAdvertiseEnableEh+0x14>)
    4790:	f7ff febe 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    4794:	bd0e      	pop	{r1, r2, r3, pc}
    4796:	46c0      	nop			; (mov r8, r8)
    4798:	0000200a 	.word	0x0000200a

0000479c <_ZN8HCIClass14handleEventPktEhPh>:
    479c:	b5f0      	push	{r4, r5, r6, r7, lr}
    479e:	7813      	ldrb	r3, [r2, #0]
    47a0:	b087      	sub	sp, #28
    47a2:	0004      	movs	r4, r0
    47a4:	2b05      	cmp	r3, #5
    47a6:	d110      	bne.n	47ca <_ZN8HCIClass14handleEventPktEhPh+0x2e>
    47a8:	1c94      	adds	r4, r2, #2
    47aa:	7861      	ldrb	r1, [r4, #1]
    47ac:	7952      	ldrb	r2, [r2, #5]
    47ae:	4839      	ldr	r0, [pc, #228]	; (4894 <_ZN8HCIClass14handleEventPktEhPh+0xf8>)
    47b0:	f7fe fb26 	bl	2e00 <_ZN8ATTClass16removeConnectionEht>
    47b4:	7861      	ldrb	r1, [r4, #1]
    47b6:	4838      	ldr	r0, [pc, #224]	; (4898 <_ZN8HCIClass14handleEventPktEhPh+0xfc>)
    47b8:	78e2      	ldrb	r2, [r4, #3]
    47ba:	f000 f94d 	bl	4a58 <_ZN19L2CAPSignalingClass16removeConnectionEht>
    47be:	2101      	movs	r1, #1
    47c0:	4836      	ldr	r0, [pc, #216]	; (489c <_ZN8HCIClass14handleEventPktEhPh+0x100>)
    47c2:	f7ff ffdf 	bl	4784 <_ZN8HCIClass20leSetAdvertiseEnableEh>
    47c6:	b007      	add	sp, #28
    47c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    47ca:	2b0e      	cmp	r3, #14
    47cc:	d110      	bne.n	47f0 <_ZN8HCIClass14handleEventPktEhPh+0x54>
    47ce:	7913      	ldrb	r3, [r2, #4]
    47d0:	78d0      	ldrb	r0, [r2, #3]
    47d2:	021b      	lsls	r3, r3, #8
    47d4:	4303      	orrs	r3, r0
    47d6:	0020      	movs	r0, r4
    47d8:	30fe      	adds	r0, #254	; 0xfe
    47da:	8203      	strh	r3, [r0, #16]
    47dc:	7953      	ldrb	r3, [r2, #5]
    47de:	3802      	subs	r0, #2
    47e0:	6143      	str	r3, [r0, #20]
    47e2:	7853      	ldrb	r3, [r2, #1]
    47e4:	34ff      	adds	r4, #255	; 0xff
    47e6:	3b04      	subs	r3, #4
    47e8:	3206      	adds	r2, #6
    47ea:	7563      	strb	r3, [r4, #21]
    47ec:	61c2      	str	r2, [r0, #28]
    47ee:	e7ea      	b.n	47c6 <_ZN8HCIClass14handleEventPktEhPh+0x2a>
    47f0:	2b13      	cmp	r3, #19
    47f2:	d10d      	bne.n	4810 <_ZN8HCIClass14handleEventPktEhPh+0x74>
    47f4:	2500      	movs	r5, #0
    47f6:	7896      	ldrb	r6, [r2, #2]
    47f8:	1cd7      	adds	r7, r2, #3
    47fa:	42b5      	cmp	r5, r6
    47fc:	dae3      	bge.n	47c6 <_ZN8HCIClass14handleEventPktEhPh+0x2a>
    47fe:	887a      	ldrh	r2, [r7, #2]
    4800:	8839      	ldrh	r1, [r7, #0]
    4802:	0020      	movs	r0, r4
    4804:	3501      	adds	r5, #1
    4806:	f7ff fd45 	bl	4294 <_ZN8HCIClass17handleNumCompPktsEtt>
    480a:	3704      	adds	r7, #4
    480c:	b2ed      	uxtb	r5, r5
    480e:	e7f4      	b.n	47fa <_ZN8HCIClass14handleEventPktEhPh+0x5e>
    4810:	2b3e      	cmp	r3, #62	; 0x3e
    4812:	d1d8      	bne.n	47c6 <_ZN8HCIClass14handleEventPktEhPh+0x2a>
    4814:	7893      	ldrb	r3, [r2, #2]
    4816:	2b01      	cmp	r3, #1
    4818:	d1d5      	bne.n	47c6 <_ZN8HCIClass14handleEventPktEhPh+0x2a>
    481a:	78d3      	ldrb	r3, [r2, #3]
    481c:	1cd5      	adds	r5, r2, #3
    481e:	2b00      	cmp	r3, #0
    4820:	d1d1      	bne.n	47c6 <_ZN8HCIClass14handleEventPktEhPh+0x2a>
    4822:	3208      	adds	r2, #8
    4824:	0014      	movs	r4, r2
    4826:	78a9      	ldrb	r1, [r5, #2]
    4828:	7868      	ldrb	r0, [r5, #1]
    482a:	0209      	lsls	r1, r1, #8
    482c:	4301      	orrs	r1, r0
    482e:	7c68      	ldrb	r0, [r5, #17]
    4830:	792b      	ldrb	r3, [r5, #4]
    4832:	78ea      	ldrb	r2, [r5, #3]
    4834:	9004      	str	r0, [sp, #16]
    4836:	7c28      	ldrb	r0, [r5, #16]
    4838:	7bee      	ldrb	r6, [r5, #15]
    483a:	0200      	lsls	r0, r0, #8
    483c:	4330      	orrs	r0, r6
    483e:	9003      	str	r0, [sp, #12]
    4840:	7ba8      	ldrb	r0, [r5, #14]
    4842:	7b6e      	ldrb	r6, [r5, #13]
    4844:	0200      	lsls	r0, r0, #8
    4846:	4330      	orrs	r0, r6
    4848:	9002      	str	r0, [sp, #8]
    484a:	7b28      	ldrb	r0, [r5, #12]
    484c:	7aee      	ldrb	r6, [r5, #11]
    484e:	0200      	lsls	r0, r0, #8
    4850:	4330      	orrs	r0, r6
    4852:	9001      	str	r0, [sp, #4]
    4854:	9400      	str	r4, [sp, #0]
    4856:	480f      	ldr	r0, [pc, #60]	; (4894 <_ZN8HCIClass14handleEventPktEhPh+0xf8>)
    4858:	f7fe fab4 	bl	2dc4 <_ZN8ATTClass13addConnectionEthhPhttth>
    485c:	78a9      	ldrb	r1, [r5, #2]
    485e:	7868      	ldrb	r0, [r5, #1]
    4860:	0209      	lsls	r1, r1, #8
    4862:	4301      	orrs	r1, r0
    4864:	7c68      	ldrb	r0, [r5, #17]
    4866:	792b      	ldrb	r3, [r5, #4]
    4868:	78ea      	ldrb	r2, [r5, #3]
    486a:	9004      	str	r0, [sp, #16]
    486c:	7c28      	ldrb	r0, [r5, #16]
    486e:	7bee      	ldrb	r6, [r5, #15]
    4870:	0200      	lsls	r0, r0, #8
    4872:	4330      	orrs	r0, r6
    4874:	9003      	str	r0, [sp, #12]
    4876:	7ba8      	ldrb	r0, [r5, #14]
    4878:	7b6e      	ldrb	r6, [r5, #13]
    487a:	0200      	lsls	r0, r0, #8
    487c:	4330      	orrs	r0, r6
    487e:	9002      	str	r0, [sp, #8]
    4880:	7b28      	ldrb	r0, [r5, #12]
    4882:	7aee      	ldrb	r6, [r5, #11]
    4884:	0200      	lsls	r0, r0, #8
    4886:	4330      	orrs	r0, r6
    4888:	9001      	str	r0, [sp, #4]
    488a:	9400      	str	r4, [sp, #0]
    488c:	4802      	ldr	r0, [pc, #8]	; (4898 <_ZN8HCIClass14handleEventPktEhPh+0xfc>)
    488e:	f000 f8b7 	bl	4a00 <_ZN19L2CAPSignalingClass13addConnectionEthhPhttth>
    4892:	e798      	b.n	47c6 <_ZN8HCIClass14handleEventPktEhPh+0x2a>
    4894:	200002c8 	.word	0x200002c8
    4898:	200005ac 	.word	0x200005ac
    489c:	20000480 	.word	0x20000480

000048a0 <_ZN8HCIClass12leConnUpdateEttttt>:
    48a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    48a2:	466e      	mov	r6, sp
    48a4:	80b3      	strh	r3, [r6, #4]
    48a6:	2304      	movs	r3, #4
    48a8:	ac08      	add	r4, sp, #32
    48aa:	8825      	ldrh	r5, [r4, #0]
    48ac:	ac09      	add	r4, sp, #36	; 0x24
    48ae:	8824      	ldrh	r4, [r4, #0]
    48b0:	8173      	strh	r3, [r6, #10]
    48b2:	3302      	adds	r3, #2
    48b4:	8031      	strh	r1, [r6, #0]
    48b6:	8072      	strh	r2, [r6, #2]
    48b8:	81b3      	strh	r3, [r6, #12]
    48ba:	220e      	movs	r2, #14
    48bc:	466b      	mov	r3, sp
    48be:	4903      	ldr	r1, [pc, #12]	; (48cc <_ZN8HCIClass12leConnUpdateEttttt+0x2c>)
    48c0:	80f5      	strh	r5, [r6, #6]
    48c2:	8134      	strh	r4, [r6, #8]
    48c4:	f7ff fe24 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    48c8:	b004      	add	sp, #16
    48ca:	bd70      	pop	{r4, r5, r6, pc}
    48cc:	00002013 	.word	0x00002013

000048d0 <_ZN8HCIClass10disconnectEt>:
    48d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    48d2:	2503      	movs	r5, #3
    48d4:	ac01      	add	r4, sp, #4
    48d6:	0006      	movs	r6, r0
    48d8:	000f      	movs	r7, r1
    48da:	002a      	movs	r2, r5
    48dc:	2100      	movs	r1, #0
    48de:	0020      	movs	r0, r4
    48e0:	f004 fba2 	bl	9028 <memset>
    48e4:	2313      	movs	r3, #19
    48e6:	002a      	movs	r2, r5
    48e8:	70a3      	strb	r3, [r4, #2]
    48ea:	0030      	movs	r0, r6
    48ec:	0023      	movs	r3, r4
    48ee:	4902      	ldr	r1, [pc, #8]	; (48f8 <_ZN8HCIClass10disconnectEt+0x28>)
    48f0:	8027      	strh	r7, [r4, #0]
    48f2:	f7ff fe0d 	bl	4510 <_ZN8HCIClass11sendCommandEthPv>
    48f6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    48f8:	00000406 	.word	0x00000406

000048fc <_GLOBAL__sub_I__ZN8HCIClassC2Ev>:
    48fc:	4807      	ldr	r0, [pc, #28]	; (491c <_GLOBAL__sub_I__ZN8HCIClassC2Ev+0x20>)
    48fe:	4b08      	ldr	r3, [pc, #32]	; (4920 <_GLOBAL__sub_I__ZN8HCIClassC2Ev+0x24>)
    4900:	0002      	movs	r2, r0
    4902:	3308      	adds	r3, #8
    4904:	b510      	push	{r4, lr}
    4906:	6003      	str	r3, [r0, #0]
    4908:	2300      	movs	r3, #0
    490a:	32ff      	adds	r2, #255	; 0xff
    490c:	7793      	strb	r3, [r2, #30]
    490e:	4905      	ldr	r1, [pc, #20]	; (4924 <_GLOBAL__sub_I__ZN8HCIClassC2Ev+0x28>)
    4910:	4a05      	ldr	r2, [pc, #20]	; (4928 <_GLOBAL__sub_I__ZN8HCIClassC2Ev+0x2c>)
    4912:	6043      	str	r3, [r0, #4]
    4914:	6083      	str	r3, [r0, #8]
    4916:	f002 fbb7 	bl	7088 <__aeabi_atexit>
    491a:	bd10      	pop	{r4, pc}
    491c:	20000480 	.word	0x20000480
    4920:	0000b4ec 	.word	0x0000b4ec
    4924:	0000425b 	.word	0x0000425b
    4928:	20000000 	.word	0x20000000

0000492c <_ZN21HCIUartTransportClassD1Ev>:
    492c:	4770      	bx	lr

0000492e <_ZN21HCIUartTransportClass5beginEv>:
    492e:	6843      	ldr	r3, [r0, #4]
    4930:	b510      	push	{r4, lr}
    4932:	681a      	ldr	r2, [r3, #0]
    4934:	6881      	ldr	r1, [r0, #8]
    4936:	69d2      	ldr	r2, [r2, #28]
    4938:	0018      	movs	r0, r3
    493a:	4790      	blx	r2
    493c:	2001      	movs	r0, #1
    493e:	bd10      	pop	{r4, pc}

00004940 <_ZN21HCIUartTransportClass3endEv>:
    4940:	b510      	push	{r4, lr}
    4942:	6840      	ldr	r0, [r0, #4]
    4944:	6803      	ldr	r3, [r0, #0]
    4946:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    4948:	4798      	blx	r3
    494a:	bd10      	pop	{r4, pc}

0000494c <_ZN21HCIUartTransportClass9availableEv>:
    494c:	b510      	push	{r4, lr}
    494e:	6840      	ldr	r0, [r0, #4]
    4950:	6803      	ldr	r3, [r0, #0]
    4952:	691b      	ldr	r3, [r3, #16]
    4954:	4798      	blx	r3
    4956:	bd10      	pop	{r4, pc}

00004958 <_ZN21HCIUartTransportClass4peekEv>:
    4958:	b510      	push	{r4, lr}
    495a:	6840      	ldr	r0, [r0, #4]
    495c:	6803      	ldr	r3, [r0, #0]
    495e:	699b      	ldr	r3, [r3, #24]
    4960:	4798      	blx	r3
    4962:	bd10      	pop	{r4, pc}

00004964 <_ZN21HCIUartTransportClass4readEv>:
    4964:	b510      	push	{r4, lr}
    4966:	6840      	ldr	r0, [r0, #4]
    4968:	6803      	ldr	r3, [r0, #0]
    496a:	695b      	ldr	r3, [r3, #20]
    496c:	4798      	blx	r3
    496e:	bd10      	pop	{r4, pc}

00004970 <_ZN21HCIUartTransportClass5writeEPKhj>:
    4970:	b570      	push	{r4, r5, r6, lr}
    4972:	0004      	movs	r4, r0
    4974:	6840      	ldr	r0, [r0, #4]
    4976:	6803      	ldr	r3, [r0, #0]
    4978:	685b      	ldr	r3, [r3, #4]
    497a:	4798      	blx	r3
    497c:	0005      	movs	r5, r0
    497e:	6860      	ldr	r0, [r4, #4]
    4980:	6803      	ldr	r3, [r0, #0]
    4982:	68db      	ldr	r3, [r3, #12]
    4984:	4798      	blx	r3
    4986:	0028      	movs	r0, r5
    4988:	bd70      	pop	{r4, r5, r6, pc}

0000498a <_ZN21HCIUartTransportClassD0Ev>:
    498a:	b510      	push	{r4, lr}
    498c:	0004      	movs	r4, r0
    498e:	f000 fafb 	bl	4f88 <_ZdlPv>
    4992:	0020      	movs	r0, r4
    4994:	bd10      	pop	{r4, pc}

00004996 <_ZN21HCIUartTransportClass4waitEm>:
    4996:	b570      	push	{r4, r5, r6, lr}
    4998:	0004      	movs	r4, r0
    499a:	000e      	movs	r6, r1
    499c:	f000 fa74 	bl	4e88 <millis>
    49a0:	0005      	movs	r5, r0
    49a2:	f000 fa71 	bl	4e88 <millis>
    49a6:	1b40      	subs	r0, r0, r5
    49a8:	42b0      	cmp	r0, r6
    49aa:	d205      	bcs.n	49b8 <_ZN21HCIUartTransportClass4waitEm+0x22>
    49ac:	6823      	ldr	r3, [r4, #0]
    49ae:	0020      	movs	r0, r4
    49b0:	68db      	ldr	r3, [r3, #12]
    49b2:	4798      	blx	r3
    49b4:	2800      	cmp	r0, #0
    49b6:	d0f4      	beq.n	49a2 <_ZN21HCIUartTransportClass4waitEm+0xc>
    49b8:	bd70      	pop	{r4, r5, r6, pc}
	...

000049bc <_GLOBAL__sub_I__ZN21HCIUartTransportClassC2ER14HardwareSerialm>:
    49bc:	4b06      	ldr	r3, [pc, #24]	; (49d8 <_GLOBAL__sub_I__ZN21HCIUartTransportClassC2ER14HardwareSerialm+0x1c>)
    49be:	4807      	ldr	r0, [pc, #28]	; (49dc <_GLOBAL__sub_I__ZN21HCIUartTransportClassC2ER14HardwareSerialm+0x20>)
    49c0:	b510      	push	{r4, lr}
    49c2:	3308      	adds	r3, #8
    49c4:	6003      	str	r3, [r0, #0]
    49c6:	4b06      	ldr	r3, [pc, #24]	; (49e0 <_GLOBAL__sub_I__ZN21HCIUartTransportClassC2ER14HardwareSerialm+0x24>)
    49c8:	4a06      	ldr	r2, [pc, #24]	; (49e4 <_GLOBAL__sub_I__ZN21HCIUartTransportClassC2ER14HardwareSerialm+0x28>)
    49ca:	6043      	str	r3, [r0, #4]
    49cc:	4b06      	ldr	r3, [pc, #24]	; (49e8 <_GLOBAL__sub_I__ZN21HCIUartTransportClassC2ER14HardwareSerialm+0x2c>)
    49ce:	4907      	ldr	r1, [pc, #28]	; (49ec <_GLOBAL__sub_I__ZN21HCIUartTransportClassC2ER14HardwareSerialm+0x30>)
    49d0:	6083      	str	r3, [r0, #8]
    49d2:	f002 fb59 	bl	7088 <__aeabi_atexit>
    49d6:	bd10      	pop	{r4, pc}
    49d8:	0000b500 	.word	0x0000b500
    49dc:	200005a0 	.word	0x200005a0
    49e0:	20000e20 	.word	0x20000e20
    49e4:	20000000 	.word	0x20000000
    49e8:	000decd8 	.word	0x000decd8
    49ec:	0000492d 	.word	0x0000492d

000049f0 <_ZN19L2CAPSignalingClassD1Ev>:
    49f0:	4770      	bx	lr

000049f2 <_ZN19L2CAPSignalingClassD0Ev>:
    49f2:	b510      	push	{r4, lr}
    49f4:	0004      	movs	r4, r0
    49f6:	f000 fac7 	bl	4f88 <_ZdlPv>
    49fa:	0020      	movs	r0, r4
    49fc:	bd10      	pop	{r4, pc}
	...

00004a00 <_ZN19L2CAPSignalingClass13addConnectionEthhPhttth>:
    4a00:	b5f0      	push	{r4, r5, r6, r7, lr}
    4a02:	b087      	sub	sp, #28
    4a04:	ab0d      	add	r3, sp, #52	; 0x34
    4a06:	000f      	movs	r7, r1
    4a08:	881b      	ldrh	r3, [r3, #0]
    4a0a:	2a01      	cmp	r2, #1
    4a0c:	d120      	bne.n	4a50 <_ZN19L2CAPSignalingClass13addConnectionEthhPhttth+0x50>
    4a0e:	8886      	ldrh	r6, [r0, #4]
    4a10:	2e00      	cmp	r6, #0
    4a12:	d01d      	beq.n	4a50 <_ZN19L2CAPSignalingClass13addConnectionEthhPhttth+0x50>
    4a14:	88c5      	ldrh	r5, [r0, #6]
    4a16:	2d00      	cmp	r5, #0
    4a18:	d01a      	beq.n	4a50 <_ZN19L2CAPSignalingClass13addConnectionEthhPhttth+0x50>
    4a1a:	42b3      	cmp	r3, r6
    4a1c:	db01      	blt.n	4a22 <_ZN19L2CAPSignalingClass13addConnectionEthhPhttth+0x22>
    4a1e:	42ab      	cmp	r3, r5
    4a20:	dd16      	ble.n	4a50 <_ZN19L2CAPSignalingClass13addConnectionEthhPhttth+0x50>
    4a22:	ac03      	add	r4, sp, #12
    4a24:	220c      	movs	r2, #12
    4a26:	2100      	movs	r1, #0
    4a28:	0020      	movs	r0, r4
    4a2a:	f004 fafd 	bl	9028 <memset>
    4a2e:	2312      	movs	r3, #18
    4a30:	7023      	strb	r3, [r4, #0]
    4a32:	3b11      	subs	r3, #17
    4a34:	7063      	strb	r3, [r4, #1]
    4a36:	3307      	adds	r3, #7
    4a38:	8063      	strh	r3, [r4, #2]
    4a3a:	33c0      	adds	r3, #192	; 0xc0
    4a3c:	8163      	strh	r3, [r4, #10]
    4a3e:	80a6      	strh	r6, [r4, #4]
    4a40:	80e5      	strh	r5, [r4, #6]
    4a42:	3bbc      	subs	r3, #188	; 0xbc
    4a44:	9400      	str	r4, [sp, #0]
    4a46:	2205      	movs	r2, #5
    4a48:	0039      	movs	r1, r7
    4a4a:	4802      	ldr	r0, [pc, #8]	; (4a54 <_ZN19L2CAPSignalingClass13addConnectionEthhPhttth+0x54>)
    4a4c:	f7ff fc54 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    4a50:	b007      	add	sp, #28
    4a52:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4a54:	20000480 	.word	0x20000480

00004a58 <_ZN19L2CAPSignalingClass16removeConnectionEht>:
    4a58:	4770      	bx	lr
	...

00004a5c <_ZN19L2CAPSignalingClass32connectionParameterUpdateRequestEthhPh>:
    4a5c:	b5f0      	push	{r4, r5, r6, r7, lr}
    4a5e:	b087      	sub	sp, #28
    4a60:	0007      	movs	r7, r0
    4a62:	000e      	movs	r6, r1
    4a64:	9203      	str	r2, [sp, #12]
    4a66:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    4a68:	2b07      	cmp	r3, #7
    4a6a:	d941      	bls.n	4af0 <_ZN19L2CAPSignalingClass32connectionParameterUpdateRequestEthhPh+0x94>
    4a6c:	ad04      	add	r5, sp, #16
    4a6e:	2100      	movs	r1, #0
    4a70:	2206      	movs	r2, #6
    4a72:	0028      	movs	r0, r5
    4a74:	f004 fad8 	bl	9028 <memset>
    4a78:	2313      	movs	r3, #19
    4a7a:	702b      	strb	r3, [r5, #0]
    4a7c:	3b11      	subs	r3, #17
    4a7e:	806b      	strh	r3, [r5, #2]
    4a80:	466b      	mov	r3, sp
    4a82:	7b1b      	ldrb	r3, [r3, #12]
    4a84:	706b      	strb	r3, [r5, #1]
    4a86:	88b9      	ldrh	r1, [r7, #4]
    4a88:	2900      	cmp	r1, #0
    4a8a:	d010      	beq.n	4aae <_ZN19L2CAPSignalingClass32connectionParameterUpdateRequestEthhPh+0x52>
    4a8c:	88fa      	ldrh	r2, [r7, #6]
    4a8e:	2a00      	cmp	r2, #0
    4a90:	d00d      	beq.n	4aae <_ZN19L2CAPSignalingClass32connectionParameterUpdateRequestEthhPh+0x52>
    4a92:	7863      	ldrb	r3, [r4, #1]
    4a94:	7820      	ldrb	r0, [r4, #0]
    4a96:	021b      	lsls	r3, r3, #8
    4a98:	4303      	orrs	r3, r0
    4a9a:	428b      	cmp	r3, r1
    4a9c:	db05      	blt.n	4aaa <_ZN19L2CAPSignalingClass32connectionParameterUpdateRequestEthhPh+0x4e>
    4a9e:	78e3      	ldrb	r3, [r4, #3]
    4aa0:	78a1      	ldrb	r1, [r4, #2]
    4aa2:	021b      	lsls	r3, r3, #8
    4aa4:	430b      	orrs	r3, r1
    4aa6:	4293      	cmp	r3, r2
    4aa8:	dd01      	ble.n	4aae <_ZN19L2CAPSignalingClass32connectionParameterUpdateRequestEthhPh+0x52>
    4aaa:	2301      	movs	r3, #1
    4aac:	80ab      	strh	r3, [r5, #4]
    4aae:	4f11      	ldr	r7, [pc, #68]	; (4af4 <_ZN19L2CAPSignalingClass32connectionParameterUpdateRequestEthhPh+0x98>)
    4ab0:	2306      	movs	r3, #6
    4ab2:	9500      	str	r5, [sp, #0]
    4ab4:	2205      	movs	r2, #5
    4ab6:	0031      	movs	r1, r6
    4ab8:	0038      	movs	r0, r7
    4aba:	f7ff fc1d 	bl	42f8 <_ZN8HCIClass10sendAclPktEthhPv>
    4abe:	88ab      	ldrh	r3, [r5, #4]
    4ac0:	2b00      	cmp	r3, #0
    4ac2:	d115      	bne.n	4af0 <_ZN19L2CAPSignalingClass32connectionParameterUpdateRequestEthhPh+0x94>
    4ac4:	78e3      	ldrb	r3, [r4, #3]
    4ac6:	78a2      	ldrb	r2, [r4, #2]
    4ac8:	021b      	lsls	r3, r3, #8
    4aca:	4313      	orrs	r3, r2
    4acc:	7862      	ldrb	r2, [r4, #1]
    4ace:	7821      	ldrb	r1, [r4, #0]
    4ad0:	0212      	lsls	r2, r2, #8
    4ad2:	430a      	orrs	r2, r1
    4ad4:	79e1      	ldrb	r1, [r4, #7]
    4ad6:	79a0      	ldrb	r0, [r4, #6]
    4ad8:	0209      	lsls	r1, r1, #8
    4ada:	4301      	orrs	r1, r0
    4adc:	9101      	str	r1, [sp, #4]
    4ade:	7961      	ldrb	r1, [r4, #5]
    4ae0:	7920      	ldrb	r0, [r4, #4]
    4ae2:	0209      	lsls	r1, r1, #8
    4ae4:	4301      	orrs	r1, r0
    4ae6:	9100      	str	r1, [sp, #0]
    4ae8:	0038      	movs	r0, r7
    4aea:	0031      	movs	r1, r6
    4aec:	f7ff fed8 	bl	48a0 <_ZN8HCIClass12leConnUpdateEttttt>
    4af0:	b007      	add	sp, #28
    4af2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4af4:	20000480 	.word	0x20000480

00004af8 <_ZN19L2CAPSignalingClass10handleDataEthPh>:
    4af8:	b537      	push	{r0, r1, r2, r4, r5, lr}
    4afa:	2a03      	cmp	r2, #3
    4afc:	d910      	bls.n	4b20 <_ZN19L2CAPSignalingClass10handleDataEthPh+0x28>
    4afe:	78dc      	ldrb	r4, [r3, #3]
    4b00:	789d      	ldrb	r5, [r3, #2]
    4b02:	0224      	lsls	r4, r4, #8
    4b04:	432c      	orrs	r4, r5
    4b06:	1d25      	adds	r5, r4, #4
    4b08:	42aa      	cmp	r2, r5
    4b0a:	d109      	bne.n	4b20 <_ZN19L2CAPSignalingClass10handleDataEthPh+0x28>
    4b0c:	781a      	ldrb	r2, [r3, #0]
    4b0e:	2a12      	cmp	r2, #18
    4b10:	d106      	bne.n	4b20 <_ZN19L2CAPSignalingClass10handleDataEthPh+0x28>
    4b12:	785a      	ldrb	r2, [r3, #1]
    4b14:	b2e4      	uxtb	r4, r4
    4b16:	3304      	adds	r3, #4
    4b18:	9300      	str	r3, [sp, #0]
    4b1a:	0023      	movs	r3, r4
    4b1c:	f7ff ff9e 	bl	4a5c <_ZN19L2CAPSignalingClass32connectionParameterUpdateRequestEthhPh>
    4b20:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
	...

00004b24 <_GLOBAL__sub_I__ZN19L2CAPSignalingClassC2Ev>:
    4b24:	4b06      	ldr	r3, [pc, #24]	; (4b40 <_GLOBAL__sub_I__ZN19L2CAPSignalingClassC2Ev+0x1c>)
    4b26:	4807      	ldr	r0, [pc, #28]	; (4b44 <_GLOBAL__sub_I__ZN19L2CAPSignalingClassC2Ev+0x20>)
    4b28:	3308      	adds	r3, #8
    4b2a:	b510      	push	{r4, lr}
    4b2c:	6003      	str	r3, [r0, #0]
    4b2e:	2300      	movs	r3, #0
    4b30:	4a05      	ldr	r2, [pc, #20]	; (4b48 <_GLOBAL__sub_I__ZN19L2CAPSignalingClassC2Ev+0x24>)
    4b32:	4906      	ldr	r1, [pc, #24]	; (4b4c <_GLOBAL__sub_I__ZN19L2CAPSignalingClassC2Ev+0x28>)
    4b34:	8083      	strh	r3, [r0, #4]
    4b36:	80c3      	strh	r3, [r0, #6]
    4b38:	f002 faa6 	bl	7088 <__aeabi_atexit>
    4b3c:	bd10      	pop	{r4, pc}
    4b3e:	46c0      	nop			; (mov r8, r8)
    4b40:	0000b52c 	.word	0x0000b52c
    4b44:	200005ac 	.word	0x200005ac
    4b48:	20000000 	.word	0x20000000
    4b4c:	000049f1 	.word	0x000049f1

00004b50 <_ZN22BLETypedCharacteristicIhE10writeValueEh>:
  memset(&value, 0x00, sizeof(value));

  writeValue(value);
}

template<typename T> int BLETypedCharacteristic<T>::writeValue(T value)
    4b50:	b507      	push	{r0, r1, r2, lr}
    4b52:	466b      	mov	r3, sp
    4b54:	71d9      	strb	r1, [r3, #7]
    4b56:	3307      	adds	r3, #7
{
  return BLECharacteristic::writeValue((uint8_t*)&value, sizeof(T));
    4b58:	2201      	movs	r2, #1
    4b5a:	0019      	movs	r1, r3
    4b5c:	f7fd fb55 	bl	220a <_ZN17BLECharacteristic10writeValueEPKhi>
}
    4b60:	bd0e      	pop	{r1, r2, r3, pc}
	...

00004b64 <_Z21setup_battery_servicev>:
BLEUnsignedCharCharacteristic x_batteryLevelCharacteristic("2A19", BLERead | BLENotify);
int  x_lastBatteryLevel = 0;
long x_lastMillisec = 0;

void setup_battery_service()
{
    4b64:	b570      	push	{r4, r5, r6, lr}
    BLE.setLocalName("BatteryMonitor");
    4b66:	4c0e      	ldr	r4, [pc, #56]	; (4ba0 <_Z21setup_battery_servicev+0x3c>)
    4b68:	490e      	ldr	r1, [pc, #56]	; (4ba4 <_Z21setup_battery_servicev+0x40>)
    4b6a:	0020      	movs	r0, r4
    4b6c:	f7fd ffe6 	bl	2b3c <_ZN14BLELocalDevice12setLocalNameEPKc>
    BLE.setAdvertisedService(x_batteryService); // add the service UUID
    4b70:	4e0d      	ldr	r6, [pc, #52]	; (4ba8 <_Z21setup_battery_servicev+0x44>)
    4b72:	0020      	movs	r0, r4
    4b74:	0031      	movs	r1, r6
    4b76:	f7fd ffd5 	bl	2b24 <_ZN14BLELocalDevice20setAdvertisedServiceERK10BLEService>
    x_batteryService.addCharacteristic(x_batteryLevelCharacteristic); // add the battery level characteristic
    4b7a:	4d0c      	ldr	r5, [pc, #48]	; (4bac <_Z21setup_battery_servicev+0x48>)
    4b7c:	0030      	movs	r0, r6
    4b7e:	0029      	movs	r1, r5
    4b80:	f7fd fc5a 	bl	2438 <_ZN10BLEService17addCharacteristicER17BLECharacteristic>
    BLE.addService(x_batteryService); // add the battery service
    4b84:	0031      	movs	r1, r6
    4b86:	0020      	movs	r0, r4
    4b88:	f7fd ffe0 	bl	2b4c <_ZN14BLELocalDevice10addServiceER10BLEService>
    x_batteryLevelCharacteristic.writeValue(x_lastBatteryLevel); // set initial value for this characteristic
    4b8c:	4b08      	ldr	r3, [pc, #32]	; (4bb0 <_Z21setup_battery_servicev+0x4c>)
    4b8e:	0028      	movs	r0, r5
    4b90:	6819      	ldr	r1, [r3, #0]
    4b92:	b2c9      	uxtb	r1, r1
    4b94:	f7ff ffdc 	bl	4b50 <_ZN22BLETypedCharacteristicIhE10writeValueEh>
    BLE.advertise();
    4b98:	0020      	movs	r0, r4
    4b9a:	f7fd ffdf 	bl	2b5c <_ZN14BLELocalDevice9advertiseEv>
}
    4b9e:	bd70      	pop	{r4, r5, r6, pc}
    4ba0:	200002bc 	.word	0x200002bc
    4ba4:	0000b618 	.word	0x0000b618
    4ba8:	200005bc 	.word	0x200005bc
    4bac:	200005b4 	.word	0x200005b4
    4bb0:	200005cc 	.word	0x200005cc

00004bb4 <setup>:
    Serial.begin(9600);
    4bb4:	2196      	movs	r1, #150	; 0x96
{
    4bb6:	b510      	push	{r4, lr}
    Serial.begin(9600);
    4bb8:	4c0d      	ldr	r4, [pc, #52]	; (4bf0 <setup+0x3c>)
    4bba:	0189      	lsls	r1, r1, #6
    4bbc:	0020      	movs	r0, r4
    4bbe:	f000 fc31 	bl	5424 <_ZN7Serial_5beginEm>
    while (!Serial);
    4bc2:	0020      	movs	r0, r4
    4bc4:	f000 fc30 	bl	5428 <_ZN7Serial_cvbEv>
    4bc8:	2800      	cmp	r0, #0
    4bca:	d0fa      	beq.n	4bc2 <setup+0xe>
    if (!BLE.begin()) {
    4bcc:	4809      	ldr	r0, [pc, #36]	; (4bf4 <setup+0x40>)
    4bce:	f7fd ff4b 	bl	2a68 <_ZN14BLELocalDevice5beginEv>
    4bd2:	2800      	cmp	r0, #0
    4bd4:	d104      	bne.n	4be0 <setup+0x2c>
        Serial.println("starting BLE failed!");
    4bd6:	4908      	ldr	r1, [pc, #32]	; (4bf8 <setup+0x44>)
    4bd8:	0020      	movs	r0, r4
    4bda:	f000 fa1d 	bl	5018 <_ZN5Print7printlnEPKc>
    4bde:	e7fe      	b.n	4bde <setup+0x2a>
    setup_battery_service();
    4be0:	f7ff ffc0 	bl	4b64 <_Z21setup_battery_servicev>
    Serial.println("waiting for BLE connection");
    4be4:	4905      	ldr	r1, [pc, #20]	; (4bfc <setup+0x48>)
    4be6:	0020      	movs	r0, r4
    4be8:	f000 fa16 	bl	5018 <_ZN5Print7printlnEPKc>
}
    4bec:	bd10      	pop	{r4, pc}
    4bee:	46c0      	nop			; (mov r8, r8)
    4bf0:	2000060c 	.word	0x2000060c
    4bf4:	200002bc 	.word	0x200002bc
    4bf8:	0000b65a 	.word	0x0000b65a
    4bfc:	0000b66f 	.word	0x0000b66f

00004c00 <_Z19run_battery_servicev>:

void run_battery_service()
{
    4c00:	b573      	push	{r0, r1, r4, r5, r6, lr}
    long currentMillisec = millis();
    4c02:	f000 f941 	bl	4e88 <millis>
    if ((currentMillisec - x_lastMillisec) >= 200) {
    4c06:	4a12      	ldr	r2, [pc, #72]	; (4c50 <_Z19run_battery_servicev+0x50>)
    4c08:	6813      	ldr	r3, [r2, #0]
    4c0a:	1ac3      	subs	r3, r0, r3
    4c0c:	2bc7      	cmp	r3, #199	; 0xc7
    4c0e:	dd1e      	ble.n	4c4e <_Z19run_battery_servicev+0x4e>
        x_lastMillisec = currentMillisec;
    4c10:	6010      	str	r0, [r2, #0]
        int battery = analogRead(A0);
    4c12:	200f      	movs	r0, #15
    4c14:	f001 fc54 	bl	64c0 <analogRead>
        int batteryLevel = map(battery, 0, 1023, 0, 100);
    4c18:	2364      	movs	r3, #100	; 0x64
    4c1a:	9300      	str	r3, [sp, #0]
    4c1c:	2300      	movs	r3, #0
    4c1e:	4a0d      	ldr	r2, [pc, #52]	; (4c54 <_Z19run_battery_servicev+0x54>)
    4c20:	0019      	movs	r1, r3
    4c22:	f001 fd8d 	bl	6740 <_Z3maplllll>
        if (batteryLevel != x_lastBatteryLevel) {
    4c26:	4d0c      	ldr	r5, [pc, #48]	; (4c58 <_Z19run_battery_servicev+0x58>)
        int batteryLevel = map(battery, 0, 1023, 0, 100);
    4c28:	0004      	movs	r4, r0
        if (batteryLevel != x_lastBatteryLevel) {
    4c2a:	682b      	ldr	r3, [r5, #0]
    4c2c:	4298      	cmp	r0, r3
    4c2e:	d00e      	beq.n	4c4e <_Z19run_battery_servicev+0x4e>
            Serial.print("battery level % is now: ");
    4c30:	4e0a      	ldr	r6, [pc, #40]	; (4c5c <_Z19run_battery_servicev+0x5c>)
    4c32:	490b      	ldr	r1, [pc, #44]	; (4c60 <_Z19run_battery_servicev+0x60>)
    4c34:	0030      	movs	r0, r6
    4c36:	f000 f9d4 	bl	4fe2 <_ZN5Print5printEPKc>
            Serial.println(batteryLevel);
    4c3a:	220a      	movs	r2, #10
    4c3c:	0021      	movs	r1, r4
    4c3e:	0030      	movs	r0, r6
    4c40:	f000 fa3f 	bl	50c2 <_ZN5Print7printlnEii>
            x_batteryLevelCharacteristic.writeValue(batteryLevel);
    4c44:	b2e1      	uxtb	r1, r4
    4c46:	4807      	ldr	r0, [pc, #28]	; (4c64 <_Z19run_battery_servicev+0x64>)
    4c48:	f7ff ff82 	bl	4b50 <_ZN22BLETypedCharacteristicIhE10writeValueEh>
            x_lastBatteryLevel = batteryLevel;
    4c4c:	602c      	str	r4, [r5, #0]
        }
    }
}
    4c4e:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
    4c50:	200005d0 	.word	0x200005d0
    4c54:	000003ff 	.word	0x000003ff
    4c58:	200005cc 	.word	0x200005cc
    4c5c:	2000060c 	.word	0x2000060c
    4c60:	0000b5ff 	.word	0x0000b5ff
    4c64:	200005b4 	.word	0x200005b4

00004c68 <_GLOBAL__sub_I_setup>:
        } else {
            Serial.println("LED off");
            digitalWrite(x_ledPin, LOW);
        }
    }
}
    4c68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
BLEService x_batteryService("180F");
    4c6a:	4d31      	ldr	r5, [pc, #196]	; (4d30 <_GLOBAL__sub_I_setup+0xc8>)
    4c6c:	4931      	ldr	r1, [pc, #196]	; (4d34 <_GLOBAL__sub_I_setup+0xcc>)
    4c6e:	0028      	movs	r0, r5
    4c70:	f7fd fbc6 	bl	2400 <_ZN10BLEServiceC1EPKc>
    4c74:	4c30      	ldr	r4, [pc, #192]	; (4d38 <_GLOBAL__sub_I_setup+0xd0>)
    4c76:	4e31      	ldr	r6, [pc, #196]	; (4d3c <_GLOBAL__sub_I_setup+0xd4>)
    4c78:	0022      	movs	r2, r4
    4c7a:	0031      	movs	r1, r6
    4c7c:	0028      	movs	r0, r5
    4c7e:	f002 fa03 	bl	7088 <__aeabi_atexit>
BLEUnsignedCharCharacteristic x_batteryLevelCharacteristic("2A19", BLERead | BLENotify);
    4c82:	4d2f      	ldr	r5, [pc, #188]	; (4d40 <_GLOBAL__sub_I_setup+0xd8>)
    4c84:	2212      	movs	r2, #18
    4c86:	492f      	ldr	r1, [pc, #188]	; (4d44 <_GLOBAL__sub_I_setup+0xdc>)
    4c88:	0028      	movs	r0, r5
    4c8a:	f7fd fc33 	bl	24f4 <_ZN29BLEUnsignedCharCharacteristicC1EPKch>
    4c8e:	0022      	movs	r2, r4
    4c90:	492d      	ldr	r1, [pc, #180]	; (4d48 <_GLOBAL__sub_I_setup+0xe0>)
    4c92:	0028      	movs	r0, r5
    4c94:	f002 f9f8 	bl	7088 <__aeabi_atexit>
BLEService x_ledCallbackService("19B10000-E8F2-537E-4F6C-D104768A1214");
    4c98:	4d2c      	ldr	r5, [pc, #176]	; (4d4c <_GLOBAL__sub_I_setup+0xe4>)
    4c9a:	492d      	ldr	r1, [pc, #180]	; (4d50 <_GLOBAL__sub_I_setup+0xe8>)
    4c9c:	0028      	movs	r0, r5
    4c9e:	f7fd fbaf 	bl	2400 <_ZN10BLEServiceC1EPKc>
    4ca2:	0022      	movs	r2, r4
    4ca4:	0031      	movs	r1, r6
    4ca6:	0028      	movs	r0, r5
    4ca8:	f002 f9ee 	bl	7088 <__aeabi_atexit>
BLEByteCharacteristic x_ledCallbackCaracteristic("19B10001-E8F2-537E-4F6C-D104768A1214", BLERead | BLEWrite);
    4cac:	4f29      	ldr	r7, [pc, #164]	; (4d54 <_GLOBAL__sub_I_setup+0xec>)
    4cae:	220a      	movs	r2, #10
    4cb0:	4929      	ldr	r1, [pc, #164]	; (4d58 <_GLOBAL__sub_I_setup+0xf0>)
    4cb2:	0038      	movs	r0, r7
    4cb4:	f7fd fc28 	bl	2508 <_ZN21BLEByteCharacteristicC1EPKch>
    4cb8:	4d28      	ldr	r5, [pc, #160]	; (4d5c <_GLOBAL__sub_I_setup+0xf4>)
    4cba:	0022      	movs	r2, r4
    4cbc:	0029      	movs	r1, r5
    4cbe:	0038      	movs	r0, r7
    4cc0:	f002 f9e2 	bl	7088 <__aeabi_atexit>
BLEService x_ledCntlService("19B10000-E8F2-537E-4F6C-D104768A1214");
    4cc4:	4f26      	ldr	r7, [pc, #152]	; (4d60 <_GLOBAL__sub_I_setup+0xf8>)
    4cc6:	4922      	ldr	r1, [pc, #136]	; (4d50 <_GLOBAL__sub_I_setup+0xe8>)
    4cc8:	0038      	movs	r0, r7
    4cca:	f7fd fb99 	bl	2400 <_ZN10BLEServiceC1EPKc>
    4cce:	0022      	movs	r2, r4
    4cd0:	0031      	movs	r1, r6
    4cd2:	0038      	movs	r0, r7
    4cd4:	f002 f9d8 	bl	7088 <__aeabi_atexit>
BLEByteCharacteristic x_ledSwitchCaracteristic("19B10001-E8F2-537E-4F6C-D104768A1214", BLERead | BLEWrite);
    4cd8:	4f22      	ldr	r7, [pc, #136]	; (4d64 <_GLOBAL__sub_I_setup+0xfc>)
    4cda:	220a      	movs	r2, #10
    4cdc:	491e      	ldr	r1, [pc, #120]	; (4d58 <_GLOBAL__sub_I_setup+0xf0>)
    4cde:	0038      	movs	r0, r7
    4ce0:	f7fd fc12 	bl	2508 <_ZN21BLEByteCharacteristicC1EPKch>
    4ce4:	0022      	movs	r2, r4
    4ce6:	0029      	movs	r1, r5
    4ce8:	0038      	movs	r0, r7
    4cea:	f002 f9cd 	bl	7088 <__aeabi_atexit>
BLEService x_ledService("19B10010-E8F2-537E-4F6C-D104768A1214"); // create service
    4cee:	4f1e      	ldr	r7, [pc, #120]	; (4d68 <_GLOBAL__sub_I_setup+0x100>)
    4cf0:	491e      	ldr	r1, [pc, #120]	; (4d6c <_GLOBAL__sub_I_setup+0x104>)
    4cf2:	0038      	movs	r0, r7
    4cf4:	f7fd fb84 	bl	2400 <_ZN10BLEServiceC1EPKc>
    4cf8:	0022      	movs	r2, r4
    4cfa:	0031      	movs	r1, r6
    4cfc:	0038      	movs	r0, r7
    4cfe:	f002 f9c3 	bl	7088 <__aeabi_atexit>
BLEByteCharacteristic x_ledCharacteristic("19B10011-E8F2-537E-4F6C-D104768A1214", BLERead | BLEWrite);
    4d02:	4e1b      	ldr	r6, [pc, #108]	; (4d70 <_GLOBAL__sub_I_setup+0x108>)
    4d04:	220a      	movs	r2, #10
    4d06:	491b      	ldr	r1, [pc, #108]	; (4d74 <_GLOBAL__sub_I_setup+0x10c>)
    4d08:	0030      	movs	r0, r6
    4d0a:	f7fd fbfd 	bl	2508 <_ZN21BLEByteCharacteristicC1EPKch>
    4d0e:	0029      	movs	r1, r5
    4d10:	0022      	movs	r2, r4
    4d12:	0030      	movs	r0, r6
    4d14:	f002 f9b8 	bl	7088 <__aeabi_atexit>
BLEByteCharacteristic x_buttonCharacteristic("19B10012-E8F2-537E-4F6C-D104768A1214", BLERead | BLENotify);
    4d18:	4e17      	ldr	r6, [pc, #92]	; (4d78 <_GLOBAL__sub_I_setup+0x110>)
    4d1a:	2212      	movs	r2, #18
    4d1c:	0030      	movs	r0, r6
    4d1e:	4917      	ldr	r1, [pc, #92]	; (4d7c <_GLOBAL__sub_I_setup+0x114>)
    4d20:	f7fd fbf2 	bl	2508 <_ZN21BLEByteCharacteristicC1EPKch>
    4d24:	0029      	movs	r1, r5
    4d26:	0030      	movs	r0, r6
    4d28:	0022      	movs	r2, r4
    4d2a:	f002 f9ad 	bl	7088 <__aeabi_atexit>
}
    4d2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4d30:	200005bc 	.word	0x200005bc
    4d34:	0000b53c 	.word	0x0000b53c
    4d38:	20000000 	.word	0x20000000
    4d3c:	000023a1 	.word	0x000023a1
    4d40:	200005b4 	.word	0x200005b4
    4d44:	0000b541 	.word	0x0000b541
    4d48:	00002475 	.word	0x00002475
    4d4c:	200005dc 	.word	0x200005dc
    4d50:	0000b546 	.word	0x0000b546
    4d54:	200005d4 	.word	0x200005d4
    4d58:	0000b56b 	.word	0x0000b56b
    4d5c:	0000249d 	.word	0x0000249d
    4d60:	200005ec 	.word	0x200005ec
    4d64:	200005fc 	.word	0x200005fc
    4d68:	200005f4 	.word	0x200005f4
    4d6c:	0000b590 	.word	0x0000b590
    4d70:	200005e4 	.word	0x200005e4
    4d74:	0000b5b5 	.word	0x0000b5b5
    4d78:	200005c4 	.word	0x200005c4
    4d7c:	0000b5da 	.word	0x0000b5da

00004d80 <loop>:
{
    4d80:	b510      	push	{r4, lr}
    4d82:	b086      	sub	sp, #24
    BLEDevice central = BLE.central();
    4d84:	4668      	mov	r0, sp
    4d86:	491a      	ldr	r1, [pc, #104]	; (4df0 <loop+0x70>)
    4d88:	f7fd fef0 	bl	2b6c <_ZN14BLELocalDevice7centralEv>
    if (central) {
    4d8c:	4668      	mov	r0, sp
    4d8e:	f7fd fa97 	bl	22c0 <_ZNK9BLEDevicecvbEv>
    4d92:	2800      	cmp	r0, #0
    4d94:	d026      	beq.n	4de4 <loop+0x64>
        Serial.print("connected to central: ");
    4d96:	4c17      	ldr	r4, [pc, #92]	; (4df4 <loop+0x74>)
    4d98:	4917      	ldr	r1, [pc, #92]	; (4df8 <loop+0x78>)
    4d9a:	0020      	movs	r0, r4
    4d9c:	f000 f921 	bl	4fe2 <_ZN5Print5printEPKc>
        Serial.println(central.address());
    4da0:	4669      	mov	r1, sp
    4da2:	a803      	add	r0, sp, #12
    4da4:	f7fd fa64 	bl	2270 <_ZNK9BLEDevice7addressEv>
    4da8:	a903      	add	r1, sp, #12
    4daa:	0020      	movs	r0, r4
    4dac:	f000 f92a 	bl	5004 <_ZN5Print7printlnERK6String>
    4db0:	a803      	add	r0, sp, #12
    4db2:	f001 fcd0 	bl	6756 <_ZN6StringD1Ev>
        while (central.connected())
    4db6:	4668      	mov	r0, sp
    4db8:	f7fd faaa 	bl	2310 <_ZNK9BLEDevice9connectedEv>
    4dbc:	2800      	cmp	r0, #0
    4dbe:	d002      	beq.n	4dc6 <loop+0x46>
            run_battery_service();
    4dc0:	f7ff ff1e 	bl	4c00 <_Z19run_battery_servicev>
        while (central.connected())
    4dc4:	e7f7      	b.n	4db6 <loop+0x36>
        Serial.print("disconnected from central: ");
    4dc6:	490d      	ldr	r1, [pc, #52]	; (4dfc <loop+0x7c>)
    4dc8:	0020      	movs	r0, r4
    4dca:	f000 f90a 	bl	4fe2 <_ZN5Print5printEPKc>
        Serial.println(central.address());
    4dce:	4669      	mov	r1, sp
    4dd0:	a803      	add	r0, sp, #12
    4dd2:	f7fd fa4d 	bl	2270 <_ZNK9BLEDevice7addressEv>
    4dd6:	a903      	add	r1, sp, #12
    4dd8:	0020      	movs	r0, r4
    4dda:	f000 f913 	bl	5004 <_ZN5Print7printlnERK6String>
    4dde:	a803      	add	r0, sp, #12
    4de0:	f001 fcb9 	bl	6756 <_ZN6StringD1Ev>
    BLEDevice central = BLE.central();
    4de4:	4668      	mov	r0, sp
    4de6:	f7fd fa19 	bl	221c <_ZN9BLEDeviceD1Ev>
}
    4dea:	b006      	add	sp, #24
    4dec:	bd10      	pop	{r4, pc}
    4dee:	46c0      	nop			; (mov r8, r8)
    4df0:	200002bc 	.word	0x200002bc
    4df4:	2000060c 	.word	0x2000060c
    4df8:	0000b627 	.word	0x0000b627
    4dfc:	0000b63e 	.word	0x0000b63e

00004e00 <Dummy_Handler>:

/* Default empty handler */
void Dummy_Handler(void)
{
#if defined DEBUG
  __BKPT(3);
    4e00:	be03      	bkpt	0x0003
    4e02:	e7fe      	b.n	4e02 <Dummy_Handler+0x2>

00004e04 <USB_Handler>:

static void (*usb_isr)(void) = NULL;

void USB_Handler(void)
{
  if (usb_isr)
    4e04:	4b03      	ldr	r3, [pc, #12]	; (4e14 <USB_Handler+0x10>)
{
    4e06:	b510      	push	{r4, lr}
  if (usb_isr)
    4e08:	681b      	ldr	r3, [r3, #0]
    4e0a:	2b00      	cmp	r3, #0
    4e0c:	d000      	beq.n	4e10 <USB_Handler+0xc>
    usb_isr();
    4e0e:	4798      	blx	r3
}
    4e10:	bd10      	pop	{r4, pc}
    4e12:	46c0      	nop			; (mov r8, r8)
    4e14:	20000604 	.word	0x20000604

00004e18 <Reset_Handler>:
{
    4e18:	b570      	push	{r4, r5, r6, lr}
  if ((&__data_start__ != &__data_end__) && (pSrc != pDest)) {
    4e1a:	490f      	ldr	r1, [pc, #60]	; (4e58 <Reset_Handler+0x40>)
    4e1c:	4c0f      	ldr	r4, [pc, #60]	; (4e5c <Reset_Handler+0x44>)
    4e1e:	42a1      	cmp	r1, r4
    4e20:	d104      	bne.n	4e2c <Reset_Handler+0x14>
  SystemInit();
    4e22:	f000 f9bd 	bl	51a0 <SystemInit>
  main();
    4e26:	f000 f88b 	bl	4f40 <main>
    4e2a:	e7fe      	b.n	4e2a <Reset_Handler+0x12>
  if ((&__data_start__ != &__data_end__) && (pSrc != pDest)) {
    4e2c:	4d0c      	ldr	r5, [pc, #48]	; (4e60 <Reset_Handler+0x48>)
    4e2e:	2300      	movs	r3, #0
    4e30:	428d      	cmp	r5, r1
    4e32:	d0f6      	beq.n	4e22 <Reset_Handler+0xa>
    4e34:	18ca      	adds	r2, r1, r3
    4e36:	18e8      	adds	r0, r5, r3
    for (; pDest < &__data_end__; pDest++, pSrc++)
    4e38:	42a2      	cmp	r2, r4
    4e3a:	d305      	bcc.n	4e48 <Reset_Handler+0x30>
  if ((&__data_start__ != &__data_end__) && (pSrc != pDest)) {
    4e3c:	4290      	cmp	r0, r2
    4e3e:	d0f0      	beq.n	4e22 <Reset_Handler+0xa>
    4e40:	4b08      	ldr	r3, [pc, #32]	; (4e64 <Reset_Handler+0x4c>)
    for (pDest = &__bss_start__; pDest < &__bss_end__; pDest++)
    4e42:	4909      	ldr	r1, [pc, #36]	; (4e68 <Reset_Handler+0x50>)
      *pDest = 0;
    4e44:	2200      	movs	r2, #0
    4e46:	e004      	b.n	4e52 <Reset_Handler+0x3a>
      *pDest = *pSrc;
    4e48:	6800      	ldr	r0, [r0, #0]
    4e4a:	3304      	adds	r3, #4
    4e4c:	6010      	str	r0, [r2, #0]
    4e4e:	e7f1      	b.n	4e34 <Reset_Handler+0x1c>
      *pDest = 0;
    4e50:	c304      	stmia	r3!, {r2}
    for (pDest = &__bss_start__; pDest < &__bss_end__; pDest++)
    4e52:	428b      	cmp	r3, r1
    4e54:	d3fc      	bcc.n	4e50 <Reset_Handler+0x38>
    4e56:	e7e4      	b.n	4e22 <Reset_Handler+0xa>
    4e58:	20000000 	.word	0x20000000
    4e5c:	200002a0 	.word	0x200002a0
    4e60:	0000bd7c 	.word	0x0000bd7c
    4e64:	200002a0 	.word	0x200002a0
    4e68:	20001090 	.word	0x20001090

00004e6c <SysTick_Handler>:
{
    4e6c:	b510      	push	{r4, lr}
  if (sysTickHook())
    4e6e:	f000 f864 	bl	4f3a <sysTickHook>
    4e72:	2800      	cmp	r0, #0
    4e74:	d101      	bne.n	4e7a <SysTick_Handler+0xe>
  SysTick_DefaultHandler();
    4e76:	f000 f855 	bl	4f24 <SysTick_DefaultHandler>
}
    4e7a:	bd10      	pop	{r4, pc}

00004e7c <USB_SetHandler>:

void USB_SetHandler(void (*new_usb_isr)(void))
{
  usb_isr = new_usb_isr;
    4e7c:	4b01      	ldr	r3, [pc, #4]	; (4e84 <USB_SetHandler+0x8>)
    4e7e:	6018      	str	r0, [r3, #0]
}
    4e80:	4770      	bx	lr
    4e82:	46c0      	nop			; (mov r8, r8)
    4e84:	20000604 	.word	0x20000604

00004e88 <millis>:
static volatile uint32_t _ulTickCount=0 ;

unsigned long millis( void )
{
// todo: ensure no interrupts
  return _ulTickCount ;
    4e88:	4b01      	ldr	r3, [pc, #4]	; (4e90 <millis+0x8>)
    4e8a:	6818      	ldr	r0, [r3, #0]
}
    4e8c:	4770      	bx	lr
    4e8e:	46c0      	nop			; (mov r8, r8)
    4e90:	20000608 	.word	0x20000608

00004e94 <micros>:
// Interrupt-compatible version of micros
// Theory: repeatedly take readings of SysTick counter, millis counter and SysTick interrupt pending flag.
// When it appears that millis counter and pending is stable and SysTick hasn't rolled over, use these
// values to calculate micros. If there is a pending SysTick, add one to the millis counter in the calculation.
unsigned long micros( void )
{
    4e94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  uint32_t pend, pend2;
  uint32_t count, count2;

  ticks2  = SysTick->VAL;
  pend2   = !!(SCB->ICSR & SCB_ICSR_PENDSTSET_Msk)  ;
  count2  = _ulTickCount ;
    4e96:	4813      	ldr	r0, [pc, #76]	; (4ee4 <micros+0x50>)
  pend2   = !!(SCB->ICSR & SCB_ICSR_PENDSTSET_Msk)  ;
    4e98:	2201      	movs	r2, #1
  count2  = _ulTickCount ;
    4e9a:	4684      	mov	ip, r0
  ticks2  = SysTick->VAL;
    4e9c:	4912      	ldr	r1, [pc, #72]	; (4ee8 <micros+0x54>)
  pend2   = !!(SCB->ICSR & SCB_ICSR_PENDSTSET_Msk)  ;
    4e9e:	4c13      	ldr	r4, [pc, #76]	; (4eec <micros+0x58>)
  ticks2  = SysTick->VAL;
    4ea0:	688e      	ldr	r6, [r1, #8]
  pend2   = !!(SCB->ICSR & SCB_ICSR_PENDSTSET_Msk)  ;
    4ea2:	6863      	ldr	r3, [r4, #4]
  count2  = _ulTickCount ;
    4ea4:	6805      	ldr	r5, [r0, #0]
  pend2   = !!(SCB->ICSR & SCB_ICSR_PENDSTSET_Msk)  ;
    4ea6:	0e9b      	lsrs	r3, r3, #26
    4ea8:	4013      	ands	r3, r2
  {
    ticks=ticks2;
    pend=pend2;
    count=count2;
    ticks2  = SysTick->VAL;
    pend2   = !!(SCB->ICSR & SCB_ICSR_PENDSTSET_Msk)  ;
    4eaa:	9201      	str	r2, [sp, #4]
    ticks2  = SysTick->VAL;
    4eac:	6888      	ldr	r0, [r1, #8]
    pend2   = !!(SCB->ICSR & SCB_ICSR_PENDSTSET_Msk)  ;
    4eae:	6862      	ldr	r2, [r4, #4]
    4eb0:	9f01      	ldr	r7, [sp, #4]
    4eb2:	0e92      	lsrs	r2, r2, #26
    4eb4:	403a      	ands	r2, r7
    count2  = _ulTickCount ;
    4eb6:	4667      	mov	r7, ip
    4eb8:	683f      	ldr	r7, [r7, #0]
  } while ((pend != pend2) || (count != count2) || (ticks < ticks2));
    4eba:	4293      	cmp	r3, r2
    4ebc:	d10e      	bne.n	4edc <micros+0x48>
    4ebe:	42bd      	cmp	r5, r7
    4ec0:	d10c      	bne.n	4edc <micros+0x48>
    4ec2:	4286      	cmp	r6, r0
    4ec4:	d30a      	bcc.n	4edc <micros+0x48>

  return ((count+pend) * 1000) + (((SysTick->LOAD  - ticks)*(1048576/(VARIANT_MCK/1000000)))>>20) ;
    4ec6:	195b      	adds	r3, r3, r5
    4ec8:	25fa      	movs	r5, #250	; 0xfa
    4eca:	6848      	ldr	r0, [r1, #4]
    4ecc:	00ad      	lsls	r5, r5, #2
    4ece:	1b86      	subs	r6, r0, r6
    4ed0:	4807      	ldr	r0, [pc, #28]	; (4ef0 <micros+0x5c>)
    4ed2:	436b      	muls	r3, r5
    4ed4:	4370      	muls	r0, r6
    4ed6:	0d00      	lsrs	r0, r0, #20
    4ed8:	18c0      	adds	r0, r0, r3
  // this is an optimization to turn a runtime division into two compile-time divisions and
  // a runtime multiplication and shift, saving a few cycles
}
    4eda:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
{
    4edc:	003d      	movs	r5, r7
    4ede:	0013      	movs	r3, r2
    4ee0:	0006      	movs	r6, r0
    4ee2:	e7e3      	b.n	4eac <micros+0x18>
    4ee4:	20000608 	.word	0x20000608
    4ee8:	e000e010 	.word	0xe000e010
    4eec:	e000ed00 	.word	0xe000ed00
    4ef0:	00005555 	.word	0x00005555

00004ef4 <delay>:

void delay( unsigned long ms )
{
    4ef4:	b570      	push	{r4, r5, r6, lr}
    4ef6:	1e04      	subs	r4, r0, #0
  if (ms == 0)
    4ef8:	d010      	beq.n	4f1c <delay+0x28>
  {
    return;
  }

  uint32_t start = micros();
    4efa:	f7ff ffcb 	bl	4e94 <micros>
    4efe:	0005      	movs	r5, r0

  while (ms > 0)
  {
    yield();
    4f00:	f000 f81a 	bl	4f38 <yield>
    while (ms > 0 && (micros() - start) >= 1000)
    4f04:	f7ff ffc6 	bl	4e94 <micros>
    4f08:	4b05      	ldr	r3, [pc, #20]	; (4f20 <delay+0x2c>)
    4f0a:	1b40      	subs	r0, r0, r5
    4f0c:	4298      	cmp	r0, r3
    4f0e:	d9f7      	bls.n	4f00 <delay+0xc>
    {
      ms--;
      start += 1000;
    4f10:	23fa      	movs	r3, #250	; 0xfa
      ms--;
    4f12:	3c01      	subs	r4, #1
      start += 1000;
    4f14:	009b      	lsls	r3, r3, #2
    4f16:	18ed      	adds	r5, r5, r3
    while (ms > 0 && (micros() - start) >= 1000)
    4f18:	2c00      	cmp	r4, #0
    4f1a:	d1f3      	bne.n	4f04 <delay+0x10>
    }
  }
}
    4f1c:	bd70      	pop	{r4, r5, r6, pc}
    4f1e:	46c0      	nop			; (mov r8, r8)
    4f20:	000003e7 	.word	0x000003e7

00004f24 <SysTick_DefaultHandler>:

#include "Reset.h" // for tickReset()

void SysTick_DefaultHandler(void)
{
    4f24:	b510      	push	{r4, lr}
  // Increment tick count each ms
  _ulTickCount++;
    4f26:	4a03      	ldr	r2, [pc, #12]	; (4f34 <SysTick_DefaultHandler+0x10>)
    4f28:	6813      	ldr	r3, [r2, #0]
    4f2a:	3301      	adds	r3, #1
    4f2c:	6013      	str	r3, [r2, #0]
  tickReset();
    4f2e:	f000 f8fb 	bl	5128 <tickReset>
}
    4f32:	bd10      	pop	{r4, pc}
    4f34:	20000608 	.word	0x20000608

00004f38 <yield>:
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
	// Empty
}
    4f38:	4770      	bx	lr

00004f3a <sysTickHook>:
 * handler provided by Arduino.
 */
static int __false() {
	// Return false
	return 0;
}
    4f3a:	2000      	movs	r0, #0
    4f3c:	4770      	bx	lr
	...

00004f40 <main>:

/*
 * \brief Main entry point of Arduino application
 */
int main( void )
{
    4f40:	b510      	push	{r4, lr}
  init();
    4f42:	f001 fa09 	bl	6358 <init>

  __libc_init_array();
    4f46:	f003 fff7 	bl	8f38 <__libc_init_array>

  initVariant();
    4f4a:	f001 fc5f 	bl	680c <_Z11initVariantv>

  delay(1);
    4f4e:	2001      	movs	r0, #1
    4f50:	f7ff ffd0 	bl	4ef4 <delay>
#if defined(USBCON)
  USBDevice.init();
    4f54:	4c08      	ldr	r4, [pc, #32]	; (4f78 <main+0x38>)
    4f56:	0020      	movs	r0, r4
    4f58:	f000 fce2 	bl	5920 <_ZN14USBDeviceClass4initEv>
  USBDevice.attach();
    4f5c:	0020      	movs	r0, r4
    4f5e:	f000 fd3f 	bl	59e0 <_ZN14USBDeviceClass6attachEv>
#endif

  setup();
    4f62:	f7ff fe27 	bl	4bb4 <setup>

  for (;;)
  {
    loop();
    4f66:	f7ff ff0b 	bl	4d80 <loop>
    if (serialEventRun) serialEventRun();
    4f6a:	4b04      	ldr	r3, [pc, #16]	; (4f7c <main+0x3c>)
    4f6c:	2b00      	cmp	r3, #0
    4f6e:	d0fa      	beq.n	4f66 <main+0x26>
    4f70:	e000      	b.n	4f74 <main+0x34>
    4f72:	bf00      	nop
    4f74:	e7f7      	b.n	4f66 <main+0x26>
    4f76:	46c0      	nop			; (mov r8, r8)
    4f78:	20000628 	.word	0x20000628
    4f7c:	00000000 	.word	0x00000000

00004f80 <_Znwj>:
    4f80:	b510      	push	{r4, lr}
    4f82:	f004 f801 	bl	8f88 <malloc>
    4f86:	bd10      	pop	{r4, pc}

00004f88 <_ZdlPv>:
    4f88:	b510      	push	{r4, lr}
    4f8a:	f004 f807 	bl	8f9c <free>
    4f8e:	bd10      	pop	{r4, pc}

00004f90 <_ZN5Print5writeEPKhj>:

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
    4f90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4f92:	0006      	movs	r6, r0
    4f94:	000d      	movs	r5, r1
    4f96:	000c      	movs	r4, r1
    4f98:	188b      	adds	r3, r1, r2
    4f9a:	9301      	str	r3, [sp, #4]
  size_t n = 0;
  while (size--) {
    4f9c:	9b01      	ldr	r3, [sp, #4]
    4f9e:	1b67      	subs	r7, r4, r5
    4fa0:	429c      	cmp	r4, r3
    4fa2:	d007      	beq.n	4fb4 <_ZN5Print5writeEPKhj+0x24>
    if (write(*buffer++)) n++;
    4fa4:	6833      	ldr	r3, [r6, #0]
    4fa6:	7821      	ldrb	r1, [r4, #0]
    4fa8:	681b      	ldr	r3, [r3, #0]
    4faa:	0030      	movs	r0, r6
    4fac:	4798      	blx	r3
    4fae:	3401      	adds	r4, #1
    4fb0:	2800      	cmp	r0, #0
    4fb2:	d1f3      	bne.n	4f9c <_ZN5Print5writeEPKhj+0xc>
    else break;
  }
  return n;
}
    4fb4:	0038      	movs	r0, r7
    4fb6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

00004fb8 <_ZN5Print5writeEPKc>:

    int getWriteError() { return write_error; }
    void clearWriteError() { setWriteError(0); }

    virtual size_t write(uint8_t) = 0;
    size_t write(const char *str) {
    4fb8:	b570      	push	{r4, r5, r6, lr}
    4fba:	0005      	movs	r5, r0
    4fbc:	000c      	movs	r4, r1
      if (str == NULL) return 0;
    4fbe:	1e08      	subs	r0, r1, #0
    4fc0:	d007      	beq.n	4fd2 <_ZN5Print5writeEPKc+0x1a>
      return write((const uint8_t *)str, strlen(str));
    4fc2:	f004 fd97 	bl	9af4 <strlen>
    4fc6:	682b      	ldr	r3, [r5, #0]
    4fc8:	0002      	movs	r2, r0
    4fca:	685b      	ldr	r3, [r3, #4]
    4fcc:	0021      	movs	r1, r4
    4fce:	0028      	movs	r0, r5
    4fd0:	4798      	blx	r3
    }
    4fd2:	bd70      	pop	{r4, r5, r6, pc}

00004fd4 <_ZN5Print5printERK6String>:
{
  return print(reinterpret_cast<const char *>(ifsh));
}

size_t Print::print(const String &s)
{
    4fd4:	b510      	push	{r4, lr}
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    4fd6:	6803      	ldr	r3, [r0, #0]
    4fd8:	688a      	ldr	r2, [r1, #8]
    4fda:	685b      	ldr	r3, [r3, #4]
    4fdc:	6809      	ldr	r1, [r1, #0]
    4fde:	4798      	blx	r3
  return write(s.c_str(), s.length());
}
    4fe0:	bd10      	pop	{r4, pc}

00004fe2 <_ZN5Print5printEPKc>:

size_t Print::print(const char str[])
{
    4fe2:	b510      	push	{r4, lr}
  return write(str);
    4fe4:	f7ff ffe8 	bl	4fb8 <_ZN5Print5writeEPKc>
}
    4fe8:	bd10      	pop	{r4, pc}

00004fea <_ZN5Print5printEc>:

size_t Print::print(char c)
{
    4fea:	b510      	push	{r4, lr}
  return write(c);
    4fec:	6803      	ldr	r3, [r0, #0]
    4fee:	681b      	ldr	r3, [r3, #0]
    4ff0:	4798      	blx	r3
}
    4ff2:	bd10      	pop	{r4, pc}

00004ff4 <_ZN5Print7printlnEv>:
{
  return x.printTo(*this);
}

size_t Print::println(void)
{
    4ff4:	b510      	push	{r4, lr}
  return write("\r\n");
    4ff6:	4902      	ldr	r1, [pc, #8]	; (5000 <_ZN5Print7printlnEv+0xc>)
    4ff8:	f7ff ffde 	bl	4fb8 <_ZN5Print5writeEPKc>
}
    4ffc:	bd10      	pop	{r4, pc}
    4ffe:	46c0      	nop			; (mov r8, r8)
    5000:	0000b68a 	.word	0x0000b68a

00005004 <_ZN5Print7printlnERK6String>:

size_t Print::println(const String &s)
{
    5004:	b570      	push	{r4, r5, r6, lr}
    5006:	0005      	movs	r5, r0
  size_t n = print(s);
    5008:	f7ff ffe4 	bl	4fd4 <_ZN5Print5printERK6String>
    500c:	0004      	movs	r4, r0
  n += println();
    500e:	0028      	movs	r0, r5
    5010:	f7ff fff0 	bl	4ff4 <_ZN5Print7printlnEv>
    5014:	1820      	adds	r0, r4, r0
  return n;
}
    5016:	bd70      	pop	{r4, r5, r6, pc}

00005018 <_ZN5Print7printlnEPKc>:

size_t Print::println(const char c[])
{
    5018:	b570      	push	{r4, r5, r6, lr}
    501a:	0004      	movs	r4, r0
  return write(str);
    501c:	f7ff ffcc 	bl	4fb8 <_ZN5Print5writeEPKc>
    5020:	0005      	movs	r5, r0
  size_t n = print(c);
  n += println();
    5022:	0020      	movs	r0, r4
    5024:	f7ff ffe6 	bl	4ff4 <_ZN5Print7printlnEv>
    5028:	1940      	adds	r0, r0, r5
  return n;
}
    502a:	bd70      	pop	{r4, r5, r6, pc}

0000502c <_ZN5Print11printNumberEmh>:
}

// Private Methods /////////////////////////////////////////////////////////////

size_t Print::printNumber(unsigned long n, uint8_t base)
{
    502c:	b5f0      	push	{r4, r5, r6, r7, lr}
    502e:	0016      	movs	r6, r2
  char buf[8 * sizeof(long) + 1]; // Assumes 8-bit chars plus zero byte.
  char *str = &buf[sizeof(buf) - 1];

  *str = '\0';
    5030:	2200      	movs	r2, #0
{
    5032:	b08d      	sub	sp, #52	; 0x34
  *str = '\0';
    5034:	ab02      	add	r3, sp, #8
    5036:	3305      	adds	r3, #5
{
    5038:	9001      	str	r0, [sp, #4]
    503a:	000d      	movs	r5, r1
  *str = '\0';
    503c:	77da      	strb	r2, [r3, #31]

  // prevent crash if called with base == 1
  if (base < 2) base = 10;
    503e:	2e01      	cmp	r6, #1
    5040:	dc00      	bgt.n	5044 <_ZN5Print11printNumberEmh+0x18>
    5042:	260a      	movs	r6, #10
    5044:	ac0b      	add	r4, sp, #44	; 0x2c

  do {
    char c = n % base;
    5046:	0028      	movs	r0, r5
    5048:	0031      	movs	r1, r6
    504a:	f002 f8b5 	bl	71b8 <__aeabi_uidivmod>
    504e:	000f      	movs	r7, r1
    5050:	b2cb      	uxtb	r3, r1
    n /= base;
    5052:	0028      	movs	r0, r5
    5054:	0031      	movs	r1, r6
    char c = n % base;
    5056:	9300      	str	r3, [sp, #0]
    n /= base;
    5058:	f002 f828 	bl	70ac <__udivsi3>

    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    505c:	b2fb      	uxtb	r3, r7
    505e:	3337      	adds	r3, #55	; 0x37
    n /= base;
    5060:	0005      	movs	r5, r0
    *--str = c < 10 ? c + '0' : c + 'A' - 10;
    5062:	3c01      	subs	r4, #1
    5064:	b2db      	uxtb	r3, r3
    5066:	2f09      	cmp	r7, #9
    5068:	d802      	bhi.n	5070 <_ZN5Print11printNumberEmh+0x44>
    506a:	9b00      	ldr	r3, [sp, #0]
    506c:	3330      	adds	r3, #48	; 0x30
    506e:	b2db      	uxtb	r3, r3
    5070:	7023      	strb	r3, [r4, #0]
  } while(n);
    5072:	2d00      	cmp	r5, #0
    5074:	d1e7      	bne.n	5046 <_ZN5Print11printNumberEmh+0x1a>

  return write(str);
    5076:	0021      	movs	r1, r4
    5078:	9801      	ldr	r0, [sp, #4]
    507a:	f7ff ff9d 	bl	4fb8 <_ZN5Print5writeEPKc>
}
    507e:	b00d      	add	sp, #52	; 0x34
    5080:	bdf0      	pop	{r4, r5, r6, r7, pc}

00005082 <_ZN5Print5printEli>:
{
    5082:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5084:	0006      	movs	r6, r0
    5086:	000c      	movs	r4, r1
    5088:	1e15      	subs	r5, r2, #0
  if (base == 0) {
    508a:	d104      	bne.n	5096 <_ZN5Print5printEli+0x14>
    return write(n);
    508c:	6803      	ldr	r3, [r0, #0]
    508e:	b2c9      	uxtb	r1, r1
    5090:	681b      	ldr	r3, [r3, #0]
    5092:	4798      	blx	r3
}
    5094:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return printNumber(n, base);
    5096:	b2d2      	uxtb	r2, r2
  } else if (base == 10) {
    5098:	2d0a      	cmp	r5, #10
    509a:	d10d      	bne.n	50b8 <_ZN5Print5printEli+0x36>
    return printNumber(n, 10);
    509c:	002a      	movs	r2, r5
    if (n < 0) {
    509e:	2900      	cmp	r1, #0
    50a0:	da0a      	bge.n	50b8 <_ZN5Print5printEli+0x36>
      int t = print('-');
    50a2:	212d      	movs	r1, #45	; 0x2d
    50a4:	f7ff ffa1 	bl	4fea <_ZN5Print5printEc>
      n = -n;
    50a8:	4261      	negs	r1, r4
      int t = print('-');
    50aa:	0007      	movs	r7, r0
      return printNumber(n, 10) + t;
    50ac:	002a      	movs	r2, r5
    50ae:	0030      	movs	r0, r6
    50b0:	f7ff ffbc 	bl	502c <_ZN5Print11printNumberEmh>
    50b4:	1838      	adds	r0, r7, r0
    50b6:	e7ed      	b.n	5094 <_ZN5Print5printEli+0x12>
    return printNumber(n, base);
    50b8:	0021      	movs	r1, r4
    50ba:	0030      	movs	r0, r6
    50bc:	f7ff ffb6 	bl	502c <_ZN5Print11printNumberEmh>
    50c0:	e7e8      	b.n	5094 <_ZN5Print5printEli+0x12>

000050c2 <_ZN5Print7printlnEii>:
{
    50c2:	b570      	push	{r4, r5, r6, lr}
    50c4:	0004      	movs	r4, r0
  return print((long) n, base);
    50c6:	f7ff ffdc 	bl	5082 <_ZN5Print5printEli>
    50ca:	0005      	movs	r5, r0
  n += println();
    50cc:	0020      	movs	r0, r4
    50ce:	f7ff ff91 	bl	4ff4 <_ZN5Print7printlnEv>
    50d2:	1940      	adds	r0, r0, r5
}
    50d4:	bd70      	pop	{r4, r5, r6, pc}

000050d6 <_ZN5Print5printEmi>:
{
    50d6:	b510      	push	{r4, lr}
  if (base == 0) return write(n);
    50d8:	2a00      	cmp	r2, #0
    50da:	d104      	bne.n	50e6 <_ZN5Print5printEmi+0x10>
    50dc:	6803      	ldr	r3, [r0, #0]
    50de:	b2c9      	uxtb	r1, r1
    50e0:	681b      	ldr	r3, [r3, #0]
    50e2:	4798      	blx	r3
}
    50e4:	bd10      	pop	{r4, pc}
  else return printNumber(n, base);
    50e6:	b2d2      	uxtb	r2, r2
    50e8:	f7ff ffa0 	bl	502c <_ZN5Print11printNumberEmh>
    50ec:	e7fa      	b.n	50e4 <_ZN5Print5printEmi+0xe>

000050ee <_ZN5Print5printEhi>:
{
    50ee:	b510      	push	{r4, lr}
  return print((unsigned long) b, base);
    50f0:	f7ff fff1 	bl	50d6 <_ZN5Print5printEmi>
}
    50f4:	bd10      	pop	{r4, pc}

000050f6 <_ZN5Print7printlnEhi>:
{
    50f6:	b570      	push	{r4, r5, r6, lr}
    50f8:	0004      	movs	r4, r0
  return print((unsigned long) b, base);
    50fa:	f7ff ffec 	bl	50d6 <_ZN5Print5printEmi>
    50fe:	0005      	movs	r5, r0
  n += println();
    5100:	0020      	movs	r0, r4
    5102:	f7ff ff77 	bl	4ff4 <_ZN5Print7printlnEv>
    5106:	1940      	adds	r0, r0, r5
}
    5108:	bd70      	pop	{r4, r5, r6, pc}
	...

0000510c <initiateReset>:
}

static int ticks = -1;

void initiateReset(int _ticks) {
	ticks = _ticks;
    510c:	4b01      	ldr	r3, [pc, #4]	; (5114 <initiateReset+0x8>)
    510e:	6018      	str	r0, [r3, #0]
}
    5110:	4770      	bx	lr
    5112:	46c0      	nop			; (mov r8, r8)
    5114:	20000004 	.word	0x20000004

00005118 <cancelReset>:

void cancelReset() {
	ticks = -1;
    5118:	2201      	movs	r2, #1
    511a:	4b02      	ldr	r3, [pc, #8]	; (5124 <cancelReset+0xc>)
    511c:	4252      	negs	r2, r2
    511e:	601a      	str	r2, [r3, #0]
}
    5120:	4770      	bx	lr
    5122:	46c0      	nop			; (mov r8, r8)
    5124:	20000004 	.word	0x20000004

00005128 <tickReset>:

void tickReset() {
	if (ticks == -1)
    5128:	4a16      	ldr	r2, [pc, #88]	; (5184 <tickReset+0x5c>)
void tickReset() {
    512a:	b510      	push	{r4, lr}
	if (ticks == -1)
    512c:	6813      	ldr	r3, [r2, #0]
    512e:	1c59      	adds	r1, r3, #1
    5130:	d027      	beq.n	5182 <tickReset+0x5a>
		return;
	ticks--;
    5132:	3b01      	subs	r3, #1
    5134:	6013      	str	r3, [r2, #0]
	if (ticks == 0)
    5136:	2b00      	cmp	r3, #0
    5138:	d123      	bne.n	5182 <tickReset+0x5a>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    513a:	b672      	cpsid	i
	if (APP_START < (0x200 + 4)) {
    513c:	4b12      	ldr	r3, [pc, #72]	; (5188 <tickReset+0x60>)
    513e:	4a13      	ldr	r2, [pc, #76]	; (518c <tickReset+0x64>)
    5140:	3304      	adds	r3, #4
    5142:	4293      	cmp	r3, r2
    5144:	d808      	bhi.n	5158 <tickReset+0x30>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
    5146:	f3bf 8f4f 	dsb	sy
 */
__STATIC_INLINE void NVIC_SystemReset(void)
{
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
    514a:	4a11      	ldr	r2, [pc, #68]	; (5190 <tickReset+0x68>)
    514c:	4b11      	ldr	r3, [pc, #68]	; (5194 <tickReset+0x6c>)
    514e:	60da      	str	r2, [r3, #12]
    5150:	f3bf 8f4f 	dsb	sy
                 SCB_AIRCR_SYSRESETREQ_Msk);
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
    5154:	46c0      	nop			; (mov r8, r8)
    5156:	e7fd      	b.n	5154 <tickReset+0x2c>
        return NVMCTRL->INTFLAG.reg & NVMCTRL_INTFLAG_READY;
    5158:	4a0f      	ldr	r2, [pc, #60]	; (5198 <tickReset+0x70>)
	while (!nvmReady())
    515a:	2101      	movs	r1, #1
    515c:	0010      	movs	r0, r2
        return NVMCTRL->INTFLAG.reg & NVMCTRL_INTFLAG_READY;
    515e:	7d14      	ldrb	r4, [r2, #20]
	while (!nvmReady())
    5160:	420c      	tst	r4, r1
    5162:	d0fc      	beq.n	515e <tickReset+0x36>
	NVMCTRL->STATUS.reg |= NVMCTRL_STATUS_MASK;
    5164:	2120      	movs	r1, #32
    5166:	8b14      	ldrh	r4, [r2, #24]
    5168:	31ff      	adds	r1, #255	; 0xff
	NVMCTRL->ADDR.reg  = (uintptr_t)&NVM_MEMORY[APP_START / 4];
    516a:	089b      	lsrs	r3, r3, #2
    516c:	005b      	lsls	r3, r3, #1
	NVMCTRL->STATUS.reg |= NVMCTRL_STATUS_MASK;
    516e:	4321      	orrs	r1, r4
    5170:	8311      	strh	r1, [r2, #24]
	NVMCTRL->ADDR.reg  = (uintptr_t)&NVM_MEMORY[APP_START / 4];
    5172:	61d3      	str	r3, [r2, #28]
	NVMCTRL->CTRLA.reg = NVMCTRL_CTRLA_CMD_ER | NVMCTRL_CTRLA_CMDEX_KEY;
    5174:	4b09      	ldr	r3, [pc, #36]	; (519c <tickReset+0x74>)
    5176:	8013      	strh	r3, [r2, #0]
	while (!nvmReady())
    5178:	2301      	movs	r3, #1
        return NVMCTRL->INTFLAG.reg & NVMCTRL_INTFLAG_READY;
    517a:	7d02      	ldrb	r2, [r0, #20]
	while (!nvmReady())
    517c:	421a      	tst	r2, r3
    517e:	d0fc      	beq.n	517a <tickReset+0x52>
    5180:	e7e1      	b.n	5146 <tickReset+0x1e>
		banzai();
}
    5182:	bd10      	pop	{r4, pc}
    5184:	20000004 	.word	0x20000004
    5188:	00002000 	.word	0x00002000
    518c:	00000203 	.word	0x00000203
    5190:	05fa0004 	.word	0x05fa0004
    5194:	e000ed00 	.word	0xe000ed00
    5198:	41004000 	.word	0x41004000
    519c:	ffffa502 	.word	0xffffa502

000051a0 <SystemInit>:
#define GENERIC_CLOCK_MULTIPLEXER_DFLL48M (0u)

void SystemInit( void )
{
  /* Set 1 Flash Wait State for 48MHz, cf tables 20.9 and 35.27 in SAMD21 Datasheet */
  NVMCTRL->CTRLB.bit.RWS = NVMCTRL_CTRLB_RWS_HALF_Val ;
    51a0:	221e      	movs	r2, #30
{
    51a2:	b570      	push	{r4, r5, r6, lr}
  NVMCTRL->CTRLB.bit.RWS = NVMCTRL_CTRLB_RWS_HALF_Val ;
    51a4:	4846      	ldr	r0, [pc, #280]	; (52c0 <SystemInit+0x120>)

  /* Turn on the digital interface clock */
  PM->APBAMASK.reg |= PM_APBAMASK_GCLK ;
    51a6:	4947      	ldr	r1, [pc, #284]	; (52c4 <SystemInit+0x124>)
  NVMCTRL->CTRLB.bit.RWS = NVMCTRL_CTRLB_RWS_HALF_Val ;
    51a8:	6843      	ldr	r3, [r0, #4]
    51aa:	4393      	bics	r3, r2
    51ac:	3a1c      	subs	r2, #28
    51ae:	4313      	orrs	r3, r2
    51b0:	6043      	str	r3, [r0, #4]
  PM->APBAMASK.reg |= PM_APBAMASK_GCLK ;
    51b2:	2308      	movs	r3, #8
    51b4:	698c      	ldr	r4, [r1, #24]
    51b6:	4323      	orrs	r3, r4
    51b8:	618b      	str	r3, [r1, #24]
#else // has crystal

  /* ----------------------------------------------------------------------------------------------
   * 1) Enable XOSC32K clock (External on-board 32.768Hz oscillator)
   */
  SYSCTRL->XOSC32K.reg = SYSCTRL_XOSC32K_STARTUP( 0x6u ) | /* cf table 15.10 of product datasheet in chapter 15.8.6 */
    51ba:	4c43      	ldr	r4, [pc, #268]	; (52c8 <SystemInit+0x128>)
    51bc:	4b43      	ldr	r3, [pc, #268]	; (52cc <SystemInit+0x12c>)
    51be:	829c      	strh	r4, [r3, #20]
                         SYSCTRL_XOSC32K_XTALEN | SYSCTRL_XOSC32K_EN32K ;
  SYSCTRL->XOSC32K.bit.ENABLE = 1 ; /* separate call, as described in chapter 15.6.3 */
    51c0:	8a9c      	ldrh	r4, [r3, #20]
    51c2:	4314      	orrs	r4, r2
    51c4:	829c      	strh	r4, [r3, #20]

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_XOSC32KRDY) == 0 )
    51c6:	68dc      	ldr	r4, [r3, #12]
    51c8:	4214      	tst	r4, r2
    51ca:	d0fc      	beq.n	51c6 <SystemInit+0x26>

  /* Software reset the module to ensure it is re-initialized correctly */
  /* Note: Due to synchronization, there is a delay from writing CTRL.SWRST until the reset is complete.
   * CTRL.SWRST and STATUS.SYNCBUSY will both be cleared when the reset is complete, as described in chapter 13.8.1
   */
  GCLK->CTRL.reg = GCLK_CTRL_SWRST ;
    51cc:	2401      	movs	r4, #1
    51ce:	4a40      	ldr	r2, [pc, #256]	; (52d0 <SystemInit+0x130>)
    51d0:	7014      	strb	r4, [r2, #0]

  while ( (GCLK->CTRL.reg & GCLK_CTRL_SWRST) && (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY) )
    51d2:	7815      	ldrb	r5, [r2, #0]
    51d4:	4225      	tst	r5, r4
    51d6:	d003      	beq.n	51e0 <SystemInit+0x40>
    51d8:	7855      	ldrb	r5, [r2, #1]
    51da:	b26d      	sxtb	r5, r5
    51dc:	2d00      	cmp	r5, #0
    51de:	dbf8      	blt.n	51d2 <SystemInit+0x32>
  }

  /* ----------------------------------------------------------------------------------------------
   * 2) Put XOSC32K as source of Generic Clock Generator 1
   */
  GCLK->GENDIV.reg = GCLK_GENDIV_ID( GENERIC_CLOCK_GENERATOR_XOSC32K ) ; // Generic Clock Generator 1
    51e0:	2401      	movs	r4, #1
    51e2:	6094      	str	r4, [r2, #8]

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
    51e4:	7854      	ldrb	r4, [r2, #1]
    51e6:	b264      	sxtb	r4, r4
    51e8:	2c00      	cmp	r4, #0
    51ea:	dbfb      	blt.n	51e4 <SystemInit+0x44>
  {
    /* Wait for synchronization */
  }

  /* Write Generic Clock Generator 1 configuration */
  GCLK->GENCTRL.reg = GCLK_GENCTRL_ID( GENERIC_CLOCK_GENERATOR_OSC32K ) | // Generic Clock Generator 1
    51ec:	4c39      	ldr	r4, [pc, #228]	; (52d4 <SystemInit+0x134>)
    51ee:	6054      	str	r4, [r2, #4]
                      GCLK_GENCTRL_SRC_XOSC32K | // Selected source is External 32KHz Oscillator
#endif
//                      GCLK_GENCTRL_OE | // Output clock to a pin for tests
                      GCLK_GENCTRL_GENEN ;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
    51f0:	7854      	ldrb	r4, [r2, #1]
    51f2:	b264      	sxtb	r4, r4
    51f4:	2c00      	cmp	r4, #0
    51f6:	dbfb      	blt.n	51f0 <SystemInit+0x50>
  }

  /* ----------------------------------------------------------------------------------------------
   * 3) Put Generic Clock Generator 1 as source for Generic Clock Multiplexer 0 (DFLL48M reference)
   */
  GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID( GENERIC_CLOCK_MULTIPLEXER_DFLL48M ) | // Generic Clock Multiplexer 0
    51f8:	2482      	movs	r4, #130	; 0x82
    51fa:	01e4      	lsls	r4, r4, #7
    51fc:	8054      	strh	r4, [r2, #2]
                      GCLK_CLKCTRL_GEN_GCLK1 | // Generic Clock Generator 1 is source
                      GCLK_CLKCTRL_CLKEN ;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
    51fe:	7854      	ldrb	r4, [r2, #1]
    5200:	b264      	sxtb	r4, r4
    5202:	2c00      	cmp	r4, #0
    5204:	dbfb      	blt.n	51fe <SystemInit+0x5e>
   */

  /* DFLL Configuration in Closed Loop mode, cf product datasheet chapter 15.6.7.1 - Closed-Loop Operation */

  /* Remove the OnDemand mode, Bug http://avr32.icgroup.norway.atmel.com/bugzilla/show_bug.cgi?id=9905 */
  SYSCTRL->DFLLCTRL.reg = SYSCTRL_DFLLCTRL_ENABLE;
    5206:	2402      	movs	r4, #2
    5208:	849c      	strh	r4, [r3, #36]	; 0x24

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
    520a:	340e      	adds	r4, #14
    520c:	68dd      	ldr	r5, [r3, #12]
    520e:	4225      	tst	r5, r4
    5210:	d0fc      	beq.n	520c <SystemInit+0x6c>
  {
    /* Wait for synchronization */
  }

  SYSCTRL->DFLLMUL.reg = SYSCTRL_DFLLMUL_CSTEP( 31 ) | // Coarse step is 31, half of the max value
    5212:	4c31      	ldr	r4, [pc, #196]	; (52d8 <SystemInit+0x138>)
    5214:	62dc      	str	r4, [r3, #44]	; 0x2c
                         SYSCTRL_DFLLMUL_FSTEP( 511 ) | // Fine step is 511, half of the max value
                         SYSCTRL_DFLLMUL_MUL( (VARIANT_MCK + VARIANT_MAINOSC/2) / VARIANT_MAINOSC ) ; // External 32KHz is the reference

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
    5216:	2410      	movs	r4, #16
    5218:	68dd      	ldr	r5, [r3, #12]
    521a:	4225      	tst	r5, r4
    521c:	d0fc      	beq.n	5218 <SystemInit+0x78>
  SYSCTRL->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_ENABLE ;

#else   // has crystal

  /* Write full configuration to DFLL control register */
  SYSCTRL->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_MODE | /* Enable the closed loop mode */
    521e:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
    5220:	4c2e      	ldr	r4, [pc, #184]	; (52dc <SystemInit+0x13c>)
    5222:	432c      	orrs	r4, r5
    5224:	849c      	strh	r4, [r3, #36]	; 0x24
                           SYSCTRL_DFLLCTRL_WAITLOCK |
                           SYSCTRL_DFLLCTRL_QLDIS ; /* Disable Quick lock */

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
    5226:	2410      	movs	r4, #16
    5228:	68dd      	ldr	r5, [r3, #12]
    522a:	4225      	tst	r5, r4
    522c:	d0fc      	beq.n	5228 <SystemInit+0x88>
  {
    /* Wait for synchronization */
  }

  /* Enable the DFLL */
  SYSCTRL->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_ENABLE ;
    522e:	2402      	movs	r4, #2
    5230:	8c9d      	ldrh	r5, [r3, #36]	; 0x24

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKC) == 0 ||
    5232:	2680      	movs	r6, #128	; 0x80
  SYSCTRL->DFLLCTRL.reg |= SYSCTRL_DFLLCTRL_ENABLE ;
    5234:	432c      	orrs	r4, r5
    5236:	849c      	strh	r4, [r3, #36]	; 0x24
          (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKF) == 0 )
    5238:	2440      	movs	r4, #64	; 0x40
  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKC) == 0 ||
    523a:	68dd      	ldr	r5, [r3, #12]
    523c:	4235      	tst	r5, r6
    523e:	d0fc      	beq.n	523a <SystemInit+0x9a>
          (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKF) == 0 )
    5240:	68dd      	ldr	r5, [r3, #12]
  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLLCKC) == 0 ||
    5242:	4225      	tst	r5, r4
    5244:	d0f9      	beq.n	523a <SystemInit+0x9a>
    /* Wait for locks flags */
  }

#endif

  while ( (SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) == 0 )
    5246:	2410      	movs	r4, #16
    5248:	68dd      	ldr	r5, [r3, #12]
    524a:	4225      	tst	r5, r4
    524c:	d0fc      	beq.n	5248 <SystemInit+0xa8>
  }

  /* ----------------------------------------------------------------------------------------------
   * 5) Switch Generic Clock Generator 0 to DFLL48M. CPU will run at 48MHz.
   */
  GCLK->GENDIV.reg = GCLK_GENDIV_ID( GENERIC_CLOCK_GENERATOR_MAIN ) ; // Generic Clock Generator 0
    524e:	2400      	movs	r4, #0
    5250:	6094      	str	r4, [r2, #8]

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
    5252:	7854      	ldrb	r4, [r2, #1]
    5254:	b264      	sxtb	r4, r4
    5256:	2c00      	cmp	r4, #0
    5258:	dbfb      	blt.n	5252 <SystemInit+0xb2>
  {
    /* Wait for synchronization */
  }

  /* Write Generic Clock Generator 0 configuration */
  GCLK->GENCTRL.reg = GCLK_GENCTRL_ID( GENERIC_CLOCK_GENERATOR_MAIN ) | // Generic Clock Generator 0
    525a:	4c21      	ldr	r4, [pc, #132]	; (52e0 <SystemInit+0x140>)
    525c:	6054      	str	r4, [r2, #4]
                      GCLK_GENCTRL_SRC_DFLL48M | // Selected source is DFLL 48MHz
//                      GCLK_GENCTRL_OE | // Output clock to a pin for tests
                      GCLK_GENCTRL_IDC | // Set 50/50 duty cycle
                      GCLK_GENCTRL_GENEN ;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
    525e:	7854      	ldrb	r4, [r2, #1]
    5260:	b264      	sxtb	r4, r4
    5262:	2c00      	cmp	r4, #0
    5264:	dbfb      	blt.n	525e <SystemInit+0xbe>
  }

  /* ----------------------------------------------------------------------------------------------
   * 6) Modify PRESCaler value of OSC8M to have 8MHz
   */
  SYSCTRL->OSC8M.bit.PRESC = SYSCTRL_OSC8M_PRESC_0_Val ;  //CMSIS 4.5 changed the prescaler defines
    5266:	6a1c      	ldr	r4, [r3, #32]
    5268:	4d1e      	ldr	r5, [pc, #120]	; (52e4 <SystemInit+0x144>)
    526a:	402c      	ands	r4, r5
  SYSCTRL->OSC8M.bit.ONDEMAND = 0 ;
    526c:	2580      	movs	r5, #128	; 0x80
  SYSCTRL->OSC8M.bit.PRESC = SYSCTRL_OSC8M_PRESC_0_Val ;  //CMSIS 4.5 changed the prescaler defines
    526e:	621c      	str	r4, [r3, #32]
  SYSCTRL->OSC8M.bit.ONDEMAND = 0 ;
    5270:	6a1c      	ldr	r4, [r3, #32]
    5272:	43ac      	bics	r4, r5
    5274:	621c      	str	r4, [r3, #32]

  /* ----------------------------------------------------------------------------------------------
   * 7) Put OSC8M as source for Generic Clock Generator 3
   */
  GCLK->GENDIV.reg = GCLK_GENDIV_ID( GENERIC_CLOCK_GENERATOR_OSC8M ) ; // Generic Clock Generator 3
    5276:	2303      	movs	r3, #3
    5278:	6093      	str	r3, [r2, #8]

  /* Write Generic Clock Generator 3 configuration */
  GCLK->GENCTRL.reg = GCLK_GENCTRL_ID( GENERIC_CLOCK_GENERATOR_OSC8M ) | // Generic Clock Generator 3
    527a:	4b1b      	ldr	r3, [pc, #108]	; (52e8 <SystemInit+0x148>)
    527c:	6053      	str	r3, [r2, #4]
                      GCLK_GENCTRL_SRC_OSC8M | // Selected source is RC OSC 8MHz (already enabled at reset)
//                      GCLK_GENCTRL_OE | // Output clock to a pin for tests
                      GCLK_GENCTRL_GENEN ;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
    527e:	7853      	ldrb	r3, [r2, #1]
    5280:	b25b      	sxtb	r3, r3
    5282:	2b00      	cmp	r3, #0
    5284:	dbfb      	blt.n	527e <SystemInit+0xde>

  /*
   * Now that all system clocks are configured, we can set CPU and APBx BUS clocks.
   * There values are normally the one present after Reset.
   */
  PM->CPUSEL.reg  = PM_CPUSEL_CPUDIV_DIV1 ;
    5286:	2300      	movs	r3, #0

  // ADC Linearity bits 4:0
  uint32_t linearity = (*((uint32_t *) ADC_FUSES_LINEARITY_0_ADDR) & ADC_FUSES_LINEARITY_0_Msk) >> ADC_FUSES_LINEARITY_0_Pos;

  // ADC Linearity bits 7:5
  linearity |= ((*((uint32_t *) ADC_FUSES_LINEARITY_1_ADDR) & ADC_FUSES_LINEARITY_1_Msk) >> ADC_FUSES_LINEARITY_1_Pos) << 5;
    5288:	24ff      	movs	r4, #255	; 0xff
  PM->CPUSEL.reg  = PM_CPUSEL_CPUDIV_DIV1 ;
    528a:	720b      	strb	r3, [r1, #8]
  SystemCoreClock=VARIANT_MCK ;
    528c:	4a17      	ldr	r2, [pc, #92]	; (52ec <SystemInit+0x14c>)
  PM->APBASEL.reg = PM_APBASEL_APBADIV_DIV1_Val ;
    528e:	724b      	strb	r3, [r1, #9]
  PM->APBBSEL.reg = PM_APBBSEL_APBBDIV_DIV1_Val ;
    5290:	728b      	strb	r3, [r1, #10]
  PM->APBCSEL.reg = PM_APBCSEL_APBCDIV_DIV1_Val ;
    5292:	72cb      	strb	r3, [r1, #11]
  SystemCoreClock=VARIANT_MCK ;
    5294:	4b16      	ldr	r3, [pc, #88]	; (52f0 <SystemInit+0x150>)
    5296:	601a      	str	r2, [r3, #0]
  uint32_t bias = (*((uint32_t *) ADC_FUSES_BIASCAL_ADDR) & ADC_FUSES_BIASCAL_Msk) >> ADC_FUSES_BIASCAL_Pos;
    5298:	4b16      	ldr	r3, [pc, #88]	; (52f4 <SystemInit+0x154>)
  uint32_t linearity = (*((uint32_t *) ADC_FUSES_LINEARITY_0_ADDR) & ADC_FUSES_LINEARITY_0_Msk) >> ADC_FUSES_LINEARITY_0_Pos;
    529a:	4a17      	ldr	r2, [pc, #92]	; (52f8 <SystemInit+0x158>)
  uint32_t bias = (*((uint32_t *) ADC_FUSES_BIASCAL_ADDR) & ADC_FUSES_BIASCAL_Msk) >> ADC_FUSES_BIASCAL_Pos;
    529c:	681b      	ldr	r3, [r3, #0]
  uint32_t linearity = (*((uint32_t *) ADC_FUSES_LINEARITY_0_ADDR) & ADC_FUSES_LINEARITY_0_Msk) >> ADC_FUSES_LINEARITY_0_Pos;
    529e:	6811      	ldr	r1, [r2, #0]
  uint32_t bias = (*((uint32_t *) ADC_FUSES_BIASCAL_ADDR) & ADC_FUSES_BIASCAL_Msk) >> ADC_FUSES_BIASCAL_Pos;
    52a0:	069a      	lsls	r2, r3, #26
  linearity |= ((*((uint32_t *) ADC_FUSES_LINEARITY_1_ADDR) & ADC_FUSES_LINEARITY_1_Msk) >> ADC_FUSES_LINEARITY_1_Pos) << 5;
    52a2:	015b      	lsls	r3, r3, #5
  uint32_t linearity = (*((uint32_t *) ADC_FUSES_LINEARITY_0_ADDR) & ADC_FUSES_LINEARITY_0_Msk) >> ADC_FUSES_LINEARITY_0_Pos;
    52a4:	0ec9      	lsrs	r1, r1, #27
  linearity |= ((*((uint32_t *) ADC_FUSES_LINEARITY_1_ADDR) & ADC_FUSES_LINEARITY_1_Msk) >> ADC_FUSES_LINEARITY_1_Pos) << 5;
    52a6:	4023      	ands	r3, r4
  uint32_t bias = (*((uint32_t *) ADC_FUSES_BIASCAL_ADDR) & ADC_FUSES_BIASCAL_Msk) >> ADC_FUSES_BIASCAL_Pos;
    52a8:	0f52      	lsrs	r2, r2, #29

  ADC->CALIB.reg = ADC_CALIB_BIAS_CAL(bias) | ADC_CALIB_LINEARITY_CAL(linearity);
    52aa:	0212      	lsls	r2, r2, #8
  linearity |= ((*((uint32_t *) ADC_FUSES_LINEARITY_1_ADDR) & ADC_FUSES_LINEARITY_1_Msk) >> ADC_FUSES_LINEARITY_1_Pos) << 5;
    52ac:	430b      	orrs	r3, r1
  ADC->CALIB.reg = ADC_CALIB_BIAS_CAL(bias) | ADC_CALIB_LINEARITY_CAL(linearity);
    52ae:	4313      	orrs	r3, r2
    52b0:	4a12      	ldr	r2, [pc, #72]	; (52fc <SystemInit+0x15c>)
    52b2:	8513      	strh	r3, [r2, #40]	; 0x28

  /*
   * 9) Disable automatic NVM write operations
   */
  NVMCTRL->CTRLB.bit.MANW = 1;
    52b4:	2380      	movs	r3, #128	; 0x80
    52b6:	6842      	ldr	r2, [r0, #4]
    52b8:	4313      	orrs	r3, r2
    52ba:	6043      	str	r3, [r0, #4]
}
    52bc:	bd70      	pop	{r4, r5, r6, pc}
    52be:	46c0      	nop			; (mov r8, r8)
    52c0:	41004000 	.word	0x41004000
    52c4:	40000400 	.word	0x40000400
    52c8:	0000060c 	.word	0x0000060c
    52cc:	40000800 	.word	0x40000800
    52d0:	40000c00 	.word	0x40000c00
    52d4:	00010501 	.word	0x00010501
    52d8:	7dff05b9 	.word	0x7dff05b9
    52dc:	00000a04 	.word	0x00000a04
    52e0:	00030700 	.word	0x00030700
    52e4:	fffffcff 	.word	0xfffffcff
    52e8:	00010603 	.word	0x00010603
    52ec:	02dc6c00 	.word	0x02dc6c00
    52f0:	20000084 	.word	0x20000084
    52f4:	00806024 	.word	0x00806024
    52f8:	00806020 	.word	0x00806020
    52fc:	42004000 	.word	0x42004000

00005300 <_ZN7Serial_17availableForWriteEv>:
int Serial_::availableForWrite(void)
{
	// return the number of bytes left in the current bank,
	// always EP size - 1, because bank is flushed on every write
	return (EPX_SIZE - 1);
}
    5300:	203f      	movs	r0, #63	; 0x3f
    5302:	4770      	bx	lr

00005304 <_ZN7Serial_5writeEh>:
		setWriteError();
		return 0;
	}
}

size_t Serial_::write(uint8_t c) {
    5304:	b513      	push	{r0, r1, r4, lr}
    5306:	466b      	mov	r3, sp
	return write(&c, 1);
    5308:	6802      	ldr	r2, [r0, #0]
size_t Serial_::write(uint8_t c) {
    530a:	71d9      	strb	r1, [r3, #7]
    530c:	3307      	adds	r3, #7
	return write(&c, 1);
    530e:	6854      	ldr	r4, [r2, #4]
    5310:	0019      	movs	r1, r3
    5312:	2201      	movs	r2, #1
    5314:	47a0      	blx	r4
}
    5316:	bd16      	pop	{r1, r2, r4, pc}

00005318 <_ZN7Serial_9availableEv>:
{
    5318:	b510      	push	{r4, lr}
	return usb.available(CDC_ENDPOINT_OUT);
    531a:	2102      	movs	r1, #2
    531c:	6900      	ldr	r0, [r0, #16]
    531e:	f000 fc47 	bl	5bb0 <_ZN14USBDeviceClass9availableEm>
}
    5322:	bd10      	pop	{r4, pc}

00005324 <_ZN7Serial_5flushEv>:
{
    5324:	b510      	push	{r4, lr}
	usb.flush(CDC_ENDPOINT_IN);
    5326:	2103      	movs	r1, #3
    5328:	6900      	ldr	r0, [r0, #16]
    532a:	f000 fc57 	bl	5bdc <_ZN14USBDeviceClass5flushEm>
}
    532e:	bd10      	pop	{r4, pc}

00005330 <_ZN7Serial_5writeEPKhj>:
{
    5330:	b510      	push	{r4, lr}
    5332:	0013      	movs	r3, r2
    5334:	0004      	movs	r4, r0
	uint32_t r = usb.send(CDC_ENDPOINT_IN, buffer, size);
    5336:	000a      	movs	r2, r1
    5338:	6900      	ldr	r0, [r0, #16]
    533a:	2103      	movs	r1, #3
    533c:	f000 fd3a 	bl	5db4 <_ZN14USBDeviceClass4sendEmPKvm>
	if (r > 0) {
    5340:	2800      	cmp	r0, #0
    5342:	d101      	bne.n	5348 <_ZN7Serial_5writeEPKhj+0x18>
    void setWriteError(int err = 1) { write_error = err; }
    5344:	2301      	movs	r3, #1
    5346:	6063      	str	r3, [r4, #4]
}
    5348:	bd10      	pop	{r4, pc}
	...

0000534c <_ZN7Serial_4peekEv>:
{
    534c:	b510      	push	{r4, lr}
	if (_serialPeek != -1)
    534e:	4c05      	ldr	r4, [pc, #20]	; (5364 <_ZN7Serial_4peekEv+0x18>)
    5350:	6823      	ldr	r3, [r4, #0]
    5352:	1c5a      	adds	r2, r3, #1
    5354:	d104      	bne.n	5360 <_ZN7Serial_4peekEv+0x14>
	_serialPeek = read();
    5356:	6803      	ldr	r3, [r0, #0]
    5358:	695b      	ldr	r3, [r3, #20]
    535a:	4798      	blx	r3
    535c:	0003      	movs	r3, r0
    535e:	6020      	str	r0, [r4, #0]
}
    5360:	0018      	movs	r0, r3
    5362:	bd10      	pop	{r4, pc}
    5364:	20000058 	.word	0x20000058

00005368 <_ZN7Serial_4readEv>:
	if (_serialPeek != -1) {
    5368:	4b07      	ldr	r3, [pc, #28]	; (5388 <_ZN7Serial_4readEv+0x20>)
{
    536a:	0002      	movs	r2, r0
	if (_serialPeek != -1) {
    536c:	6818      	ldr	r0, [r3, #0]
{
    536e:	b510      	push	{r4, lr}
	if (_serialPeek != -1) {
    5370:	1c41      	adds	r1, r0, #1
    5372:	d003      	beq.n	537c <_ZN7Serial_4readEv+0x14>
		_serialPeek = -1;
    5374:	2201      	movs	r2, #1
    5376:	4252      	negs	r2, r2
    5378:	601a      	str	r2, [r3, #0]
}
    537a:	bd10      	pop	{r4, pc}
	return usb.recv(CDC_ENDPOINT_OUT);
    537c:	2102      	movs	r1, #2
    537e:	6910      	ldr	r0, [r2, #16]
    5380:	f000 fd0a 	bl	5d98 <_ZN14USBDeviceClass4recvEm>
    5384:	e7f9      	b.n	537a <_ZN7Serial_4readEv+0x12>
    5386:	46c0      	nop			; (mov r8, r8)
    5388:	20000058 	.word	0x20000058

0000538c <_Z16CDC_GetInterfacePh>:
{
    538c:	b510      	push	{r4, lr}
	interfaceNum[0] += 2;	// uses 2
    538e:	7803      	ldrb	r3, [r0, #0]
	return USBDevice.sendControl(&_cdcInterface,sizeof(_cdcInterface));
    5390:	2242      	movs	r2, #66	; 0x42
	interfaceNum[0] += 2;	// uses 2
    5392:	3302      	adds	r3, #2
    5394:	7003      	strb	r3, [r0, #0]
	return USBDevice.sendControl(&_cdcInterface,sizeof(_cdcInterface));
    5396:	4902      	ldr	r1, [pc, #8]	; (53a0 <_Z16CDC_GetInterfacePh+0x14>)
    5398:	4802      	ldr	r0, [pc, #8]	; (53a4 <_Z16CDC_GetInterfacePh+0x18>)
    539a:	f000 fdab 	bl	5ef4 <_ZN14USBDeviceClass11sendControlEPKvm>
}
    539e:	bd10      	pop	{r4, pc}
    53a0:	20000014 	.word	0x20000014
    53a4:	20000628 	.word	0x20000628

000053a8 <_Z9CDC_SetupR8USBSetup>:
{
    53a8:	b510      	push	{r4, lr}
	uint8_t requestType = setup.bmRequestType;
    53aa:	7801      	ldrb	r1, [r0, #0]
{
    53ac:	0003      	movs	r3, r0
	uint8_t r = setup.bRequest;
    53ae:	7842      	ldrb	r2, [r0, #1]
	return false;
    53b0:	2000      	movs	r0, #0
	if (requestType == REQUEST_DEVICETOHOST_CLASS_INTERFACE)
    53b2:	29a1      	cmp	r1, #161	; 0xa1
    53b4:	d108      	bne.n	53c8 <_Z9CDC_SetupR8USBSetup+0x20>
		if (r == CDC_GET_LINE_CODING)
    53b6:	2a21      	cmp	r2, #33	; 0x21
    53b8:	d105      	bne.n	53c6 <_Z9CDC_SetupR8USBSetup+0x1e>
			USBDevice.sendControl((void*)&_usbLineInfo, 7);
    53ba:	3a1a      	subs	r2, #26
    53bc:	4916      	ldr	r1, [pc, #88]	; (5418 <_Z9CDC_SetupR8USBSetup+0x70>)
    53be:	4817      	ldr	r0, [pc, #92]	; (541c <_Z9CDC_SetupR8USBSetup+0x74>)
    53c0:	f000 fd98 	bl	5ef4 <_ZN14USBDeviceClass11sendControlEPKvm>
			return true;
    53c4:	2001      	movs	r0, #1
}
    53c6:	bd10      	pop	{r4, pc}
	if (requestType == REQUEST_HOSTTODEVICE_CLASS_INTERFACE)
    53c8:	2921      	cmp	r1, #33	; 0x21
    53ca:	d1fc      	bne.n	53c6 <_Z9CDC_SetupR8USBSetup+0x1e>
		if (r == CDC_SET_LINE_CODING)
    53cc:	2a20      	cmp	r2, #32
    53ce:	d111      	bne.n	53f4 <_Z9CDC_SetupR8USBSetup+0x4c>
			USBDevice.recvControl((void*)&_usbLineInfo, 7);
    53d0:	3a19      	subs	r2, #25
    53d2:	4911      	ldr	r1, [pc, #68]	; (5418 <_Z9CDC_SetupR8USBSetup+0x70>)
    53d4:	4811      	ldr	r0, [pc, #68]	; (541c <_Z9CDC_SetupR8USBSetup+0x74>)
    53d6:	f000 fc45 	bl	5c64 <_ZN14USBDeviceClass11recvControlEPvm>
			if (_usbLineInfo.dwDTERate == 1200 && (_usbLineInfo.lineState & 0x01) == 0)
    53da:	2296      	movs	r2, #150	; 0x96
    53dc:	4b0e      	ldr	r3, [pc, #56]	; (5418 <_Z9CDC_SetupR8USBSetup+0x70>)
    53de:	00d2      	lsls	r2, r2, #3
    53e0:	6819      	ldr	r1, [r3, #0]
    53e2:	4291      	cmp	r1, r2
    53e4:	d103      	bne.n	53ee <_Z9CDC_SetupR8USBSetup+0x46>
    53e6:	2401      	movs	r4, #1
    53e8:	79d8      	ldrb	r0, [r3, #7]
    53ea:	4004      	ands	r4, r0
    53ec:	d00e      	beq.n	540c <_Z9CDC_SetupR8USBSetup+0x64>
				cancelReset();
    53ee:	f7ff fe93 	bl	5118 <cancelReset>
    53f2:	e00e      	b.n	5412 <_Z9CDC_SetupR8USBSetup+0x6a>
		if (r == CDC_SET_CONTROL_LINE_STATE)
    53f4:	2a22      	cmp	r2, #34	; 0x22
    53f6:	d103      	bne.n	5400 <_Z9CDC_SetupR8USBSetup+0x58>
			_usbLineInfo.lineState = setup.wValueL;
    53f8:	789a      	ldrb	r2, [r3, #2]
    53fa:	4b07      	ldr	r3, [pc, #28]	; (5418 <_Z9CDC_SetupR8USBSetup+0x70>)
    53fc:	71da      	strb	r2, [r3, #7]
    53fe:	e7ec      	b.n	53da <_Z9CDC_SetupR8USBSetup+0x32>
		if (CDC_SEND_BREAK == r)
    5400:	2a23      	cmp	r2, #35	; 0x23
    5402:	d1e0      	bne.n	53c6 <_Z9CDC_SetupR8USBSetup+0x1e>
			breakValue = ((uint16_t)setup.wValueH << 8) | setup.wValueL;
    5404:	885a      	ldrh	r2, [r3, #2]
    5406:	4b06      	ldr	r3, [pc, #24]	; (5420 <_Z9CDC_SetupR8USBSetup+0x78>)
    5408:	601a      	str	r2, [r3, #0]
			return false;
    540a:	e7dc      	b.n	53c6 <_Z9CDC_SetupR8USBSetup+0x1e>
				initiateReset(250);
    540c:	20fa      	movs	r0, #250	; 0xfa
    540e:	f7ff fe7d 	bl	510c <initiateReset>
			return false;
    5412:	2000      	movs	r0, #0
    5414:	e7d7      	b.n	53c6 <_Z9CDC_SetupR8USBSetup+0x1e>
    5416:	46c0      	nop			; (mov r8, r8)
    5418:	2000000c 	.word	0x2000000c
    541c:	20000628 	.word	0x20000628
    5420:	20000008 	.word	0x20000008

00005424 <_ZN7Serial_5beginEm>:
}
    5424:	4770      	bx	lr
	...

00005428 <_ZN7Serial_cvbEv>:
// setup() before printing to ensure that an application on the host is
// actually ready to receive and display the data.
// We add a short delay before returning to fix a bug observed by Federico
// where the port is configured (lineState != 0) but not quite opened.
Serial_::operator bool()
{
    5428:	b510      	push	{r4, lr}
	// this is here to avoid spurious opening after upload
	if (millis() < 500)
    542a:	f7ff fd2d 	bl	4e88 <millis>
    542e:	23f4      	movs	r3, #244	; 0xf4
    5430:	33ff      	adds	r3, #255	; 0xff
		return false;
    5432:	2400      	movs	r4, #0
	if (millis() < 500)
    5434:	4298      	cmp	r0, r3
    5436:	d907      	bls.n	5448 <_ZN7Serial_cvbEv+0x20>

	bool result = false;

	if (_usbLineInfo.lineState > 0)
    5438:	4b04      	ldr	r3, [pc, #16]	; (544c <_ZN7Serial_cvbEv+0x24>)
	{
		result = true;
	}

	delay(10);
    543a:	200a      	movs	r0, #10
	if (_usbLineInfo.lineState > 0)
    543c:	79dc      	ldrb	r4, [r3, #7]
    543e:	1e63      	subs	r3, r4, #1
    5440:	419c      	sbcs	r4, r3
    5442:	b2e4      	uxtb	r4, r4
	delay(10);
    5444:	f7ff fd56 	bl	4ef4 <delay>
	return result;
}
    5448:	0020      	movs	r0, r4
    544a:	bd10      	pop	{r4, pc}
    544c:	2000000c 	.word	0x2000000c

00005450 <_GLOBAL__sub_I__Z17_CDC_GetInterfacev>:
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    5450:	22fa      	movs	r2, #250	; 0xfa
    Print() : write_error(0) {}
    5452:	2100      	movs	r1, #0
    5454:	4b05      	ldr	r3, [pc, #20]	; (546c <_GLOBAL__sub_I__Z17_CDC_GetInterfacev+0x1c>)
    5456:	0092      	lsls	r2, r2, #2
    5458:	609a      	str	r2, [r3, #8]
//	Serial over CDC (Serial1 is the physical port)

class Serial_ : public Stream
{
public:
	Serial_(USBDeviceClass &_usb) : usb(_usb), stalled(false) { }
    545a:	4a05      	ldr	r2, [pc, #20]	; (5470 <_GLOBAL__sub_I__Z17_CDC_GetInterfacev+0x20>)
    545c:	6059      	str	r1, [r3, #4]
    545e:	3208      	adds	r2, #8
    5460:	601a      	str	r2, [r3, #0]
    5462:	4a04      	ldr	r2, [pc, #16]	; (5474 <_GLOBAL__sub_I__Z17_CDC_GetInterfacev+0x24>)
    5464:	7619      	strb	r1, [r3, #24]
    5466:	611a      	str	r2, [r3, #16]

bool Serial_::rts() {
	return _usbLineInfo.lineState & 0x2;
}

Serial_ SerialUSB(USBDevice);
    5468:	4770      	bx	lr
    546a:	46c0      	nop			; (mov r8, r8)
    546c:	2000060c 	.word	0x2000060c
    5470:	0000b690 	.word	0x0000b690
    5474:	20000628 	.word	0x20000628

00005478 <_ZL5utox8mPc>:
	packMessages(false);

	return true;
}

static void utox8(uint32_t val, char* s) {
    5478:	b530      	push	{r4, r5, lr}
	for (int i = 0; i < 8; i++) {
		int d = val & 0XF;
    547a:	250f      	movs	r5, #15
    547c:	1dcb      	adds	r3, r1, #7
    547e:	3901      	subs	r1, #1
    5480:	0002      	movs	r2, r0
    5482:	402a      	ands	r2, r5
		val = (val >> 4);

		s[7 - i] = d > 9 ? 'A' + d - 10 : '0' + d;
    5484:	0014      	movs	r4, r2
		val = (val >> 4);
    5486:	0900      	lsrs	r0, r0, #4
		s[7 - i] = d > 9 ? 'A' + d - 10 : '0' + d;
    5488:	3430      	adds	r4, #48	; 0x30
    548a:	2a09      	cmp	r2, #9
    548c:	dd01      	ble.n	5492 <_ZL5utox8mPc+0x1a>
    548e:	3237      	adds	r2, #55	; 0x37
    5490:	0014      	movs	r4, r2
    5492:	701c      	strb	r4, [r3, #0]
    5494:	3b01      	subs	r3, #1
	for (int i = 0; i < 8; i++) {
    5496:	428b      	cmp	r3, r1
    5498:	d1f2      	bne.n	5480 <_ZL5utox8mPc+0x8>
	}
}
    549a:	bd30      	pop	{r4, r5, pc}

0000549c <_ZN26DoubleBufferedEPOutHandlerD1Ev>:
		usbd.epBank0SetAddress(ep, const_cast<uint8_t *>(data0));

		release();
	}

	virtual ~DoubleBufferedEPOutHandler() {
    549c:	b510      	push	{r4, lr}
    549e:	0004      	movs	r4, r0
		free((void*)data0);
    54a0:	6980      	ldr	r0, [r0, #24]
    54a2:	f003 fd7b 	bl	8f9c <free>
		free((void*)data1);
    54a6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
    54a8:	f003 fd78 	bl	8f9c <free>
	}
    54ac:	0020      	movs	r0, r4
    54ae:	bd10      	pop	{r4, pc}

000054b0 <_ZN26DoubleBufferedEPOutHandlerD0Ev>:
	virtual ~DoubleBufferedEPOutHandler() {
    54b0:	b510      	push	{r4, lr}
    54b2:	0004      	movs	r4, r0
	}
    54b4:	f7ff fff2 	bl	549c <_ZN26DoubleBufferedEPOutHandlerD1Ev>
    54b8:	0020      	movs	r0, r4
    54ba:	f7ff fd65 	bl	4f88 <_ZdlPv>
    54be:	0020      	movs	r0, r4
    54c0:	bd10      	pop	{r4, pc}
	...

000054c4 <_ZN14USBDeviceClass6initEPEmm.part.5>:
	for (uint8_t i = 1; i < sizeof(EndPoints) && EndPoints[i] != 0; i++) {
		initEP(i, EndPoints[i]);
	}
}

void USBDeviceClass::initEP(uint32_t ep, uint32_t config)
    54c4:	b570      	push	{r4, r5, r6, lr}
		if (epHandlers[ep] != NULL) {
			delete (DoubleBufferedEPOutHandler*)epHandlers[ep];
		}
		epHandlers[ep] = new DoubleBufferedEPOutHandler(usbd, ep, 256);
	}
	else if (config == (USB_ENDPOINT_TYPE_BULK | USB_ENDPOINT_IN(0)))
    54c6:	2982      	cmp	r1, #130	; 0x82
    54c8:	d11f      	bne.n	550a <_ZN14USBDeviceClass6initEPEmm.part.5+0x46>
	inline void epBank1SetSize(ep_t ep, uint16_t size) { EP[ep].DeviceDescBank[1].PCKSIZE.bit.SIZE = EP_PCKSIZE_SIZE(size); }
    54ca:	b2c3      	uxtb	r3, r0
    54cc:	4d2c      	ldr	r5, [pc, #176]	; (5580 <_ZN14USBDeviceClass6initEPEmm.part.5+0xbc>)
    54ce:	015a      	lsls	r2, r3, #5
    54d0:	18aa      	adds	r2, r5, r2
    54d2:	6991      	ldr	r1, [r2, #24]
    54d4:	4c2b      	ldr	r4, [pc, #172]	; (5584 <_ZN14USBDeviceClass6initEPEmm.part.5+0xc0>)
	{
		usbd.epBank1SetSize(ep, 64);
		usbd.epBank1SetAddress(ep, &udd_ep_in_cache_buffer[ep]);
    54d6:	0180      	lsls	r0, r0, #6
    54d8:	400c      	ands	r4, r1
    54da:	21c0      	movs	r1, #192	; 0xc0
    54dc:	0589      	lsls	r1, r1, #22
    54de:	4321      	orrs	r1, r4
    54e0:	6191      	str	r1, [r2, #24]
    54e2:	4929      	ldr	r1, [pc, #164]	; (5588 <_ZN14USBDeviceClass6initEPEmm.part.5+0xc4>)
	inline void epBank1ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK1RDY = 1; }
    54e4:	3308      	adds	r3, #8
    54e6:	1808      	adds	r0, r1, r0
    54e8:	2180      	movs	r1, #128	; 0x80
	inline void epBank1SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[1].ADDR.reg = (uint32_t)addr; }
    54ea:	6150      	str	r0, [r2, #20]
	inline void epBank1ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK1RDY = 1; }
    54ec:	682a      	ldr	r2, [r5, #0]
    54ee:	015b      	lsls	r3, r3, #5
    54f0:	18d0      	adds	r0, r2, r3
    54f2:	7904      	ldrb	r4, [r0, #4]
    54f4:	4249      	negs	r1, r1
    54f6:	4321      	orrs	r1, r4
    54f8:	7101      	strb	r1, [r0, #4]
	inline void epBank1SetType(ep_t ep, uint8_t type) { usb.DeviceEndpoint[ep].EPCFG.bit.EPTYPE1 = type; }
    54fa:	2070      	movs	r0, #112	; 0x70
    54fc:	5c99      	ldrb	r1, [r3, r2]
    54fe:	4381      	bics	r1, r0
    5500:	0008      	movs	r0, r1
    5502:	2130      	movs	r1, #48	; 0x30
    5504:	4301      	orrs	r1, r0
    5506:	5499      	strb	r1, [r3, r2]
		usbd.epBank0SetByteCount(ep, 0);

		// NAK on endpoint OUT, the bank is full.
		usbd.epBank0SetReady(ep);
	}
}
    5508:	bd70      	pop	{r4, r5, r6, pc}
	else if (config == USB_ENDPOINT_TYPE_CONTROL)
    550a:	2900      	cmp	r1, #0
    550c:	d1fc      	bne.n	5508 <_ZN14USBDeviceClass6initEPEmm.part.5+0x44>
	inline void epBank0SetSize(ep_t ep, uint16_t size) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.SIZE = EP_PCKSIZE_SIZE(size); }
    550e:	24c0      	movs	r4, #192	; 0xc0
    5510:	b2c1      	uxtb	r1, r0
    5512:	4e1b      	ldr	r6, [pc, #108]	; (5580 <_ZN14USBDeviceClass6initEPEmm.part.5+0xbc>)
    5514:	014b      	lsls	r3, r1, #5
    5516:	18f3      	adds	r3, r6, r3
    5518:	689a      	ldr	r2, [r3, #8]
    551a:	4d1a      	ldr	r5, [pc, #104]	; (5584 <_ZN14USBDeviceClass6initEPEmm.part.5+0xc0>)
    551c:	05a4      	lsls	r4, r4, #22
    551e:	402a      	ands	r2, r5
    5520:	4322      	orrs	r2, r4
    5522:	609a      	str	r2, [r3, #8]
		usbd.epBank0SetAddress(ep, &udd_ep_out_cache_buffer[ep]);
    5524:	4a19      	ldr	r2, [pc, #100]	; (558c <_ZN14USBDeviceClass6initEPEmm.part.5+0xc8>)
    5526:	0180      	lsls	r0, r0, #6
    5528:	1810      	adds	r0, r2, r0
	inline void epBank0SetType(ep_t ep, uint8_t type) { usb.DeviceEndpoint[ep].EPCFG.bit.EPTYPE0 = type; }
    552a:	000a      	movs	r2, r1
	inline void epBank0SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[0].ADDR.reg = (uint32_t)addr; }
    552c:	6058      	str	r0, [r3, #4]
	inline void epBank0SetType(ep_t ep, uint8_t type) { usb.DeviceEndpoint[ep].EPCFG.bit.EPTYPE0 = type; }
    552e:	6830      	ldr	r0, [r6, #0]
    5530:	2607      	movs	r6, #7
    5532:	3208      	adds	r2, #8
    5534:	0152      	lsls	r2, r2, #5
    5536:	5c11      	ldrb	r1, [r2, r0]
    5538:	43b1      	bics	r1, r6
    553a:	000e      	movs	r6, r1
    553c:	2101      	movs	r1, #1
    553e:	4331      	orrs	r1, r6
    5540:	5411      	strb	r1, [r2, r0]
	inline void epBank1SetSize(ep_t ep, uint16_t size) { EP[ep].DeviceDescBank[1].PCKSIZE.bit.SIZE = EP_PCKSIZE_SIZE(size); }
    5542:	6999      	ldr	r1, [r3, #24]
    5544:	400d      	ands	r5, r1
    5546:	432c      	orrs	r4, r5
    5548:	619c      	str	r4, [r3, #24]
	inline void epBank1SetType(ep_t ep, uint8_t type) { usb.DeviceEndpoint[ep].EPCFG.bit.EPTYPE1 = type; }
    554a:	2470      	movs	r4, #112	; 0x70
	inline void epBank1SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[1].ADDR.reg = (uint32_t)addr; }
    554c:	490e      	ldr	r1, [pc, #56]	; (5588 <_ZN14USBDeviceClass6initEPEmm.part.5+0xc4>)
    554e:	6159      	str	r1, [r3, #20]
	inline void epBank1SetType(ep_t ep, uint8_t type) { usb.DeviceEndpoint[ep].EPCFG.bit.EPTYPE1 = type; }
    5550:	5c11      	ldrb	r1, [r2, r0]
    5552:	43a1      	bics	r1, r4
    5554:	000c      	movs	r4, r1
    5556:	2110      	movs	r1, #16
    5558:	4321      	orrs	r1, r4
    555a:	5411      	strb	r1, [r2, r0]
	inline void epBank0SetMultiPacketSize(ep_t ep, uint16_t s) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.MULTI_PACKET_SIZE = s; }
    555c:	6899      	ldr	r1, [r3, #8]
    555e:	4c0c      	ldr	r4, [pc, #48]	; (5590 <_ZN14USBDeviceClass6initEPEmm.part.5+0xcc>)
	inline void epBank0SetReady(ep_t ep)   { usb.DeviceEndpoint[ep].EPSTATUSSET.bit.BK0RDY = 1; }
    5560:	1882      	adds	r2, r0, r2
	inline void epBank0SetMultiPacketSize(ep_t ep, uint16_t s) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.MULTI_PACKET_SIZE = s; }
    5562:	400c      	ands	r4, r1
    5564:	2180      	movs	r1, #128	; 0x80
    5566:	0349      	lsls	r1, r1, #13
    5568:	4321      	orrs	r1, r4
    556a:	6099      	str	r1, [r3, #8]
	inline void epBank0SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT = bc; }
    556c:	6899      	ldr	r1, [r3, #8]
    556e:	0b89      	lsrs	r1, r1, #14
    5570:	0389      	lsls	r1, r1, #14
    5572:	6099      	str	r1, [r3, #8]
	inline void epBank0SetReady(ep_t ep)   { usb.DeviceEndpoint[ep].EPSTATUSSET.bit.BK0RDY = 1; }
    5574:	2340      	movs	r3, #64	; 0x40
    5576:	7951      	ldrb	r1, [r2, #5]
    5578:	430b      	orrs	r3, r1
    557a:	7153      	strb	r3, [r2, #5]
    557c:	e7c4      	b.n	5508 <_ZN14USBDeviceClass6initEPEmm.part.5+0x44>
    557e:	46c0      	nop			; (mov r8, r8)
    5580:	20000ae0 	.word	0x20000ae0
    5584:	8fffffff 	.word	0x8fffffff
    5588:	20000654 	.word	0x20000654
    558c:	20000814 	.word	0x20000814
    5590:	f0003fff 	.word	0xf0003fff

00005594 <_ZN20USBDevice_SAMD21G18x5resetEv>:
void USBDevice_SAMD21G18x::reset() {
    5594:	b570      	push	{r4, r5, r6, lr}
	usb.CTRLA.bit.SWRST = 1;
    5596:	0004      	movs	r4, r0
    5598:	2301      	movs	r3, #1
    559a:	cc20      	ldmia	r4!, {r5}
	memset(EP, 0, sizeof(EP));
    559c:	2100      	movs	r1, #0
	usb.CTRLA.bit.SWRST = 1;
    559e:	782a      	ldrb	r2, [r5, #0]
	memset(EP, 0, sizeof(EP));
    55a0:	0020      	movs	r0, r4
	usb.CTRLA.bit.SWRST = 1;
    55a2:	4313      	orrs	r3, r2
	memset(EP, 0, sizeof(EP));
    55a4:	2280      	movs	r2, #128	; 0x80
	usb.CTRLA.bit.SWRST = 1;
    55a6:	702b      	strb	r3, [r5, #0]
	memset(EP, 0, sizeof(EP));
    55a8:	0052      	lsls	r2, r2, #1
    55aa:	f003 fd3d 	bl	9028 <memset>
	while (usb.SYNCBUSY.bit.SWRST) {}
    55ae:	78ab      	ldrb	r3, [r5, #2]
    55b0:	07db      	lsls	r3, r3, #31
    55b2:	d4fc      	bmi.n	55ae <_ZN20USBDevice_SAMD21G18x5resetEv+0x1a>
	usb.DESCADD.reg = (uint32_t)(&EP);
    55b4:	626c      	str	r4, [r5, #36]	; 0x24
}
    55b6:	bd70      	pop	{r4, r5, r6, pc}

000055b8 <_ZN20USBDevice_SAMD21G18x9calibrateEv>:
	uint32_t pad_transn = (*pad_transn_p & USB_FUSES_TRANSN_Msk) >> USB_FUSES_TRANSN_Pos;
    55b8:	221f      	movs	r2, #31
    55ba:	4b14      	ldr	r3, [pc, #80]	; (560c <_ZN20USBDevice_SAMD21G18x9calibrateEv+0x54>)
void USBDevice_SAMD21G18x::calibrate() {
    55bc:	b570      	push	{r4, r5, r6, lr}
	uint32_t pad_transn = (*pad_transn_p & USB_FUSES_TRANSN_Msk) >> USB_FUSES_TRANSN_Pos;
    55be:	681b      	ldr	r3, [r3, #0]
    55c0:	0b59      	lsrs	r1, r3, #13
	uint32_t pad_transp = (*pad_transp_p & USB_FUSES_TRANSP_Msk) >> USB_FUSES_TRANSP_Pos;
    55c2:	0c9c      	lsrs	r4, r3, #18
	uint32_t pad_trim   = (*pad_trim_p   & USB_FUSES_TRIM_Msk  ) >> USB_FUSES_TRIM_Pos;
    55c4:	019b      	lsls	r3, r3, #6
	uint32_t pad_transn = (*pad_transn_p & USB_FUSES_TRANSN_Msk) >> USB_FUSES_TRANSN_Pos;
    55c6:	4011      	ands	r1, r2
	uint32_t pad_trim   = (*pad_trim_p   & USB_FUSES_TRIM_Msk  ) >> USB_FUSES_TRIM_Pos;
    55c8:	0f5b      	lsrs	r3, r3, #29
	uint32_t pad_transp = (*pad_transp_p & USB_FUSES_TRANSP_Msk) >> USB_FUSES_TRANSP_Pos;
    55ca:	4022      	ands	r2, r4
	if (pad_transn == 0x1F)  // maximum value (31)
    55cc:	291f      	cmp	r1, #31
    55ce:	d100      	bne.n	55d2 <_ZN20USBDevice_SAMD21G18x9calibrateEv+0x1a>
		pad_transn = 5;
    55d0:	391a      	subs	r1, #26
	if (pad_transp == 0x1F)  // maximum value (31)
    55d2:	2a1f      	cmp	r2, #31
    55d4:	d100      	bne.n	55d8 <_ZN20USBDevice_SAMD21G18x9calibrateEv+0x20>
		pad_transp = 29;
    55d6:	3a02      	subs	r2, #2
	if (pad_trim == 0x7)     // maximum value (7)
    55d8:	2b07      	cmp	r3, #7
    55da:	d100      	bne.n	55de <_ZN20USBDevice_SAMD21G18x9calibrateEv+0x26>
		pad_trim = 3;
    55dc:	3b04      	subs	r3, #4
	usb.PADCAL.bit.TRANSN = pad_transn;
    55de:	251f      	movs	r5, #31
    55e0:	6800      	ldr	r0, [r0, #0]
    55e2:	018e      	lsls	r6, r1, #6
    55e4:	8d04      	ldrh	r4, [r0, #40]	; 0x28
    55e6:	490a      	ldr	r1, [pc, #40]	; (5610 <_ZN20USBDevice_SAMD21G18x9calibrateEv+0x58>)
	usb.PADCAL.bit.TRANSP = pad_transp;
    55e8:	402a      	ands	r2, r5
	usb.PADCAL.bit.TRANSN = pad_transn;
    55ea:	4021      	ands	r1, r4
    55ec:	4331      	orrs	r1, r6
    55ee:	8501      	strh	r1, [r0, #40]	; 0x28
	usb.PADCAL.bit.TRANSP = pad_transp;
    55f0:	8d01      	ldrh	r1, [r0, #40]	; 0x28
    55f2:	0014      	movs	r4, r2
    55f4:	000a      	movs	r2, r1
    55f6:	43aa      	bics	r2, r5
    55f8:	4322      	orrs	r2, r4
    55fa:	8502      	strh	r2, [r0, #40]	; 0x28
	usb.PADCAL.bit.TRIM   = pad_trim;
    55fc:	8d02      	ldrh	r2, [r0, #40]	; 0x28
    55fe:	0319      	lsls	r1, r3, #12
    5600:	4b04      	ldr	r3, [pc, #16]	; (5614 <_ZN20USBDevice_SAMD21G18x9calibrateEv+0x5c>)
    5602:	4013      	ands	r3, r2
    5604:	430b      	orrs	r3, r1
    5606:	8503      	strh	r3, [r0, #40]	; 0x28
}
    5608:	bd70      	pop	{r4, r5, r6, pc}
    560a:	46c0      	nop			; (mov r8, r8)
    560c:	00806024 	.word	0x00806024
    5610:	fffff83f 	.word	0xfffff83f
    5614:	ffff8fff 	.word	0xffff8fff

00005618 <_ZN7__GuardC1Ev>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    5618:	f3ef 8310 	mrs	r3, PRIMASK
	__Guard() : primask(__get_PRIMASK()), loops(1) {
    561c:	6003      	str	r3, [r0, #0]
    561e:	2301      	movs	r3, #1
    5620:	6043      	str	r3, [r0, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    5622:	b672      	cpsid	i
	}
    5624:	4770      	bx	lr

00005626 <_ZN7__GuardD1Ev>:
		if (primask == 0) {
    5626:	6803      	ldr	r3, [r0, #0]
    5628:	2b00      	cmp	r3, #0
    562a:	d102      	bne.n	5632 <_ZN7__GuardD1Ev+0xc>
  __ASM volatile ("cpsie i" : : : "memory");
    562c:	b662      	cpsie	i
  __ASM volatile ("isb 0xF":::"memory");
    562e:	f3bf 8f6f 	isb	sy
	}
    5632:	4770      	bx	lr

00005634 <_ZNK26DoubleBufferedEPOutHandler9availableEv>:
			release();
		}
	}

	// Returns how many bytes are stored in the buffers
	virtual uint32_t available() const {
    5634:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if (current == 0) {
    5636:	6905      	ldr	r5, [r0, #16]
	virtual uint32_t available() const {
    5638:	0004      	movs	r4, r0
			bool ready = false;
			synchronized {
    563a:	4668      	mov	r0, sp
		if (current == 0) {
    563c:	2d00      	cmp	r5, #0
    563e:	d114      	bne.n	566a <_ZNK26DoubleBufferedEPOutHandler9availableEv+0x36>
			synchronized {
    5640:	f7ff ffea 	bl	5618 <_ZN7__GuardC1Ev>
    5644:	9b01      	ldr	r3, [sp, #4]
				ready = ready0;
    5646:	1d62      	adds	r2, r4, #5
			synchronized {
    5648:	3b01      	subs	r3, #1
    564a:	d302      	bcc.n	5652 <_ZNK26DoubleBufferedEPOutHandler9availableEv+0x1e>
				ready = ready0;
    564c:	7fd5      	ldrb	r5, [r2, #31]
    564e:	b2ed      	uxtb	r5, r5
    5650:	e7fa      	b.n	5648 <_ZNK26DoubleBufferedEPOutHandler9availableEv+0x14>
			synchronized {
    5652:	4668      	mov	r0, sp
    5654:	9301      	str	r3, [sp, #4]
    5656:	f7ff ffe6 	bl	5626 <_ZN7__GuardD1Ev>
			}
			return ready ? (last0 - first0) : 0;
    565a:	2d00      	cmp	r5, #0
    565c:	d101      	bne.n	5662 <_ZNK26DoubleBufferedEPOutHandler9availableEv+0x2e>
    565e:	2000      	movs	r0, #0
			synchronized {
				ready = ready1;
			}
			return ready ? (last1 - first1) : 0;
		}
	}
    5660:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
			return ready ? (last0 - first0) : 0;
    5662:	6a20      	ldr	r0, [r4, #32]
    5664:	69e3      	ldr	r3, [r4, #28]
			return ready ? (last1 - first1) : 0;
    5666:	1ac0      	subs	r0, r0, r3
    5668:	e7fa      	b.n	5660 <_ZNK26DoubleBufferedEPOutHandler9availableEv+0x2c>
			synchronized {
    566a:	f7ff ffd5 	bl	5618 <_ZN7__GuardC1Ev>
				ready = ready1;
    566e:	0022      	movs	r2, r4
			bool ready = false;
    5670:	2500      	movs	r5, #0
    5672:	9b01      	ldr	r3, [sp, #4]
				ready = ready1;
    5674:	3234      	adds	r2, #52	; 0x34
			synchronized {
    5676:	3b01      	subs	r3, #1
    5678:	d302      	bcc.n	5680 <_ZNK26DoubleBufferedEPOutHandler9availableEv+0x4c>
				ready = ready1;
    567a:	7815      	ldrb	r5, [r2, #0]
    567c:	b2ed      	uxtb	r5, r5
			synchronized {
    567e:	e7fa      	b.n	5676 <_ZNK26DoubleBufferedEPOutHandler9availableEv+0x42>
    5680:	4668      	mov	r0, sp
    5682:	9301      	str	r3, [sp, #4]
    5684:	f7ff ffcf 	bl	5626 <_ZN7__GuardD1Ev>
			return ready ? (last1 - first1) : 0;
    5688:	2d00      	cmp	r5, #0
    568a:	d0e8      	beq.n	565e <_ZNK26DoubleBufferedEPOutHandler9availableEv+0x2a>
    568c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    568e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5690:	e7e9      	b.n	5666 <_ZNK26DoubleBufferedEPOutHandler9availableEv+0x32>
	...

00005694 <_ZN26DoubleBufferedEPOutHandler7releaseEv>:

	void release() {
    5694:	b5f0      	push	{r4, r5, r6, r7, lr}
	inline void epBank0EnableTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTENSET.bit.TRCPT0 = 1; }
    5696:	2501      	movs	r5, #1
		// Release OUT EP
		usbd.epBank0EnableTransferComplete(ep);
    5698:	6846      	ldr	r6, [r0, #4]
	inline void epBank0EnableTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTENSET.bit.TRCPT0 = 1; }
    569a:	7a03      	ldrb	r3, [r0, #8]
    569c:	6831      	ldr	r1, [r6, #0]
    569e:	015a      	lsls	r2, r3, #5
    56a0:	188c      	adds	r4, r1, r2
    56a2:	34ff      	adds	r4, #255	; 0xff
    56a4:	7aa7      	ldrb	r7, [r4, #10]
	inline void epBank0SetMultiPacketSize(ep_t ep, uint16_t s) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.MULTI_PACKET_SIZE = s; }
    56a6:	18b2      	adds	r2, r6, r2
	inline void epBank0EnableTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTENSET.bit.TRCPT0 = 1; }
    56a8:	433d      	orrs	r5, r7
    56aa:	72a5      	strb	r5, [r4, #10]
		usbd.epBank0SetMultiPacketSize(ep, size);
    56ac:	68c4      	ldr	r4, [r0, #12]
	inline void epBank0SetMultiPacketSize(ep_t ep, uint16_t s) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.MULTI_PACKET_SIZE = s; }
    56ae:	4d09      	ldr	r5, [pc, #36]	; (56d4 <_ZN26DoubleBufferedEPOutHandler7releaseEv+0x40>)
    56b0:	6890      	ldr	r0, [r2, #8]
    56b2:	04a4      	lsls	r4, r4, #18
    56b4:	4028      	ands	r0, r5
    56b6:	0924      	lsrs	r4, r4, #4
    56b8:	4320      	orrs	r0, r4
    56ba:	6090      	str	r0, [r2, #8]
	inline void epBank0SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT = bc; }
    56bc:	6890      	ldr	r0, [r2, #8]
	inline void epBank0ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK0RDY = 1; }
    56be:	3308      	adds	r3, #8
	inline void epBank0SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT = bc; }
    56c0:	0b80      	lsrs	r0, r0, #14
    56c2:	0380      	lsls	r0, r0, #14
    56c4:	6090      	str	r0, [r2, #8]
	inline void epBank0ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK0RDY = 1; }
    56c6:	2240      	movs	r2, #64	; 0x40
    56c8:	015b      	lsls	r3, r3, #5
    56ca:	18cb      	adds	r3, r1, r3
    56cc:	7919      	ldrb	r1, [r3, #4]
    56ce:	430a      	orrs	r2, r1
    56d0:	711a      	strb	r2, [r3, #4]
		usbd.epBank0SetByteCount(ep, 0);
		usbd.epBank0ResetReady(ep);
	}
    56d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    56d4:	f0003fff 	.word	0xf0003fff

000056d8 <_ZN26DoubleBufferedEPOutHandler4recvEPvm>:
	virtual uint32_t recv(void *_data, uint32_t len)
    56d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
		if (current == 0) {
    56da:	6903      	ldr	r3, [r0, #16]
	virtual uint32_t recv(void *_data, uint32_t len)
    56dc:	0004      	movs	r4, r0
    56de:	000e      	movs	r6, r1
    56e0:	0017      	movs	r7, r2
			synchronized {
    56e2:	4668      	mov	r0, sp
		if (current == 0) {
    56e4:	2b00      	cmp	r3, #0
    56e6:	d13d      	bne.n	5764 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x8c>
			synchronized {
    56e8:	f7ff ff96 	bl	5618 <_ZN7__GuardC1Ev>
    56ec:	9b01      	ldr	r3, [sp, #4]
				if (!ready0) {
    56ee:	1d61      	adds	r1, r4, #5
    56f0:	3b01      	subs	r3, #1
			synchronized {
    56f2:	1c5a      	adds	r2, r3, #1
    56f4:	d00c      	beq.n	5710 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x38>
				if (!ready0) {
    56f6:	7fcd      	ldrb	r5, [r1, #31]
    56f8:	1e5a      	subs	r2, r3, #1
    56fa:	b2ed      	uxtb	r5, r5
    56fc:	2d00      	cmp	r5, #0
    56fe:	d105      	bne.n	570c <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x34>
				synchronized {
    5700:	4668      	mov	r0, sp
    5702:	9301      	str	r3, [sp, #4]
    5704:	f7ff ff8f 	bl	5626 <_ZN7__GuardD1Ev>
	}
    5708:	0028      	movs	r0, r5
    570a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    570c:	0013      	movs	r3, r2
    570e:	e7f0      	b.n	56f2 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x1a>
			synchronized {
    5710:	4668      	mov	r0, sp
    5712:	9301      	str	r3, [sp, #4]
			for (i=0; i<len && first0 < last0; i++) {
    5714:	2500      	movs	r5, #0
			synchronized {
    5716:	f7ff ff86 	bl	5626 <_ZN7__GuardD1Ev>
    571a:	69e3      	ldr	r3, [r4, #28]
			for (i=0; i<len && first0 < last0; i++) {
    571c:	42af      	cmp	r7, r5
    571e:	d002      	beq.n	5726 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x4e>
    5720:	6a22      	ldr	r2, [r4, #32]
    5722:	4293      	cmp	r3, r2
    5724:	d357      	bcc.n	57d6 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0xfe>
			if (first0 == last0) {
    5726:	6a22      	ldr	r2, [r4, #32]
    5728:	4293      	cmp	r3, r2
    572a:	d1ed      	bne.n	5708 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x30>
				first0 = 0;
    572c:	2300      	movs	r3, #0
    572e:	61e3      	str	r3, [r4, #28]
				current = 1;
    5730:	3301      	adds	r3, #1
    5732:	6123      	str	r3, [r4, #16]
				synchronized {
    5734:	4668      	mov	r0, sp
    5736:	f7ff ff6f 	bl	5618 <_ZN7__GuardC1Ev>
					if (notify) {
    573a:	0022      	movs	r2, r4
					ready0 = false;
    573c:	2100      	movs	r1, #0
    573e:	9b01      	ldr	r3, [sp, #4]
    5740:	1d67      	adds	r7, r4, #5
    5742:	3b01      	subs	r3, #1
					if (notify) {
    5744:	3235      	adds	r2, #53	; 0x35
				synchronized {
    5746:	1c58      	adds	r0, r3, #1
    5748:	d0da      	beq.n	5700 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x28>
					ready0 = false;
    574a:	77f9      	strb	r1, [r7, #31]
					if (notify) {
    574c:	7810      	ldrb	r0, [r2, #0]
    574e:	1e5e      	subs	r6, r3, #1
    5750:	2800      	cmp	r0, #0
    5752:	d005      	beq.n	5760 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x88>
						notify = false;
    5754:	7011      	strb	r1, [r2, #0]
						release();
    5756:	0020      	movs	r0, r4
    5758:	9301      	str	r3, [sp, #4]
    575a:	f7ff ff9b 	bl	5694 <_ZN26DoubleBufferedEPOutHandler7releaseEv>
    575e:	e7ec      	b.n	573a <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x62>
					if (notify) {
    5760:	0033      	movs	r3, r6
    5762:	e7f0      	b.n	5746 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x6e>
			synchronized {
    5764:	f7ff ff58 	bl	5618 <_ZN7__GuardC1Ev>
				if (!ready1) {
    5768:	0021      	movs	r1, r4
    576a:	9b01      	ldr	r3, [sp, #4]
    576c:	3134      	adds	r1, #52	; 0x34
    576e:	3b01      	subs	r3, #1
			synchronized {
    5770:	1c5a      	adds	r2, r3, #1
    5772:	d006      	beq.n	5782 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0xaa>
				if (!ready1) {
    5774:	780d      	ldrb	r5, [r1, #0]
    5776:	1e5a      	subs	r2, r3, #1
    5778:	b2ed      	uxtb	r5, r5
    577a:	2d00      	cmp	r5, #0
    577c:	d0c0      	beq.n	5700 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x28>
    577e:	0013      	movs	r3, r2
    5780:	e7f6      	b.n	5770 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x98>
			synchronized {
    5782:	4668      	mov	r0, sp
    5784:	9301      	str	r3, [sp, #4]
			for (i=0; i<len && first1 < last1; i++) {
    5786:	2500      	movs	r5, #0
			synchronized {
    5788:	f7ff ff4d 	bl	5626 <_ZN7__GuardD1Ev>
    578c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
			for (i=0; i<len && first1 < last1; i++) {
    578e:	42bd      	cmp	r5, r7
    5790:	d002      	beq.n	5798 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0xc0>
    5792:	6b22      	ldr	r2, [r4, #48]	; 0x30
    5794:	4293      	cmp	r3, r2
    5796:	d326      	bcc.n	57e6 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x10e>
			if (first1 == last1) {
    5798:	6b22      	ldr	r2, [r4, #48]	; 0x30
    579a:	4293      	cmp	r3, r2
    579c:	d1b4      	bne.n	5708 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x30>
				first1 = 0;
    579e:	2300      	movs	r3, #0
				synchronized {
    57a0:	4668      	mov	r0, sp
				first1 = 0;
    57a2:	62e3      	str	r3, [r4, #44]	; 0x2c
				current = 0;
    57a4:	6123      	str	r3, [r4, #16]
				synchronized {
    57a6:	f7ff ff37 	bl	5618 <_ZN7__GuardC1Ev>
					ready1 = false;
    57aa:	0027      	movs	r7, r4
					if (notify) {
    57ac:	0022      	movs	r2, r4
					ready1 = false;
    57ae:	2100      	movs	r1, #0
    57b0:	9b01      	ldr	r3, [sp, #4]
    57b2:	3734      	adds	r7, #52	; 0x34
    57b4:	3b01      	subs	r3, #1
					if (notify) {
    57b6:	3235      	adds	r2, #53	; 0x35
				synchronized {
    57b8:	1c58      	adds	r0, r3, #1
    57ba:	d0a1      	beq.n	5700 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x28>
					ready1 = false;
    57bc:	7039      	strb	r1, [r7, #0]
					if (notify) {
    57be:	7810      	ldrb	r0, [r2, #0]
    57c0:	1e5e      	subs	r6, r3, #1
    57c2:	2800      	cmp	r0, #0
    57c4:	d005      	beq.n	57d2 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0xfa>
						notify = false;
    57c6:	7011      	strb	r1, [r2, #0]
						release();
    57c8:	0020      	movs	r0, r4
    57ca:	9301      	str	r3, [sp, #4]
    57cc:	f7ff ff62 	bl	5694 <_ZN26DoubleBufferedEPOutHandler7releaseEv>
    57d0:	e7eb      	b.n	57aa <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0xd2>
    57d2:	0033      	movs	r3, r6
    57d4:	e7f0      	b.n	57b8 <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0xe0>
				data[i] = data0[first0++];
    57d6:	1c5a      	adds	r2, r3, #1
    57d8:	61e2      	str	r2, [r4, #28]
    57da:	69a2      	ldr	r2, [r4, #24]
    57dc:	18d3      	adds	r3, r2, r3
    57de:	781b      	ldrb	r3, [r3, #0]
    57e0:	5573      	strb	r3, [r6, r5]
			for (i=0; i<len && first0 < last0; i++) {
    57e2:	3501      	adds	r5, #1
    57e4:	e799      	b.n	571a <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0x42>
				data[i] = data1[first1++];
    57e6:	1c5a      	adds	r2, r3, #1
    57e8:	62e2      	str	r2, [r4, #44]	; 0x2c
    57ea:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    57ec:	18d3      	adds	r3, r2, r3
    57ee:	781b      	ldrb	r3, [r3, #0]
    57f0:	5573      	strb	r3, [r6, r5]
			for (i=0; i<len && first1 < last1; i++) {
    57f2:	3501      	adds	r5, #1
    57f4:	e7ca      	b.n	578c <_ZN26DoubleBufferedEPOutHandler4recvEPvm+0xb4>

000057f6 <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv>:
	virtual void handleEndpoint()
    57f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	inline bool epBank0IsTransferComplete(ep_t ep)  { return usb.DeviceEndpoint[ep].EPINTFLAG.bit.TRCPT0; }
    57f8:	7a02      	ldrb	r2, [r0, #8]
		if (usbd.epBank0IsTransferComplete(ep))
    57fa:	6843      	ldr	r3, [r0, #4]
	inline bool epBank0IsTransferComplete(ep_t ep)  { return usb.DeviceEndpoint[ep].EPINTFLAG.bit.TRCPT0; }
    57fc:	0011      	movs	r1, r2
	virtual void handleEndpoint()
    57fe:	0004      	movs	r4, r0
	inline bool epBank0IsTransferComplete(ep_t ep)  { return usb.DeviceEndpoint[ep].EPINTFLAG.bit.TRCPT0; }
    5800:	3108      	adds	r1, #8
    5802:	6818      	ldr	r0, [r3, #0]
    5804:	0149      	lsls	r1, r1, #5
    5806:	1841      	adds	r1, r0, r1
    5808:	79c8      	ldrb	r0, [r1, #7]
		if (usbd.epBank0IsTransferComplete(ep))
    580a:	07c0      	lsls	r0, r0, #31
    580c:	d527      	bpl.n	585e <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv+0x68>
	inline void epBank0AckTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTFLAG.reg = USB_DEVICE_EPINTFLAG_TRCPT(1); }
    580e:	2501      	movs	r5, #1
    5810:	0152      	lsls	r2, r2, #5
    5812:	71cd      	strb	r5, [r1, #7]
	inline uint16_t epBank0ByteCount(ep_t ep) { return EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT; }
    5814:	189b      	adds	r3, r3, r2
    5816:	689a      	ldr	r2, [r3, #8]
			if (incoming == 0) {
    5818:	6961      	ldr	r1, [r4, #20]
	inline uint16_t epBank0ByteCount(ep_t ep) { return EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT; }
    581a:	0492      	lsls	r2, r2, #18
    581c:	0c92      	lsrs	r2, r2, #18
			if (incoming == 0) {
    581e:	2900      	cmp	r1, #0
    5820:	d121      	bne.n	5866 <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv+0x70>
				last0 = usbd.epBank0ByteCount(ep);
    5822:	6222      	str	r2, [r4, #32]
				if (last0 != 0) {
    5824:	6a22      	ldr	r2, [r4, #32]
    5826:	2a00      	cmp	r2, #0
    5828:	d03e      	beq.n	58a8 <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv+0xb2>
	inline void epBank0SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[0].ADDR.reg = (uint32_t)addr; }
    582a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
					incoming = 1;
    582c:	6165      	str	r5, [r4, #20]
					synchronized {
    582e:	4668      	mov	r0, sp
	inline void epBank0SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[0].ADDR.reg = (uint32_t)addr; }
    5830:	605a      	str	r2, [r3, #4]
					synchronized {
    5832:	f7ff fef1 	bl	5618 <_ZN7__GuardC1Ev>
						if (ready1) {
    5836:	0027      	movs	r7, r4
    5838:	0021      	movs	r1, r4
    583a:	9b01      	ldr	r3, [sp, #4]
						ready0 = true;
    583c:	1d66      	adds	r6, r4, #5
    583e:	3b01      	subs	r3, #1
						if (ready1) {
    5840:	3734      	adds	r7, #52	; 0x34
    5842:	3135      	adds	r1, #53	; 0x35
					synchronized {
    5844:	1c5a      	adds	r2, r3, #1
    5846:	d02b      	beq.n	58a0 <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv+0xaa>
						ready0 = true;
    5848:	77f5      	strb	r5, [r6, #31]
						if (ready1) {
    584a:	783a      	ldrb	r2, [r7, #0]
    584c:	1e58      	subs	r0, r3, #1
    584e:	b2d2      	uxtb	r2, r2
    5850:	2a00      	cmp	r2, #0
    5852:	d005      	beq.n	5860 <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv+0x6a>
    5854:	9301      	str	r3, [sp, #4]
							return;
    5856:	4668      	mov	r0, sp
							notify = true;
    5858:	700d      	strb	r5, [r1, #0]
							return;
    585a:	f7ff fee4 	bl	5626 <_ZN7__GuardD1Ev>
	}
    585e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
						notify = false;
    5860:	700a      	strb	r2, [r1, #0]
					synchronized {
    5862:	0003      	movs	r3, r0
    5864:	e7ee      	b.n	5844 <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv+0x4e>
				last1 = usbd.epBank0ByteCount(ep);
    5866:	6322      	str	r2, [r4, #48]	; 0x30
				if (last1 != 0) {
    5868:	6b22      	ldr	r2, [r4, #48]	; 0x30
    586a:	2a00      	cmp	r2, #0
    586c:	d01c      	beq.n	58a8 <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv+0xb2>
					incoming = 0;
    586e:	2200      	movs	r2, #0
    5870:	6162      	str	r2, [r4, #20]
	inline void epBank0SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[0].ADDR.reg = (uint32_t)addr; }
    5872:	69a2      	ldr	r2, [r4, #24]
					synchronized {
    5874:	4668      	mov	r0, sp
	inline void epBank0SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[0].ADDR.reg = (uint32_t)addr; }
    5876:	605a      	str	r2, [r3, #4]
					synchronized {
    5878:	f7ff fece 	bl	5618 <_ZN7__GuardC1Ev>
						ready1 = true;
    587c:	0026      	movs	r6, r4
    587e:	0021      	movs	r1, r4
    5880:	9b01      	ldr	r3, [sp, #4]
    5882:	3634      	adds	r6, #52	; 0x34
    5884:	3b01      	subs	r3, #1
						if (ready0) {
    5886:	1d67      	adds	r7, r4, #5
    5888:	3135      	adds	r1, #53	; 0x35
					synchronized {
    588a:	1c5a      	adds	r2, r3, #1
    588c:	d008      	beq.n	58a0 <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv+0xaa>
						ready1 = true;
    588e:	7035      	strb	r5, [r6, #0]
						if (ready0) {
    5890:	7ffa      	ldrb	r2, [r7, #31]
    5892:	1e58      	subs	r0, r3, #1
    5894:	b2d2      	uxtb	r2, r2
    5896:	2a00      	cmp	r2, #0
    5898:	d1dc      	bne.n	5854 <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv+0x5e>
						notify = false;
    589a:	700a      	strb	r2, [r1, #0]
					synchronized {
    589c:	0003      	movs	r3, r0
    589e:	e7f4      	b.n	588a <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv+0x94>
    58a0:	4668      	mov	r0, sp
    58a2:	9301      	str	r3, [sp, #4]
    58a4:	f7ff febf 	bl	5626 <_ZN7__GuardD1Ev>
			release();
    58a8:	0020      	movs	r0, r4
    58aa:	f7ff fef3 	bl	5694 <_ZN26DoubleBufferedEPOutHandler7releaseEv>
    58ae:	e7d6      	b.n	585e <_ZN26DoubleBufferedEPOutHandler14handleEndpointEv+0x68>

000058b0 <_ZN14USBDeviceClass14SendInterfacesEPm>:
{
    58b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
	uint8_t interfaces = 0;
    58b2:	466b      	mov	r3, sp
    58b4:	1ddc      	adds	r4, r3, #7
    58b6:	2300      	movs	r3, #0
{
    58b8:	000d      	movs	r5, r1
	total[0] += CDC_GetInterface(&interfaces);
    58ba:	0020      	movs	r0, r4
	uint8_t interfaces = 0;
    58bc:	7023      	strb	r3, [r4, #0]
	total[0] += CDC_GetInterface(&interfaces);
    58be:	f7ff fd65 	bl	538c <_Z16CDC_GetInterfacePh>
    58c2:	682b      	ldr	r3, [r5, #0]
    58c4:	1818      	adds	r0, r3, r0
    58c6:	6028      	str	r0, [r5, #0]
	total[0] += PluggableUSB().getInterface(&interfaces);
    58c8:	f001 fbcc 	bl	7064 <_Z12PluggableUSBv>
    58cc:	0021      	movs	r1, r4
    58ce:	f001 fb85 	bl	6fdc <_ZN13PluggableUSB_12getInterfaceEPh>
    58d2:	682b      	ldr	r3, [r5, #0]
    58d4:	1818      	adds	r0, r3, r0
    58d6:	6028      	str	r0, [r5, #0]
	return interfaces;
    58d8:	7820      	ldrb	r0, [r4, #0]
}
    58da:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

000058dc <_ZN14USBDeviceClass14handleEndpointEh>:
	if (ep == CDC_ENDPOINT_IN)
    58dc:	2903      	cmp	r1, #3
    58de:	d10e      	bne.n	58fe <_ZN14USBDeviceClass14handleEndpointEh+0x22>
	inline void epBank1ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK1RDY = 1; }
    58e0:	2280      	movs	r2, #128	; 0x80
    58e2:	4b0e      	ldr	r3, [pc, #56]	; (591c <_ZN14USBDeviceClass14handleEndpointEh+0x40>)
    58e4:	3162      	adds	r1, #98	; 0x62
    58e6:	681b      	ldr	r3, [r3, #0]
    58e8:	31ff      	adds	r1, #255	; 0xff
    58ea:	5c58      	ldrb	r0, [r3, r1]
    58ec:	4252      	negs	r2, r2
    58ee:	4302      	orrs	r2, r0
    58f0:	545a      	strb	r2, [r3, r1]
	inline void epBank1AckTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTFLAG.reg = USB_DEVICE_EPINTFLAG_TRCPT(2); }
    58f2:	2268      	movs	r2, #104	; 0x68
    58f4:	3963      	subs	r1, #99	; 0x63
    58f6:	39ff      	subs	r1, #255	; 0xff
    58f8:	32ff      	adds	r2, #255	; 0xff
    58fa:	5499      	strb	r1, [r3, r2]
}
    58fc:	4770      	bx	lr
	if (ep == CDC_ENDPOINT_ACM)
    58fe:	2901      	cmp	r1, #1
    5900:	d1fc      	bne.n	58fc <_ZN14USBDeviceClass14handleEndpointEh+0x20>
	inline void epBank1ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK1RDY = 1; }
    5902:	2280      	movs	r2, #128	; 0x80
    5904:	4b05      	ldr	r3, [pc, #20]	; (591c <_ZN14USBDeviceClass14handleEndpointEh+0x40>)
    5906:	3124      	adds	r1, #36	; 0x24
    5908:	681b      	ldr	r3, [r3, #0]
    590a:	31ff      	adds	r1, #255	; 0xff
    590c:	5c58      	ldrb	r0, [r3, r1]
    590e:	4252      	negs	r2, r2
    5910:	4302      	orrs	r2, r0
    5912:	545a      	strb	r2, [r3, r1]
	inline void epBank1AckTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTFLAG.reg = USB_DEVICE_EPINTFLAG_TRCPT(2); }
    5914:	3923      	subs	r1, #35	; 0x23
    5916:	39ff      	subs	r1, #255	; 0xff
    5918:	2228      	movs	r2, #40	; 0x28
    591a:	e7ed      	b.n	58f8 <_ZN14USBDeviceClass14handleEndpointEh+0x1c>
    591c:	20000ae0 	.word	0x20000ae0

00005920 <_ZN14USBDeviceClass4initEv>:
	PM->APBBMASK.reg |= PM_APBBMASK_USB;
    5920:	2320      	movs	r3, #32
{
    5922:	b570      	push	{r4, r5, r6, lr}
	PM->APBBMASK.reg |= PM_APBBMASK_USB;
    5924:	4a25      	ldr	r2, [pc, #148]	; (59bc <_ZN14USBDeviceClass4initEv+0x9c>)
{
    5926:	0004      	movs	r4, r0
	PM->APBBMASK.reg |= PM_APBBMASK_USB;
    5928:	69d1      	ldr	r1, [r2, #28]
	PORT->Group[0].PMUX[PIN_PA24G_USB_DM/2].reg &= ~(0xF << (4 * (PIN_PA24G_USB_DM & 0x01u)));
    592a:	200f      	movs	r0, #15
	PM->APBBMASK.reg |= PM_APBBMASK_USB;
    592c:	430b      	orrs	r3, r1
    592e:	61d3      	str	r3, [r2, #28]
	PORT->Group[0].PINCFG[PIN_PA24G_USB_DM].bit.PMUXEN = 1;
    5930:	2201      	movs	r2, #1
    5932:	4923      	ldr	r1, [pc, #140]	; (59c0 <_ZN14USBDeviceClass4initEv+0xa0>)
    5934:	780b      	ldrb	r3, [r1, #0]
    5936:	4313      	orrs	r3, r2
    5938:	700b      	strb	r3, [r1, #0]
	PORT->Group[0].PMUX[PIN_PA24G_USB_DM/2].reg &= ~(0xF << (4 * (PIN_PA24G_USB_DM & 0x01u)));
    593a:	4b22      	ldr	r3, [pc, #136]	; (59c4 <_ZN14USBDeviceClass4initEv+0xa4>)
    593c:	7819      	ldrb	r1, [r3, #0]
    593e:	4381      	bics	r1, r0
    5940:	7019      	strb	r1, [r3, #0]
	PORT->Group[0].PMUX[PIN_PA24G_USB_DM/2].reg |= MUX_PA24G_USB_DM << (4 * (PIN_PA24G_USB_DM & 0x01u));
    5942:	2106      	movs	r1, #6
    5944:	781d      	ldrb	r5, [r3, #0]
    5946:	4329      	orrs	r1, r5
    5948:	7019      	strb	r1, [r3, #0]
	PORT->Group[0].PINCFG[PIN_PA25G_USB_DP].bit.PMUXEN = 1;
    594a:	491f      	ldr	r1, [pc, #124]	; (59c8 <_ZN14USBDeviceClass4initEv+0xa8>)
    594c:	780d      	ldrb	r5, [r1, #0]
    594e:	432a      	orrs	r2, r5
    5950:	700a      	strb	r2, [r1, #0]
	PORT->Group[0].PMUX[PIN_PA25G_USB_DP/2].reg &= ~(0xF << (4 * (PIN_PA25G_USB_DP & 0x01u)));
    5952:	781a      	ldrb	r2, [r3, #0]
    5954:	4002      	ands	r2, r0
    5956:	701a      	strb	r2, [r3, #0]
	PORT->Group[0].PMUX[PIN_PA25G_USB_DP/2].reg |= MUX_PA25G_USB_DP << (4 * (PIN_PA25G_USB_DP & 0x01u));
    5958:	2260      	movs	r2, #96	; 0x60
    595a:	7819      	ldrb	r1, [r3, #0]
    595c:	430a      	orrs	r2, r1
    595e:	701a      	strb	r2, [r3, #0]
	GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID(6)     | // Generic Clock Multiplexer 6
    5960:	4b1a      	ldr	r3, [pc, #104]	; (59cc <_ZN14USBDeviceClass4initEv+0xac>)
    5962:	4a1b      	ldr	r2, [pc, #108]	; (59d0 <_ZN14USBDeviceClass4initEv+0xb0>)
    5964:	805a      	strh	r2, [r3, #2]
	while (GCLK->STATUS.bit.SYNCBUSY)
    5966:	785a      	ldrb	r2, [r3, #1]
    5968:	09d2      	lsrs	r2, r2, #7
    596a:	d1fc      	bne.n	5966 <_ZN14USBDeviceClass4initEv+0x46>
	USB_SetHandler(&UDD_Handler);
    596c:	4819      	ldr	r0, [pc, #100]	; (59d4 <_ZN14USBDeviceClass4initEv+0xb4>)
    596e:	f7ff fa85 	bl	4e7c <USB_SetHandler>
	usbd.reset();
    5972:	4d19      	ldr	r5, [pc, #100]	; (59d8 <_ZN14USBDeviceClass4initEv+0xb8>)
    5974:	0028      	movs	r0, r5
    5976:	f7ff fe0d 	bl	5594 <_ZN20USBDevice_SAMD21G18x5resetEv>
	usbd.calibrate();
    597a:	0028      	movs	r0, r5
    597c:	f7ff fe1c 	bl	55b8 <_ZN20USBDevice_SAMD21G18x9calibrateEv>
	inline void setUSBDeviceMode() { usb.CTRLA.bit.MODE = USB_CTRLA_MODE_DEVICE_Val; }
    5980:	217f      	movs	r1, #127	; 0x7f
    5982:	682b      	ldr	r3, [r5, #0]
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    5984:	20c1      	movs	r0, #193	; 0xc1
    5986:	781a      	ldrb	r2, [r3, #0]
    5988:	0080      	lsls	r0, r0, #2
    598a:	400a      	ands	r2, r1
    598c:	701a      	strb	r2, [r3, #0]
	inline void runInStandby()   { usb.CTRLA.bit.RUNSTDBY = 1; }
    598e:	2204      	movs	r2, #4
    5990:	7819      	ldrb	r1, [r3, #0]
    5992:	430a      	orrs	r2, r1
	inline void setFullSpeed()       { usb.CTRLB.bit.SPDCONF = USB_DEVICE_CTRLB_SPDCONF_FS_Val;   }
    5994:	210c      	movs	r1, #12
	inline void runInStandby()   { usb.CTRLA.bit.RUNSTDBY = 1; }
    5996:	701a      	strb	r2, [r3, #0]
	inline void setFullSpeed()       { usb.CTRLB.bit.SPDCONF = USB_DEVICE_CTRLB_SPDCONF_FS_Val;   }
    5998:	891a      	ldrh	r2, [r3, #8]
    599a:	438a      	bics	r2, r1
    599c:	490f      	ldr	r1, [pc, #60]	; (59dc <_ZN14USBDeviceClass4initEv+0xbc>)
    599e:	811a      	strh	r2, [r3, #8]
    59a0:	580a      	ldr	r2, [r1, r0]
    59a2:	0212      	lsls	r2, r2, #8
    59a4:	0a12      	lsrs	r2, r2, #8
    59a6:	500a      	str	r2, [r1, r0]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
    59a8:	2280      	movs	r2, #128	; 0x80
    59aa:	600a      	str	r2, [r1, #0]
	inline void enable()  { usb.CTRLA.bit.ENABLE = 1; }
    59ac:	7819      	ldrb	r1, [r3, #0]
    59ae:	3a7e      	subs	r2, #126	; 0x7e
    59b0:	430a      	orrs	r2, r1
    59b2:	701a      	strb	r2, [r3, #0]
	initialized = true;
    59b4:	2301      	movs	r3, #1
    59b6:	7023      	strb	r3, [r4, #0]
}
    59b8:	bd70      	pop	{r4, r5, r6, pc}
    59ba:	46c0      	nop			; (mov r8, r8)
    59bc:	40000400 	.word	0x40000400
    59c0:	41004458 	.word	0x41004458
    59c4:	4100443c 	.word	0x4100443c
    59c8:	41004459 	.word	0x41004459
    59cc:	40000c00 	.word	0x40000c00
    59d0:	00004006 	.word	0x00004006
    59d4:	00006339 	.word	0x00006339
    59d8:	20000ae0 	.word	0x20000ae0
    59dc:	e000e100 	.word	0xe000e100

000059e0 <_ZN14USBDeviceClass6attachEv>:
	if (!initialized)
    59e0:	7800      	ldrb	r0, [r0, #0]
    59e2:	2800      	cmp	r0, #0
    59e4:	d010      	beq.n	5a08 <_ZN14USBDeviceClass6attachEv+0x28>
	inline void attach() { usb.CTRLB.bit.DETACH = 0; }
    59e6:	2101      	movs	r1, #1
    59e8:	4b08      	ldr	r3, [pc, #32]	; (5a0c <_ZN14USBDeviceClass6attachEv+0x2c>)
    59ea:	681b      	ldr	r3, [r3, #0]
    59ec:	891a      	ldrh	r2, [r3, #8]
    59ee:	438a      	bics	r2, r1
    59f0:	811a      	strh	r2, [r3, #8]
	inline void enableEndOfResetInterrupt()    { usb.INTENSET.bit.EORST = 1; }
    59f2:	2208      	movs	r2, #8
    59f4:	8b19      	ldrh	r1, [r3, #24]
    59f6:	430a      	orrs	r2, r1
    59f8:	831a      	strh	r2, [r3, #24]
	inline void enableStartOfFrameInterrupt()  { usb.INTENSET.bit.SOF = 1; }
    59fa:	2204      	movs	r2, #4
    59fc:	8b19      	ldrh	r1, [r3, #24]
    59fe:	430a      	orrs	r2, r1
    5a00:	831a      	strh	r2, [r3, #24]
	_usbConfiguration = 0;
    5a02:	2200      	movs	r2, #0
    5a04:	4b02      	ldr	r3, [pc, #8]	; (5a10 <_ZN14USBDeviceClass6attachEv+0x30>)
    5a06:	601a      	str	r2, [r3, #0]
}
    5a08:	4770      	bx	lr
    5a0a:	46c0      	nop			; (mov r8, r8)
    5a0c:	20000ae0 	.word	0x20000ae0
    5a10:	20000ad8 	.word	0x20000ad8

00005a14 <_ZN14USBDeviceClass10setAddressEm>:
{
    5a14:	b510      	push	{r4, lr}
	inline void epBank1SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[1].PCKSIZE.bit.BYTE_COUNT = bc; }
    5a16:	4a0f      	ldr	r2, [pc, #60]	; (5a54 <_ZN14USBDeviceClass10setAddressEm+0x40>)
    5a18:	6993      	ldr	r3, [r2, #24]
    5a1a:	0b9b      	lsrs	r3, r3, #14
    5a1c:	039b      	lsls	r3, r3, #14
    5a1e:	6193      	str	r3, [r2, #24]
	inline void epBank1AckTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTFLAG.reg = USB_DEVICE_EPINTFLAG_TRCPT(2); }
    5a20:	6813      	ldr	r3, [r2, #0]
    5a22:	2202      	movs	r2, #2
    5a24:	33ff      	adds	r3, #255	; 0xff
    5a26:	721a      	strb	r2, [r3, #8]
	inline void epBank1SetReady(ep_t ep)   { usb.DeviceEndpoint[ep].EPSTATUSSET.bit.BK1RDY = 1; }
    5a28:	7998      	ldrb	r0, [r3, #6]
    5a2a:	3a82      	subs	r2, #130	; 0x82
    5a2c:	4302      	orrs	r2, r0
    5a2e:	719a      	strb	r2, [r3, #6]
	inline bool epBank1IsTransferComplete(ep_t ep)  { return usb.DeviceEndpoint[ep].EPINTFLAG.bit.TRCPT1; }
    5a30:	7a1a      	ldrb	r2, [r3, #8]
	while (!usbd.epBank1IsTransferComplete(0)) {}
    5a32:	0792      	lsls	r2, r2, #30
    5a34:	d5fc      	bpl.n	5a30 <_ZN14USBDeviceClass10setAddressEm+0x1c>
	USB->DEVICE.DADD.bit.DADD = addr; // Address
    5a36:	247f      	movs	r4, #127	; 0x7f
    5a38:	4a07      	ldr	r2, [pc, #28]	; (5a58 <_ZN14USBDeviceClass10setAddressEm+0x44>)
    5a3a:	4021      	ands	r1, r4
    5a3c:	7a93      	ldrb	r3, [r2, #10]
    5a3e:	0008      	movs	r0, r1
    5a40:	43a3      	bics	r3, r4
    5a42:	0019      	movs	r1, r3
	USB->DEVICE.DADD.bit.ADDEN = 1; // Enable
    5a44:	2380      	movs	r3, #128	; 0x80
	USB->DEVICE.DADD.bit.DADD = addr; // Address
    5a46:	4301      	orrs	r1, r0
    5a48:	7291      	strb	r1, [r2, #10]
	USB->DEVICE.DADD.bit.ADDEN = 1; // Enable
    5a4a:	7a91      	ldrb	r1, [r2, #10]
    5a4c:	425b      	negs	r3, r3
    5a4e:	430b      	orrs	r3, r1
    5a50:	7293      	strb	r3, [r2, #10]
}
    5a52:	bd10      	pop	{r4, pc}
    5a54:	20000ae0 	.word	0x20000ae0
    5a58:	41005000 	.word	0x41005000

00005a5c <_ZN14USBDeviceClass25handleClassInterfaceSetupER8USBSetup>:
{
    5a5c:	b510      	push	{r4, lr}
	if (CDC_ACM_INTERFACE == i)
    5a5e:	790b      	ldrb	r3, [r1, #4]
{
    5a60:	000c      	movs	r4, r1
	if (CDC_ACM_INTERFACE == i)
    5a62:	2b00      	cmp	r3, #0
    5a64:	d10c      	bne.n	5a80 <_ZN14USBDeviceClass25handleClassInterfaceSetupER8USBSetup+0x24>
		if (CDC_Setup(setup) == false) {
    5a66:	0008      	movs	r0, r1
    5a68:	f7ff fc9e 	bl	53a8 <_Z9CDC_SetupR8USBSetup>
    5a6c:	2800      	cmp	r0, #0
    5a6e:	d001      	beq.n	5a74 <_ZN14USBDeviceClass25handleClassInterfaceSetupER8USBSetup+0x18>
		return true;
    5a70:	2001      	movs	r0, #1
}
    5a72:	bd10      	pop	{r4, pc}
	inline void epBank1SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[1].PCKSIZE.bit.BYTE_COUNT = bc; }
    5a74:	4a09      	ldr	r2, [pc, #36]	; (5a9c <_ZN14USBDeviceClass25handleClassInterfaceSetupER8USBSetup+0x40>)
    5a76:	6993      	ldr	r3, [r2, #24]
    5a78:	0b9b      	lsrs	r3, r3, #14
    5a7a:	039b      	lsls	r3, r3, #14
    5a7c:	6193      	str	r3, [r2, #24]
    5a7e:	e7f7      	b.n	5a70 <_ZN14USBDeviceClass25handleClassInterfaceSetupER8USBSetup+0x14>
	bool ret = PluggableUSB().setup(setup);
    5a80:	f001 faf0 	bl	7064 <_Z12PluggableUSBv>
    5a84:	0021      	movs	r1, r4
    5a86:	f001 fadc 	bl	7042 <_ZN13PluggableUSB_5setupER8USBSetup>
	if ( ret == false) {
    5a8a:	2800      	cmp	r0, #0
    5a8c:	d1f0      	bne.n	5a70 <_ZN14USBDeviceClass25handleClassInterfaceSetupER8USBSetup+0x14>
    5a8e:	4a03      	ldr	r2, [pc, #12]	; (5a9c <_ZN14USBDeviceClass25handleClassInterfaceSetupER8USBSetup+0x40>)
    5a90:	6993      	ldr	r3, [r2, #24]
    5a92:	0b9b      	lsrs	r3, r3, #14
    5a94:	039b      	lsls	r3, r3, #14
    5a96:	6193      	str	r3, [r2, #24]
    5a98:	e7eb      	b.n	5a72 <_ZN14USBDeviceClass25handleClassInterfaceSetupER8USBSetup+0x16>
    5a9a:	46c0      	nop			; (mov r8, r8)
    5a9c:	20000ae0 	.word	0x20000ae0

00005aa0 <_ZN14USBDeviceClass6initEPEmm>:
{
    5aa0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    5aa2:	000d      	movs	r5, r1
	if (config == (USB_ENDPOINT_TYPE_INTERRUPT | USB_ENDPOINT_IN(0)))
    5aa4:	2a83      	cmp	r2, #131	; 0x83
    5aa6:	d119      	bne.n	5adc <_ZN14USBDeviceClass6initEPEmm+0x3c>
	inline void epBank1SetSize(ep_t ep, uint16_t size) { EP[ep].DeviceDescBank[1].PCKSIZE.bit.SIZE = EP_PCKSIZE_SIZE(size); }
    5aa8:	b2cb      	uxtb	r3, r1
    5aaa:	4c33      	ldr	r4, [pc, #204]	; (5b78 <_ZN14USBDeviceClass6initEPEmm+0xd8>)
    5aac:	015a      	lsls	r2, r3, #5
    5aae:	18a2      	adds	r2, r4, r2
    5ab0:	6991      	ldr	r1, [r2, #24]
    5ab2:	4832      	ldr	r0, [pc, #200]	; (5b7c <_ZN14USBDeviceClass6initEPEmm+0xdc>)
		usbd.epBank1SetAddress(ep, &udd_ep_in_cache_buffer[ep]);
    5ab4:	01ad      	lsls	r5, r5, #6
    5ab6:	4008      	ands	r0, r1
    5ab8:	21c0      	movs	r1, #192	; 0xc0
    5aba:	0589      	lsls	r1, r1, #22
    5abc:	4301      	orrs	r1, r0
    5abe:	6191      	str	r1, [r2, #24]
    5ac0:	492f      	ldr	r1, [pc, #188]	; (5b80 <_ZN14USBDeviceClass6initEPEmm+0xe0>)
	inline void epBank1SetType(ep_t ep, uint8_t type) { usb.DeviceEndpoint[ep].EPCFG.bit.EPTYPE1 = type; }
    5ac2:	6820      	ldr	r0, [r4, #0]
    5ac4:	194d      	adds	r5, r1, r5
    5ac6:	2170      	movs	r1, #112	; 0x70
    5ac8:	3308      	adds	r3, #8
	inline void epBank1SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[1].ADDR.reg = (uint32_t)addr; }
    5aca:	6155      	str	r5, [r2, #20]
	inline void epBank1SetType(ep_t ep, uint8_t type) { usb.DeviceEndpoint[ep].EPCFG.bit.EPTYPE1 = type; }
    5acc:	015b      	lsls	r3, r3, #5
    5ace:	5c1a      	ldrb	r2, [r3, r0]
    5ad0:	438a      	bics	r2, r1
    5ad2:	0011      	movs	r1, r2
    5ad4:	2240      	movs	r2, #64	; 0x40
    5ad6:	430a      	orrs	r2, r1
    5ad8:	541a      	strb	r2, [r3, r0]
}
    5ada:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
	else if (config == (USB_ENDPOINT_TYPE_BULK | USB_ENDPOINT_OUT(0)))
    5adc:	2a02      	cmp	r2, #2
    5ade:	d145      	bne.n	5b6c <_ZN14USBDeviceClass6initEPEmm+0xcc>
		if (epHandlers[ep] != NULL) {
    5ae0:	4a28      	ldr	r2, [pc, #160]	; (5b84 <_ZN14USBDeviceClass6initEPEmm+0xe4>)
    5ae2:	008b      	lsls	r3, r1, #2
    5ae4:	5898      	ldr	r0, [r3, r2]
    5ae6:	2800      	cmp	r0, #0
    5ae8:	d002      	beq.n	5af0 <_ZN14USBDeviceClass6initEPEmm+0x50>
			delete (DoubleBufferedEPOutHandler*)epHandlers[ep];
    5aea:	6803      	ldr	r3, [r0, #0]
    5aec:	691b      	ldr	r3, [r3, #16]
    5aee:	4798      	blx	r3
		epHandlers[ep] = new DoubleBufferedEPOutHandler(usbd, ep, 256);
    5af0:	2038      	movs	r0, #56	; 0x38
    5af2:	f7ff fa45 	bl	4f80 <_Znwj>
		notify(false)
    5af6:	4b24      	ldr	r3, [pc, #144]	; (5b88 <_ZN14USBDeviceClass6initEPEmm+0xe8>)
    5af8:	2780      	movs	r7, #128	; 0x80
    5afa:	6003      	str	r3, [r0, #0]
    5afc:	2300      	movs	r3, #0
    5afe:	4e1e      	ldr	r6, [pc, #120]	; (5b78 <_ZN14USBDeviceClass6initEPEmm+0xd8>)
    5b00:	007f      	lsls	r7, r7, #1
    5b02:	1d42      	adds	r2, r0, #5
    5b04:	6203      	str	r3, [r0, #32]
    5b06:	6103      	str	r3, [r0, #16]
    5b08:	6143      	str	r3, [r0, #20]
    5b0a:	61c3      	str	r3, [r0, #28]
    5b0c:	6046      	str	r6, [r0, #4]
    5b0e:	6085      	str	r5, [r0, #8]
    5b10:	60c7      	str	r7, [r0, #12]
    5b12:	77d3      	strb	r3, [r2, #31]
    5b14:	322f      	adds	r2, #47	; 0x2f
    5b16:	62c3      	str	r3, [r0, #44]	; 0x2c
    5b18:	6303      	str	r3, [r0, #48]	; 0x30
    5b1a:	0004      	movs	r4, r0
    5b1c:	7013      	strb	r3, [r2, #0]
		data0 = reinterpret_cast<uint8_t *>(malloc(size));
    5b1e:	0038      	movs	r0, r7
		notify(false)
    5b20:	7053      	strb	r3, [r2, #1]
		data0 = reinterpret_cast<uint8_t *>(malloc(size));
    5b22:	f003 fa31 	bl	8f88 <malloc>
    5b26:	9001      	str	r0, [sp, #4]
    5b28:	61a0      	str	r0, [r4, #24]
		data1 = reinterpret_cast<uint8_t *>(malloc(size));
    5b2a:	0038      	movs	r0, r7
    5b2c:	f003 fa2c 	bl	8f88 <malloc>
	inline void epBank0SetSize(ep_t ep, uint16_t size) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.SIZE = EP_PCKSIZE_SIZE(size); }
    5b30:	b2eb      	uxtb	r3, r5
    5b32:	015a      	lsls	r2, r3, #5
		data1 = reinterpret_cast<uint8_t *>(malloc(size));
    5b34:	62a0      	str	r0, [r4, #40]	; 0x28
	inline void epBank0SetSize(ep_t ep, uint16_t size) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.SIZE = EP_PCKSIZE_SIZE(size); }
    5b36:	18b2      	adds	r2, r6, r2
    5b38:	6891      	ldr	r1, [r2, #8]
    5b3a:	4810      	ldr	r0, [pc, #64]	; (5b7c <_ZN14USBDeviceClass6initEPEmm+0xdc>)
	inline void epBank0SetType(ep_t ep, uint8_t type) { usb.DeviceEndpoint[ep].EPCFG.bit.EPTYPE0 = type; }
    5b3c:	3308      	adds	r3, #8
	inline void epBank0SetSize(ep_t ep, uint16_t size) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.SIZE = EP_PCKSIZE_SIZE(size); }
    5b3e:	4008      	ands	r0, r1
    5b40:	21c0      	movs	r1, #192	; 0xc0
    5b42:	0589      	lsls	r1, r1, #22
    5b44:	4301      	orrs	r1, r0
    5b46:	6091      	str	r1, [r2, #8]
	inline void epBank0SetType(ep_t ep, uint8_t type) { usb.DeviceEndpoint[ep].EPCFG.bit.EPTYPE0 = type; }
    5b48:	6831      	ldr	r1, [r6, #0]
    5b4a:	2607      	movs	r6, #7
    5b4c:	015b      	lsls	r3, r3, #5
    5b4e:	5c58      	ldrb	r0, [r3, r1]
    5b50:	00ad      	lsls	r5, r5, #2
    5b52:	43b0      	bics	r0, r6
    5b54:	0006      	movs	r6, r0
    5b56:	2003      	movs	r0, #3
    5b58:	4330      	orrs	r0, r6
    5b5a:	5458      	strb	r0, [r3, r1]
	inline void epBank0SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[0].ADDR.reg = (uint32_t)addr; }
    5b5c:	9b01      	ldr	r3, [sp, #4]
		release();
    5b5e:	0020      	movs	r0, r4
	inline void epBank0SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[0].ADDR.reg = (uint32_t)addr; }
    5b60:	6053      	str	r3, [r2, #4]
		release();
    5b62:	f7ff fd97 	bl	5694 <_ZN26DoubleBufferedEPOutHandler7releaseEv>
    5b66:	4b07      	ldr	r3, [pc, #28]	; (5b84 <_ZN14USBDeviceClass6initEPEmm+0xe4>)
    5b68:	515c      	str	r4, [r3, r5]
    5b6a:	e7b6      	b.n	5ada <_ZN14USBDeviceClass6initEPEmm+0x3a>
    5b6c:	0011      	movs	r1, r2
    5b6e:	0028      	movs	r0, r5
    5b70:	f7ff fca8 	bl	54c4 <_ZN14USBDeviceClass6initEPEmm.part.5>
}
    5b74:	e7b1      	b.n	5ada <_ZN14USBDeviceClass6initEPEmm+0x3a>
    5b76:	46c0      	nop			; (mov r8, r8)
    5b78:	20000ae0 	.word	0x20000ae0
    5b7c:	8fffffff 	.word	0x8fffffff
    5b80:	20000654 	.word	0x20000654
    5b84:	2000062c 	.word	0x2000062c
    5b88:	0000b6bc 	.word	0x0000b6bc

00005b8c <_ZN14USBDeviceClass13initEndpointsEv>:
void USBDeviceClass::initEndpoints() {
    5b8c:	b570      	push	{r4, r5, r6, lr}
    5b8e:	0005      	movs	r5, r0
    5b90:	2401      	movs	r4, #1
	for (uint8_t i = 1; i < sizeof(EndPoints) && EndPoints[i] != 0; i++) {
    5b92:	4b06      	ldr	r3, [pc, #24]	; (5bac <_ZN14USBDeviceClass13initEndpointsEv+0x20>)
    5b94:	00a2      	lsls	r2, r4, #2
    5b96:	58d2      	ldr	r2, [r2, r3]
    5b98:	2a00      	cmp	r2, #0
    5b9a:	d005      	beq.n	5ba8 <_ZN14USBDeviceClass13initEndpointsEv+0x1c>
		initEP(i, EndPoints[i]);
    5b9c:	0021      	movs	r1, r4
    5b9e:	0028      	movs	r0, r5
    5ba0:	f7ff ff7e 	bl	5aa0 <_ZN14USBDeviceClass6initEPEmm>
    5ba4:	3401      	adds	r4, #1
	for (uint8_t i = 1; i < sizeof(EndPoints) && EndPoints[i] != 0; i++) {
    5ba6:	e7f4      	b.n	5b92 <_ZN14USBDeviceClass13initEndpointsEv+0x6>
}
    5ba8:	bd70      	pop	{r4, r5, r6, pc}
    5baa:	46c0      	nop			; (mov r8, r8)
    5bac:	2000005c 	.word	0x2000005c

00005bb0 <_ZN14USBDeviceClass9availableEm>:
}

// Number of bytes, assumes a rx endpoint
uint32_t USBDeviceClass::available(uint32_t ep)
{
	if (epHandlers[ep]) {
    5bb0:	4b08      	ldr	r3, [pc, #32]	; (5bd4 <_ZN14USBDeviceClass9availableEm+0x24>)
    5bb2:	008a      	lsls	r2, r1, #2
    5bb4:	58d0      	ldr	r0, [r2, r3]
{
    5bb6:	b510      	push	{r4, lr}
	if (epHandlers[ep]) {
    5bb8:	2800      	cmp	r0, #0
    5bba:	d003      	beq.n	5bc4 <_ZN14USBDeviceClass9availableEm+0x14>
		return epHandlers[ep]->available();
    5bbc:	6803      	ldr	r3, [r0, #0]
    5bbe:	689b      	ldr	r3, [r3, #8]
    5bc0:	4798      	blx	r3
	} else {
		return usbd.epBank0ByteCount(ep);
	}
}
    5bc2:	bd10      	pop	{r4, pc}
	inline uint16_t epBank0ByteCount(ep_t ep) { return EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT; }
    5bc4:	b2c9      	uxtb	r1, r1
    5bc6:	4b04      	ldr	r3, [pc, #16]	; (5bd8 <_ZN14USBDeviceClass9availableEm+0x28>)
    5bc8:	0149      	lsls	r1, r1, #5
    5bca:	1859      	adds	r1, r3, r1
    5bcc:	6888      	ldr	r0, [r1, #8]
    5bce:	0480      	lsls	r0, r0, #18
    5bd0:	0c80      	lsrs	r0, r0, #18
		return usbd.epBank0ByteCount(ep);
    5bd2:	e7f6      	b.n	5bc2 <_ZN14USBDeviceClass9availableEm+0x12>
    5bd4:	2000062c 	.word	0x2000062c
    5bd8:	20000ae0 	.word	0x20000ae0

00005bdc <_ZN14USBDeviceClass5flushEm>:
{
    5bdc:	b510      	push	{r4, lr}
    5bde:	000c      	movs	r4, r1
	if (available(ep)) {
    5be0:	f7ff ffe6 	bl	5bb0 <_ZN14USBDeviceClass9availableEm>
    5be4:	2800      	cmp	r0, #0
    5be6:	d00c      	beq.n	5c02 <_ZN14USBDeviceClass5flushEm+0x26>
	inline void epBank1SetReady(ep_t ep)   { usb.DeviceEndpoint[ep].EPSTATUSSET.bit.BK1RDY = 1; }
    5be8:	4b06      	ldr	r3, [pc, #24]	; (5c04 <_ZN14USBDeviceClass5flushEm+0x28>)
    5bea:	b2e4      	uxtb	r4, r4
    5bec:	681b      	ldr	r3, [r3, #0]
    5bee:	3408      	adds	r4, #8
    5bf0:	0164      	lsls	r4, r4, #5
    5bf2:	191c      	adds	r4, r3, r4
    5bf4:	2380      	movs	r3, #128	; 0x80
    5bf6:	7962      	ldrb	r2, [r4, #5]
    5bf8:	425b      	negs	r3, r3
    5bfa:	4313      	orrs	r3, r2
    5bfc:	7163      	strb	r3, [r4, #5]
	inline void epBank1AckTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTFLAG.reg = USB_DEVICE_EPINTFLAG_TRCPT(2); }
    5bfe:	2302      	movs	r3, #2
    5c00:	71e3      	strb	r3, [r4, #7]
}
    5c02:	bd10      	pop	{r4, pc}
    5c04:	20000ae0 	.word	0x20000ae0

00005c08 <_ZN14USBDeviceClass14armRecvCtrlOUTEm>:
		return c;
	}
}

uint8_t USBDeviceClass::armRecvCtrlOUT(uint32_t ep)
{
    5c08:	b570      	push	{r4, r5, r6, lr}
	// Get endpoint configuration from setting register
	usbd.epBank0SetAddress(ep, &udd_ep_out_cache_buffer[ep]);
    5c0a:	4b13      	ldr	r3, [pc, #76]	; (5c58 <_ZN14USBDeviceClass14armRecvCtrlOUTEm+0x50>)
	inline void epBank0SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[0].ADDR.reg = (uint32_t)addr; }
    5c0c:	b2cc      	uxtb	r4, r1
    5c0e:	4a13      	ldr	r2, [pc, #76]	; (5c5c <_ZN14USBDeviceClass14armRecvCtrlOUTEm+0x54>)
    5c10:	0160      	lsls	r0, r4, #5
    5c12:	0189      	lsls	r1, r1, #6
    5c14:	1859      	adds	r1, r3, r1
    5c16:	1813      	adds	r3, r2, r0
    5c18:	6059      	str	r1, [r3, #4]
	inline void epBank0SetMultiPacketSize(ep_t ep, uint16_t s) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.MULTI_PACKET_SIZE = s; }
    5c1a:	6899      	ldr	r1, [r3, #8]
    5c1c:	4d10      	ldr	r5, [pc, #64]	; (5c60 <_ZN14USBDeviceClass14armRecvCtrlOUTEm+0x58>)
	inline void epBank0ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK0RDY = 1; }
    5c1e:	3408      	adds	r4, #8
	inline void epBank0SetMultiPacketSize(ep_t ep, uint16_t s) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.MULTI_PACKET_SIZE = s; }
    5c20:	400d      	ands	r5, r1
    5c22:	2180      	movs	r1, #128	; 0x80
    5c24:	0289      	lsls	r1, r1, #10
    5c26:	4329      	orrs	r1, r5
	inline void epBank0ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK0RDY = 1; }
    5c28:	2540      	movs	r5, #64	; 0x40
	inline void epBank0SetMultiPacketSize(ep_t ep, uint16_t s) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.MULTI_PACKET_SIZE = s; }
    5c2a:	6099      	str	r1, [r3, #8]
	inline void epBank0SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT = bc; }
    5c2c:	6899      	ldr	r1, [r3, #8]
    5c2e:	0b89      	lsrs	r1, r1, #14
    5c30:	0389      	lsls	r1, r1, #14
    5c32:	6099      	str	r1, [r3, #8]
	inline void epBank0ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK0RDY = 1; }
    5c34:	6811      	ldr	r1, [r2, #0]
    5c36:	0163      	lsls	r3, r4, #5
    5c38:	18cb      	adds	r3, r1, r3
    5c3a:	791e      	ldrb	r6, [r3, #4]
    5c3c:	4335      	orrs	r5, r6
    5c3e:	711d      	strb	r5, [r3, #4]
	inline bool epBank0IsReady(ep_t ep)    { return usb.DeviceEndpoint[ep].EPSTATUS.bit.BK0RDY; }
    5c40:	799d      	ldrb	r5, [r3, #6]
	usbd.epBank0SetByteCount(ep, 0);

	usbd.epBank0ResetReady(ep);

	// Wait OUT
	while (!usbd.epBank0IsReady(ep)) {}
    5c42:	066d      	lsls	r5, r5, #25
    5c44:	d5fc      	bpl.n	5c40 <_ZN14USBDeviceClass14armRecvCtrlOUTEm+0x38>
	inline bool epBank0IsTransferComplete(ep_t ep)  { return usb.DeviceEndpoint[ep].EPINTFLAG.bit.TRCPT0; }
    5c46:	0164      	lsls	r4, r4, #5
    5c48:	1909      	adds	r1, r1, r4
    5c4a:	79cb      	ldrb	r3, [r1, #7]
	while (!usbd.epBank0IsTransferComplete(ep)) {}
    5c4c:	07db      	lsls	r3, r3, #31
    5c4e:	d5fc      	bpl.n	5c4a <_ZN14USBDeviceClass14armRecvCtrlOUTEm+0x42>
	inline uint16_t epBank0ByteCount(ep_t ep) { return EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT; }
    5c50:	1812      	adds	r2, r2, r0
    5c52:	6890      	ldr	r0, [r2, #8]
	return usbd.epBank0ByteCount(ep);
    5c54:	b2c0      	uxtb	r0, r0
}
    5c56:	bd70      	pop	{r4, r5, r6, pc}
    5c58:	20000814 	.word	0x20000814
    5c5c:	20000ae0 	.word	0x20000ae0
    5c60:	f0003fff 	.word	0xf0003fff

00005c64 <_ZN14USBDeviceClass11recvControlEPvm>:
{
    5c64:	b570      	push	{r4, r5, r6, lr}
    5c66:	0014      	movs	r4, r2
	inline void epBank0ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK0RDY = 1; }
    5c68:	2240      	movs	r2, #64	; 0x40
    5c6a:	4b0b      	ldr	r3, [pc, #44]	; (5c98 <_ZN14USBDeviceClass11recvControlEPvm+0x34>)
    5c6c:	000d      	movs	r5, r1
    5c6e:	681b      	ldr	r3, [r3, #0]
    5c70:	33ff      	adds	r3, #255	; 0xff
    5c72:	7959      	ldrb	r1, [r3, #5]
    5c74:	430a      	orrs	r2, r1
    5c76:	715a      	strb	r2, [r3, #5]
	uint32_t read = armRecvCtrlOUT(0);
    5c78:	2100      	movs	r1, #0
    5c7a:	f7ff ffc5 	bl	5c08 <_ZN14USBDeviceClass14armRecvCtrlOUTEm>
    5c7e:	42a0      	cmp	r0, r4
    5c80:	d900      	bls.n	5c84 <_ZN14USBDeviceClass11recvControlEPvm+0x20>
    5c82:	0020      	movs	r0, r4
	for (uint32_t i=0; i<len; i++) {
    5c84:	2300      	movs	r3, #0
		data[i] = buffer[i];
    5c86:	4905      	ldr	r1, [pc, #20]	; (5c9c <_ZN14USBDeviceClass11recvControlEPvm+0x38>)
	for (uint32_t i=0; i<len; i++) {
    5c88:	42a3      	cmp	r3, r4
    5c8a:	d003      	beq.n	5c94 <_ZN14USBDeviceClass11recvControlEPvm+0x30>
		data[i] = buffer[i];
    5c8c:	5c5a      	ldrb	r2, [r3, r1]
    5c8e:	54ea      	strb	r2, [r5, r3]
	for (uint32_t i=0; i<len; i++) {
    5c90:	3301      	adds	r3, #1
    5c92:	e7f9      	b.n	5c88 <_ZN14USBDeviceClass11recvControlEPvm+0x24>
}
    5c94:	bd70      	pop	{r4, r5, r6, pc}
    5c96:	46c0      	nop			; (mov r8, r8)
    5c98:	20000ae0 	.word	0x20000ae0
    5c9c:	20000814 	.word	0x20000814

00005ca0 <_ZN14USBDeviceClass7armRecvEm>:

uint8_t USBDeviceClass::armRecv(uint32_t ep)
{
    5ca0:	b510      	push	{r4, lr}
	inline uint16_t epBank0ByteCount(ep_t ep) { return EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT; }
    5ca2:	b2c9      	uxtb	r1, r1
    5ca4:	480b      	ldr	r0, [pc, #44]	; (5cd4 <_ZN14USBDeviceClass7armRecvEm+0x34>)
    5ca6:	0149      	lsls	r1, r1, #5
    5ca8:	1842      	adds	r2, r0, r1
    5caa:	6893      	ldr	r3, [r2, #8]
    5cac:	049b      	lsls	r3, r3, #18
    5cae:	0c9b      	lsrs	r3, r3, #18
	uint16_t count = usbd.epBank0ByteCount(ep);
	if (count >= 64) {
    5cb0:	2b3f      	cmp	r3, #63	; 0x3f
    5cb2:	dd0b      	ble.n	5ccc <_ZN14USBDeviceClass7armRecvEm+0x2c>
	inline void epBank0SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT = bc; }
    5cb4:	6894      	ldr	r4, [r2, #8]
		usbd.epBank0SetByteCount(ep, count - 64);
    5cb6:	3b40      	subs	r3, #64	; 0x40
    5cb8:	049b      	lsls	r3, r3, #18
    5cba:	0ba4      	lsrs	r4, r4, #14
    5cbc:	0c9b      	lsrs	r3, r3, #18
    5cbe:	03a4      	lsls	r4, r4, #14
    5cc0:	4323      	orrs	r3, r4
    5cc2:	6093      	str	r3, [r2, #8]
	inline uint16_t epBank0ByteCount(ep_t ep) { return EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT; }
    5cc4:	1841      	adds	r1, r0, r1
    5cc6:	6888      	ldr	r0, [r1, #8]
	} else {
		usbd.epBank0SetByteCount(ep, 0);
	}
	return usbd.epBank0ByteCount(ep);
    5cc8:	b2c0      	uxtb	r0, r0
}
    5cca:	bd10      	pop	{r4, pc}
	inline void epBank0SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[0].PCKSIZE.bit.BYTE_COUNT = bc; }
    5ccc:	6893      	ldr	r3, [r2, #8]
    5cce:	0b9b      	lsrs	r3, r3, #14
    5cd0:	039b      	lsls	r3, r3, #14
    5cd2:	e7f6      	b.n	5cc2 <_ZN14USBDeviceClass7armRecvEm+0x22>
    5cd4:	20000ae0 	.word	0x20000ae0

00005cd8 <_ZN14USBDeviceClass4recvEmPvm>:
{
    5cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
    5cda:	001c      	movs	r4, r3
	if (!_usbConfiguration)
    5cdc:	4b2a      	ldr	r3, [pc, #168]	; (5d88 <_ZN14USBDeviceClass4recvEmPvm+0xb0>)
{
    5cde:	b085      	sub	sp, #20
	if (!_usbConfiguration)
    5ce0:	681b      	ldr	r3, [r3, #0]
{
    5ce2:	0006      	movs	r6, r0
    5ce4:	000d      	movs	r5, r1
    5ce6:	9201      	str	r2, [sp, #4]
	if (!_usbConfiguration)
    5ce8:	2b00      	cmp	r3, #0
    5cea:	d04a      	beq.n	5d82 <_ZN14USBDeviceClass4recvEmPvm+0xaa>
	if (epHandlers[ep]) {
    5cec:	4b27      	ldr	r3, [pc, #156]	; (5d8c <_ZN14USBDeviceClass4recvEmPvm+0xb4>)
    5cee:	008a      	lsls	r2, r1, #2
    5cf0:	58d0      	ldr	r0, [r2, r3]
    5cf2:	2800      	cmp	r0, #0
    5cf4:	d008      	beq.n	5d08 <_ZN14USBDeviceClass4recvEmPvm+0x30>
		return epHandlers[ep]->recv(_data, len);
    5cf6:	6803      	ldr	r3, [r0, #0]
    5cf8:	0022      	movs	r2, r4
    5cfa:	685b      	ldr	r3, [r3, #4]
    5cfc:	9901      	ldr	r1, [sp, #4]
    5cfe:	4798      	blx	r3
    5d00:	0004      	movs	r4, r0
}
    5d02:	0020      	movs	r0, r4
    5d04:	b005      	add	sp, #20
    5d06:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (available(ep) < len)
    5d08:	0030      	movs	r0, r6
    5d0a:	f7ff ff51 	bl	5bb0 <_ZN14USBDeviceClass9availableEm>
    5d0e:	4284      	cmp	r4, r0
    5d10:	d904      	bls.n	5d1c <_ZN14USBDeviceClass4recvEmPvm+0x44>
		len = available(ep);
    5d12:	0029      	movs	r1, r5
    5d14:	0030      	movs	r0, r6
    5d16:	f7ff ff4b 	bl	5bb0 <_ZN14USBDeviceClass9availableEm>
    5d1a:	0004      	movs	r4, r0
	armRecv(ep);
    5d1c:	0029      	movs	r1, r5
    5d1e:	0030      	movs	r0, r6
    5d20:	f7ff ffbe 	bl	5ca0 <_ZN14USBDeviceClass7armRecvEm>
	inline void epBank0DisableTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTENCLR.bit.TRCPT0 = 1; }
    5d24:	2101      	movs	r1, #1
    5d26:	b2eb      	uxtb	r3, r5
    5d28:	4f19      	ldr	r7, [pc, #100]	; (5d90 <_ZN14USBDeviceClass4recvEmPvm+0xb8>)
    5d2a:	9303      	str	r3, [sp, #12]
    5d2c:	015b      	lsls	r3, r3, #5
    5d2e:	9302      	str	r3, [sp, #8]
    5d30:	9a02      	ldr	r2, [sp, #8]
    5d32:	683b      	ldr	r3, [r7, #0]
	memcpy(_data, udd_ep_out_cache_buffer[ep], len);
    5d34:	9801      	ldr	r0, [sp, #4]
    5d36:	189b      	adds	r3, r3, r2
    5d38:	33ff      	adds	r3, #255	; 0xff
    5d3a:	7a5a      	ldrb	r2, [r3, #9]
    5d3c:	430a      	orrs	r2, r1
    5d3e:	4915      	ldr	r1, [pc, #84]	; (5d94 <_ZN14USBDeviceClass4recvEmPvm+0xbc>)
    5d40:	725a      	strb	r2, [r3, #9]
    5d42:	01ab      	lsls	r3, r5, #6
    5d44:	18c9      	adds	r1, r1, r3
    5d46:	0022      	movs	r2, r4
    5d48:	f003 f953 	bl	8ff2 <memcpy>
	if (len && !available(ep)) {
    5d4c:	2c00      	cmp	r4, #0
    5d4e:	d0d8      	beq.n	5d02 <_ZN14USBDeviceClass4recvEmPvm+0x2a>
    5d50:	0029      	movs	r1, r5
    5d52:	0030      	movs	r0, r6
    5d54:	f7ff ff2c 	bl	5bb0 <_ZN14USBDeviceClass9availableEm>
    5d58:	2800      	cmp	r0, #0
    5d5a:	d1d2      	bne.n	5d02 <_ZN14USBDeviceClass4recvEmPvm+0x2a>
	inline void epBank0ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK0RDY = 1; }
    5d5c:	2140      	movs	r1, #64	; 0x40
    5d5e:	9b03      	ldr	r3, [sp, #12]
    5d60:	683a      	ldr	r2, [r7, #0]
    5d62:	3308      	adds	r3, #8
    5d64:	015b      	lsls	r3, r3, #5
    5d66:	18d3      	adds	r3, r2, r3
    5d68:	7918      	ldrb	r0, [r3, #4]
    5d6a:	4301      	orrs	r1, r0
    5d6c:	7119      	strb	r1, [r3, #4]
	inline void epBank0AckTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTFLAG.reg = USB_DEVICE_EPINTFLAG_TRCPT(1); }
    5d6e:	2101      	movs	r1, #1
    5d70:	71d9      	strb	r1, [r3, #7]
	inline void epBank0EnableTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTENSET.bit.TRCPT0 = 1; }
    5d72:	2101      	movs	r1, #1
    5d74:	9b02      	ldr	r3, [sp, #8]
    5d76:	18d3      	adds	r3, r2, r3
    5d78:	33ff      	adds	r3, #255	; 0xff
    5d7a:	7a9a      	ldrb	r2, [r3, #10]
    5d7c:	430a      	orrs	r2, r1
    5d7e:	729a      	strb	r2, [r3, #10]
    5d80:	e7bf      	b.n	5d02 <_ZN14USBDeviceClass4recvEmPvm+0x2a>
		return -1;
    5d82:	2401      	movs	r4, #1
    5d84:	4264      	negs	r4, r4
    5d86:	e7bc      	b.n	5d02 <_ZN14USBDeviceClass4recvEmPvm+0x2a>
    5d88:	20000ad8 	.word	0x20000ad8
    5d8c:	2000062c 	.word	0x2000062c
    5d90:	20000ae0 	.word	0x20000ae0
    5d94:	20000814 	.word	0x20000814

00005d98 <_ZN14USBDeviceClass4recvEm>:
{
    5d98:	b513      	push	{r0, r1, r4, lr}
	if (recv(ep, &c, 1) != 1) {
    5d9a:	466b      	mov	r3, sp
    5d9c:	1ddc      	adds	r4, r3, #7
    5d9e:	0022      	movs	r2, r4
    5da0:	2301      	movs	r3, #1
    5da2:	f7ff ff99 	bl	5cd8 <_ZN14USBDeviceClass4recvEmPvm>
    5da6:	2801      	cmp	r0, #1
    5da8:	d101      	bne.n	5dae <_ZN14USBDeviceClass4recvEm+0x16>
		return c;
    5daa:	7820      	ldrb	r0, [r4, #0]
}
    5dac:	bd16      	pop	{r1, r2, r4, pc}
		return -1;
    5dae:	2001      	movs	r0, #1
    5db0:	4240      	negs	r0, r0
    5db2:	e7fb      	b.n	5dac <_ZN14USBDeviceClass4recvEm+0x14>

00005db4 <_ZN14USBDeviceClass4sendEmPKvm>:
	0
};

// Blocking Send of data to an endpoint
uint32_t USBDeviceClass::send(uint32_t ep, const void *data, uint32_t len)
{
    5db4:	b5f0      	push	{r4, r5, r6, r7, lr}
    5db6:	001e      	movs	r6, r3
	uint32_t written = 0;
	uint32_t length = 0;

	if (!_usbConfiguration)
    5db8:	4b35      	ldr	r3, [pc, #212]	; (5e90 <_ZN14USBDeviceClass4sendEmPKvm+0xdc>)
{
    5dba:	b085      	sub	sp, #20
	if (!_usbConfiguration)
    5dbc:	681b      	ldr	r3, [r3, #0]
{
    5dbe:	000f      	movs	r7, r1
    5dc0:	9201      	str	r2, [sp, #4]
	if (!_usbConfiguration)
    5dc2:	2b00      	cmp	r3, #0
    5dc4:	d035      	beq.n	5e32 <_ZN14USBDeviceClass4sendEmPKvm+0x7e>
		return -1;
	if (len > 16384)
    5dc6:	2380      	movs	r3, #128	; 0x80
    5dc8:	01db      	lsls	r3, r3, #7
    5dca:	429e      	cmp	r6, r3
    5dcc:	d831      	bhi.n	5e32 <_ZN14USBDeviceClass4sendEmPKvm+0x7e>
	inline void epBank1SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[1].ADDR.reg = (uint32_t)addr; }
    5dce:	2500      	movs	r5, #0
		} else {
			length = len;
		}

		/* memcopy could be safer in multi threaded environment */
		memcpy(&udd_ep_in_cache_buffer[ep], data, length);
    5dd0:	4a30      	ldr	r2, [pc, #192]	; (5e94 <_ZN14USBDeviceClass4sendEmPKvm+0xe0>)
    5dd2:	018b      	lsls	r3, r1, #6
    5dd4:	18d3      	adds	r3, r2, r3
    5dd6:	9302      	str	r3, [sp, #8]
	while (len != 0)
    5dd8:	2e00      	cmp	r6, #0
    5dda:	d02c      	beq.n	5e36 <_ZN14USBDeviceClass4sendEmPKvm+0x82>
	inline bool epBank1IsReady(ep_t ep)    { return usb.DeviceEndpoint[ep].EPSTATUS.bit.BK1RDY; }
    5ddc:	4b2e      	ldr	r3, [pc, #184]	; (5e98 <_ZN14USBDeviceClass4sendEmPKvm+0xe4>)
    5dde:	681b      	ldr	r3, [r3, #0]
    5de0:	9303      	str	r3, [sp, #12]
    5de2:	23ff      	movs	r3, #255	; 0xff
    5de4:	403b      	ands	r3, r7
    5de6:	001c      	movs	r4, r3
    5de8:	9300      	str	r3, [sp, #0]
    5dea:	3408      	adds	r4, #8
    5dec:	9b03      	ldr	r3, [sp, #12]
    5dee:	0164      	lsls	r4, r4, #5
    5df0:	191c      	adds	r4, r3, r4
    5df2:	79a3      	ldrb	r3, [r4, #6]
    5df4:	09db      	lsrs	r3, r3, #7
		if (usbd.epBank1IsReady(ep)) {
    5df6:	d021      	beq.n	5e3c <_ZN14USBDeviceClass4sendEmPKvm+0x88>
			uint32_t timeout = microsecondsToClockCycles(TX_TIMEOUT_MS * 1000) / 23;
    5df8:	4b28      	ldr	r3, [pc, #160]	; (5e9c <_ZN14USBDeviceClass4sendEmPKvm+0xe8>)
    5dfa:	4929      	ldr	r1, [pc, #164]	; (5ea0 <_ZN14USBDeviceClass4sendEmPKvm+0xec>)
    5dfc:	6818      	ldr	r0, [r3, #0]
    5dfe:	f001 f955 	bl	70ac <__udivsi3>
    5e02:	4b28      	ldr	r3, [pc, #160]	; (5ea4 <_ZN14USBDeviceClass4sendEmPKvm+0xf0>)
    5e04:	2117      	movs	r1, #23
    5e06:	4358      	muls	r0, r3
    5e08:	f001 f950 	bl	70ac <__udivsi3>
				if (LastTransmitTimedOut[ep] || timeout-- == 0) {
    5e0c:	4b26      	ldr	r3, [pc, #152]	; (5ea8 <_ZN14USBDeviceClass4sendEmPKvm+0xf4>)
	inline bool epBank1IsTransferComplete(ep_t ep)  { return usb.DeviceEndpoint[ep].EPINTFLAG.bit.TRCPT1; }
    5e0e:	79e2      	ldrb	r2, [r4, #7]
			while (!usbd.epBank1IsTransferComplete(ep)) {
    5e10:	0792      	lsls	r2, r2, #30
    5e12:	d413      	bmi.n	5e3c <_ZN14USBDeviceClass4sendEmPKvm+0x88>
				if (LastTransmitTimedOut[ep] || timeout-- == 0) {
    5e14:	5dda      	ldrb	r2, [r3, r7]
    5e16:	2a00      	cmp	r2, #0
    5e18:	d101      	bne.n	5e1e <_ZN14USBDeviceClass4sendEmPKvm+0x6a>
    5e1a:	3801      	subs	r0, #1
    5e1c:	d2f7      	bcs.n	5e0e <_ZN14USBDeviceClass4sendEmPKvm+0x5a>
					LastTransmitTimedOut[ep] = 1;
    5e1e:	2201      	movs	r2, #1
    5e20:	55da      	strb	r2, [r3, r7]
	inline void epBank1SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[1].PCKSIZE.bit.BYTE_COUNT = bc; }
    5e22:	9b00      	ldr	r3, [sp, #0]
    5e24:	015a      	lsls	r2, r3, #5
    5e26:	4b1c      	ldr	r3, [pc, #112]	; (5e98 <_ZN14USBDeviceClass4sendEmPKvm+0xe4>)
    5e28:	189b      	adds	r3, r3, r2
    5e2a:	699a      	ldr	r2, [r3, #24]
    5e2c:	0b92      	lsrs	r2, r2, #14
    5e2e:	0392      	lsls	r2, r2, #14
    5e30:	619a      	str	r2, [r3, #24]
					return -1;
    5e32:	2501      	movs	r5, #1
    5e34:	426d      	negs	r5, r5
		written += length;
		len -= length;
		data = (char *)data + length;
	}
	return written;
}
    5e36:	0028      	movs	r0, r5
    5e38:	b005      	add	sp, #20
    5e3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		LastTransmitTimedOut[ep] = 0;
    5e3c:	2200      	movs	r2, #0
    5e3e:	4b1a      	ldr	r3, [pc, #104]	; (5ea8 <_ZN14USBDeviceClass4sendEmPKvm+0xf4>)
    5e40:	0034      	movs	r4, r6
    5e42:	55da      	strb	r2, [r3, r7]
    5e44:	2e3f      	cmp	r6, #63	; 0x3f
    5e46:	d900      	bls.n	5e4a <_ZN14USBDeviceClass4sendEmPKvm+0x96>
    5e48:	243f      	movs	r4, #63	; 0x3f
		memcpy(&udd_ep_in_cache_buffer[ep], data, length);
    5e4a:	0022      	movs	r2, r4
    5e4c:	9901      	ldr	r1, [sp, #4]
    5e4e:	9802      	ldr	r0, [sp, #8]
    5e50:	f003 f8cf 	bl	8ff2 <memcpy>
	inline void epBank1SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[1].ADDR.reg = (uint32_t)addr; }
    5e54:	9b00      	ldr	r3, [sp, #0]
	inline void epBank1SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[1].PCKSIZE.bit.BYTE_COUNT = bc; }
    5e56:	04a1      	lsls	r1, r4, #18
	inline void epBank1SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[1].ADDR.reg = (uint32_t)addr; }
    5e58:	015a      	lsls	r2, r3, #5
    5e5a:	4b0f      	ldr	r3, [pc, #60]	; (5e98 <_ZN14USBDeviceClass4sendEmPKvm+0xe4>)
	inline void epBank1SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[1].PCKSIZE.bit.BYTE_COUNT = bc; }
    5e5c:	0c89      	lsrs	r1, r1, #18
	inline void epBank1SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[1].ADDR.reg = (uint32_t)addr; }
    5e5e:	189b      	adds	r3, r3, r2
    5e60:	9a02      	ldr	r2, [sp, #8]
		written += length;
    5e62:	192d      	adds	r5, r5, r4
    5e64:	615a      	str	r2, [r3, #20]
	inline void epBank1SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[1].PCKSIZE.bit.BYTE_COUNT = bc; }
    5e66:	699a      	ldr	r2, [r3, #24]
		len -= length;
    5e68:	1b36      	subs	r6, r6, r4
    5e6a:	0b92      	lsrs	r2, r2, #14
    5e6c:	0392      	lsls	r2, r2, #14
    5e6e:	430a      	orrs	r2, r1
    5e70:	619a      	str	r2, [r3, #24]
	inline void epBank1AckTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTFLAG.reg = USB_DEVICE_EPINTFLAG_TRCPT(2); }
    5e72:	9b00      	ldr	r3, [sp, #0]
    5e74:	9a03      	ldr	r2, [sp, #12]
    5e76:	3308      	adds	r3, #8
    5e78:	015b      	lsls	r3, r3, #5
    5e7a:	18d3      	adds	r3, r2, r3
    5e7c:	2202      	movs	r2, #2
    5e7e:	71da      	strb	r2, [r3, #7]
	inline void epBank1SetReady(ep_t ep)   { usb.DeviceEndpoint[ep].EPSTATUSSET.bit.BK1RDY = 1; }
    5e80:	7959      	ldrb	r1, [r3, #5]
    5e82:	3a82      	subs	r2, #130	; 0x82
    5e84:	430a      	orrs	r2, r1
    5e86:	715a      	strb	r2, [r3, #5]
		data = (char *)data + length;
    5e88:	9b01      	ldr	r3, [sp, #4]
    5e8a:	191b      	adds	r3, r3, r4
    5e8c:	9301      	str	r3, [sp, #4]
	while (len != 0)
    5e8e:	e7a3      	b.n	5dd8 <_ZN14USBDeviceClass4sendEmPKvm+0x24>
    5e90:	20000ad8 	.word	0x20000ad8
    5e94:	20000654 	.word	0x20000654
    5e98:	20000ae0 	.word	0x20000ae0
    5e9c:	20000084 	.word	0x20000084
    5ea0:	000f4240 	.word	0x000f4240
    5ea4:	00011170 	.word	0x00011170
    5ea8:	20000649 	.word	0x20000649

00005eac <_ZN14USBDeviceClass7armSendEmPKvm>:

uint32_t USBDeviceClass::armSend(uint32_t ep, const void* data, uint32_t len)
{
    5eac:	b570      	push	{r4, r5, r6, lr}
    5eae:	000d      	movs	r5, r1
    5eb0:	001c      	movs	r4, r3
	memcpy(&udd_ep_in_cache_buffer[ep], data, len);
    5eb2:	4e0d      	ldr	r6, [pc, #52]	; (5ee8 <_ZN14USBDeviceClass7armSendEmPKvm+0x3c>)
    5eb4:	01ab      	lsls	r3, r5, #6
    5eb6:	18f6      	adds	r6, r6, r3
{
    5eb8:	0011      	movs	r1, r2
	memcpy(&udd_ep_in_cache_buffer[ep], data, len);
    5eba:	0030      	movs	r0, r6
    5ebc:	0022      	movs	r2, r4
    5ebe:	f003 f898 	bl	8ff2 <memcpy>
	inline void epBank1SetAddress(ep_t ep, void *addr) { EP[ep].DeviceDescBank[1].ADDR.reg = (uint32_t)addr; }
    5ec2:	b2ed      	uxtb	r5, r5
    5ec4:	4909      	ldr	r1, [pc, #36]	; (5eec <_ZN14USBDeviceClass7armSendEmPKvm+0x40>)
    5ec6:	016d      	lsls	r5, r5, #5
    5ec8:	194d      	adds	r5, r1, r5
    5eca:	616e      	str	r6, [r5, #20]
	inline void epBank1SetMultiPacketSize(ep_t ep, uint16_t s) { EP[ep].DeviceDescBank[1].PCKSIZE.bit.MULTI_PACKET_SIZE = s; }
    5ecc:	69ab      	ldr	r3, [r5, #24]
    5ece:	4a08      	ldr	r2, [pc, #32]	; (5ef0 <_ZN14USBDeviceClass7armSendEmPKvm+0x44>)
	usbd.epBank1SetAddress(ep, &udd_ep_in_cache_buffer[ep]);
	usbd.epBank1SetMultiPacketSize(ep, 0);
	usbd.epBank1SetByteCount(ep, len);

	return len;
}
    5ed0:	0020      	movs	r0, r4
    5ed2:	4013      	ands	r3, r2
    5ed4:	61ab      	str	r3, [r5, #24]
	inline void epBank1SetByteCount(ep_t ep, uint16_t bc) { EP[ep].DeviceDescBank[1].PCKSIZE.bit.BYTE_COUNT = bc; }
    5ed6:	69ab      	ldr	r3, [r5, #24]
    5ed8:	04a2      	lsls	r2, r4, #18
    5eda:	0b9b      	lsrs	r3, r3, #14
    5edc:	0c92      	lsrs	r2, r2, #18
    5ede:	039b      	lsls	r3, r3, #14
    5ee0:	4313      	orrs	r3, r2
    5ee2:	61ab      	str	r3, [r5, #24]
    5ee4:	bd70      	pop	{r4, r5, r6, pc}
    5ee6:	46c0      	nop			; (mov r8, r8)
    5ee8:	20000654 	.word	0x20000654
    5eec:	20000ae0 	.word	0x20000ae0
    5ef0:	f0003fff 	.word	0xf0003fff

00005ef4 <_ZN14USBDeviceClass11sendControlEPKvm>:

uint32_t USBDeviceClass::sendControl(const void* _data, uint32_t len)
{
    5ef4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	const uint8_t *data = reinterpret_cast<const uint8_t *>(_data);
	uint32_t length = len;
	uint32_t sent = 0;
	uint32_t pos = 0;

	if (_dry_run == true)
    5ef6:	4b10      	ldr	r3, [pc, #64]	; (5f38 <_ZN14USBDeviceClass11sendControlEPKvm+0x44>)
{
    5ef8:	9001      	str	r0, [sp, #4]
	if (_dry_run == true)
    5efa:	781b      	ldrb	r3, [r3, #0]
{
    5efc:	000f      	movs	r7, r1
    5efe:	0015      	movs	r5, r2
	if (_dry_run == true)
    5f00:	2b00      	cmp	r3, #0
    5f02:	d10c      	bne.n	5f1e <_ZN14USBDeviceClass11sendControlEPKvm+0x2a>
		return length;

	if (_pack_message == true) {
    5f04:	4b0d      	ldr	r3, [pc, #52]	; (5f3c <_ZN14USBDeviceClass11sendControlEPKvm+0x48>)
    5f06:	0016      	movs	r6, r2
    5f08:	781c      	ldrb	r4, [r3, #0]
    5f0a:	2c00      	cmp	r4, #0
    5f0c:	d009      	beq.n	5f22 <_ZN14USBDeviceClass11sendControlEPKvm+0x2e>
		memcpy(&_pack_buffer[_pack_size], data, len);
    5f0e:	4e0c      	ldr	r6, [pc, #48]	; (5f40 <_ZN14USBDeviceClass11sendControlEPKvm+0x4c>)
    5f10:	480c      	ldr	r0, [pc, #48]	; (5f44 <_ZN14USBDeviceClass11sendControlEPKvm+0x50>)
    5f12:	8834      	ldrh	r4, [r6, #0]
    5f14:	1900      	adds	r0, r0, r4
		_pack_size += len;
    5f16:	1964      	adds	r4, r4, r5
		memcpy(&_pack_buffer[_pack_size], data, len);
    5f18:	f003 f86b 	bl	8ff2 <memcpy>
		_pack_size += len;
    5f1c:	8034      	strh	r4, [r6, #0]
		pos += sent;
		len -= sent;
 	}

	return length;
}
    5f1e:	0028      	movs	r0, r5
    5f20:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 	while (len > 0)
    5f22:	2e00      	cmp	r6, #0
    5f24:	d0fb      	beq.n	5f1e <_ZN14USBDeviceClass11sendControlEPKvm+0x2a>
		sent = armSend(EP0, data + pos, len);
    5f26:	193a      	adds	r2, r7, r4
    5f28:	0033      	movs	r3, r6
    5f2a:	2100      	movs	r1, #0
    5f2c:	9801      	ldr	r0, [sp, #4]
    5f2e:	f7ff ffbd 	bl	5eac <_ZN14USBDeviceClass7armSendEmPKvm>
		pos += sent;
    5f32:	1824      	adds	r4, r4, r0
		len -= sent;
    5f34:	1a36      	subs	r6, r6, r0
 	while (len > 0)
    5f36:	e7f4      	b.n	5f22 <_ZN14USBDeviceClass11sendControlEPKvm+0x2e>
    5f38:	200009d4 	.word	0x200009d4
    5f3c:	20000ad5 	.word	0x20000ad5
    5f40:	20000ad6 	.word	0x20000ad6
    5f44:	200009d5 	.word	0x200009d5

00005f48 <_ZN14USBDeviceClass20sendStringDescriptorEPKhh>:
{
    5f48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		return false;
    5f4a:	2000      	movs	r0, #0
{
    5f4c:	af00      	add	r7, sp, #0
    5f4e:	000e      	movs	r6, r1
    5f50:	0015      	movs	r5, r2
	if (maxlen < 2)
    5f52:	2a01      	cmp	r2, #1
    5f54:	dd26      	ble.n	5fa4 <_ZN14USBDeviceClass20sendStringDescriptorEPKhh+0x5c>
	uint8_t buffer[maxlen];
    5f56:	1dd3      	adds	r3, r2, #7
    5f58:	466a      	mov	r2, sp
    5f5a:	08db      	lsrs	r3, r3, #3
    5f5c:	00db      	lsls	r3, r3, #3
    5f5e:	1ad3      	subs	r3, r2, r3
    5f60:	469d      	mov	sp, r3
	buffer[0] = strlen((const char*)string) * 2 + 2;
    5f62:	0008      	movs	r0, r1
    5f64:	f003 fdc6 	bl	9af4 <strlen>
	uint8_t buffer[maxlen];
    5f68:	466c      	mov	r4, sp
	buffer[1] = 0x03;
    5f6a:	2303      	movs	r3, #3
		buffer[i] = 0;
    5f6c:	2100      	movs	r1, #0
	buffer[0] = strlen((const char*)string) * 2 + 2;
    5f6e:	3001      	adds	r0, #1
    5f70:	0040      	lsls	r0, r0, #1
    5f72:	7020      	strb	r0, [r4, #0]
	buffer[1] = 0x03;
    5f74:	7063      	strb	r3, [r4, #1]
    5f76:	1e5a      	subs	r2, r3, #1
    5f78:	b2d2      	uxtb	r2, r2
	for (i = 2; i < maxlen && *string; i++) {
    5f7a:	4295      	cmp	r5, r2
    5f7c:	dd0b      	ble.n	5f96 <_ZN14USBDeviceClass20sendStringDescriptorEPKhh+0x4e>
    5f7e:	7830      	ldrb	r0, [r6, #0]
    5f80:	2800      	cmp	r0, #0
    5f82:	d008      	beq.n	5f96 <_ZN14USBDeviceClass20sendStringDescriptorEPKhh+0x4e>
		buffer[i++] = *string++;
    5f84:	3601      	adds	r6, #1
    5f86:	54a0      	strb	r0, [r4, r2]
		if (i == maxlen) break;
    5f88:	429d      	cmp	r5, r3
    5f8a:	d003      	beq.n	5f94 <_ZN14USBDeviceClass20sendStringDescriptorEPKhh+0x4c>
		buffer[i] = 0;
    5f8c:	54e1      	strb	r1, [r4, r3]
    5f8e:	3302      	adds	r3, #2
    5f90:	b2db      	uxtb	r3, r3
	for (i = 2; i < maxlen && *string; i++) {
    5f92:	e7f0      	b.n	5f76 <_ZN14USBDeviceClass20sendStringDescriptorEPKhh+0x2e>
    5f94:	002a      	movs	r2, r5
	return USBDevice.sendControl(buffer, i);
    5f96:	0021      	movs	r1, r4
    5f98:	4803      	ldr	r0, [pc, #12]	; (5fa8 <_ZN14USBDeviceClass20sendStringDescriptorEPKhh+0x60>)
    5f9a:	f7ff ffab 	bl	5ef4 <_ZN14USBDeviceClass11sendControlEPKvm>
    5f9e:	1e43      	subs	r3, r0, #1
    5fa0:	4198      	sbcs	r0, r3
    5fa2:	b2c0      	uxtb	r0, r0
}
    5fa4:	46bd      	mov	sp, r7
    5fa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5fa8:	20000628 	.word	0x20000628

00005fac <_ZN14USBDeviceClass17sendConfigurationEm>:
{
    5fac:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint32_t total = 0;
    5fae:	2700      	movs	r7, #0
	_dry_run = true;
    5fb0:	2601      	movs	r6, #1
{
    5fb2:	b087      	sub	sp, #28
	_dry_run = true;
    5fb4:	4b1e      	ldr	r3, [pc, #120]	; (6030 <_ZN14USBDeviceClass17sendConfigurationEm+0x84>)
{
    5fb6:	9100      	str	r1, [sp, #0]
	uint8_t interfaces = SendInterfaces(&total);
    5fb8:	a902      	add	r1, sp, #8
	_dry_run = true;
    5fba:	701e      	strb	r6, [r3, #0]
{
    5fbc:	0005      	movs	r5, r0
	uint32_t total = 0;
    5fbe:	9702      	str	r7, [sp, #8]
	uint8_t interfaces = SendInterfaces(&total);
    5fc0:	f7ff fc76 	bl	58b0 <_ZN14USBDeviceClass14SendInterfacesEPm>
	ConfigDescriptor config = D_CONFIG((uint16_t)(total + sizeof(ConfigDescriptor)), interfaces);
    5fc4:	ac03      	add	r4, sp, #12
	uint8_t interfaces = SendInterfaces(&total);
    5fc6:	9001      	str	r0, [sp, #4]
	ConfigDescriptor config = D_CONFIG((uint16_t)(total + sizeof(ConfigDescriptor)), interfaces);
    5fc8:	2209      	movs	r2, #9
    5fca:	0039      	movs	r1, r7
    5fcc:	0020      	movs	r0, r4
    5fce:	f003 f82b 	bl	9028 <memset>
    5fd2:	2309      	movs	r3, #9
    5fd4:	7023      	strb	r3, [r4, #0]
    5fd6:	2302      	movs	r3, #2
    5fd8:	7063      	strb	r3, [r4, #1]
    5fda:	339e      	adds	r3, #158	; 0x9e
    5fdc:	71e3      	strb	r3, [r4, #7]
    5fde:	335a      	adds	r3, #90	; 0x5a
    5fe0:	7223      	strb	r3, [r4, #8]
    5fe2:	9b02      	ldr	r3, [sp, #8]
    5fe4:	7166      	strb	r6, [r4, #5]
    5fe6:	3309      	adds	r3, #9
    5fe8:	8063      	strh	r3, [r4, #2]
    5fea:	466b      	mov	r3, sp
    5fec:	791b      	ldrb	r3, [r3, #4]
    5fee:	7123      	strb	r3, [r4, #4]
	_dry_run = false;
    5ff0:	4b0f      	ldr	r3, [pc, #60]	; (6030 <_ZN14USBDeviceClass17sendConfigurationEm+0x84>)
    5ff2:	701f      	strb	r7, [r3, #0]
	if (maxlen == sizeof(ConfigDescriptor)) {
    5ff4:	9b00      	ldr	r3, [sp, #0]
    5ff6:	2b09      	cmp	r3, #9
    5ff8:	d107      	bne.n	600a <_ZN14USBDeviceClass17sendConfigurationEm+0x5e>
		sendControl(&config, sizeof(ConfigDescriptor));
    5ffa:	001a      	movs	r2, r3
    5ffc:	0021      	movs	r1, r4
		sendControl(_pack_buffer, _pack_size);
    5ffe:	0028      	movs	r0, r5
    6000:	f7ff ff78 	bl	5ef4 <_ZN14USBDeviceClass11sendControlEPKvm>
}
    6004:	2001      	movs	r0, #1
    6006:	b007      	add	sp, #28
    6008:	bdf0      	pop	{r4, r5, r6, r7, pc}
		_pack_message = true;
    600a:	4b0a      	ldr	r3, [pc, #40]	; (6034 <_ZN14USBDeviceClass17sendConfigurationEm+0x88>)
	sendControl(&config, sizeof(ConfigDescriptor));
    600c:	2209      	movs	r2, #9
		_pack_message = true;
    600e:	701e      	strb	r6, [r3, #0]
		_pack_size = 0;
    6010:	4e09      	ldr	r6, [pc, #36]	; (6038 <_ZN14USBDeviceClass17sendConfigurationEm+0x8c>)
	sendControl(&config, sizeof(ConfigDescriptor));
    6012:	0021      	movs	r1, r4
    6014:	0028      	movs	r0, r5
	total = 0;
    6016:	9702      	str	r7, [sp, #8]
		_pack_size = 0;
    6018:	8037      	strh	r7, [r6, #0]
	sendControl(&config, sizeof(ConfigDescriptor));
    601a:	f7ff ff6b 	bl	5ef4 <_ZN14USBDeviceClass11sendControlEPKvm>
	SendInterfaces(&total);
    601e:	a902      	add	r1, sp, #8
    6020:	0028      	movs	r0, r5
    6022:	f7ff fc45 	bl	58b0 <_ZN14USBDeviceClass14SendInterfacesEPm>
		_pack_message = false;
    6026:	4b03      	ldr	r3, [pc, #12]	; (6034 <_ZN14USBDeviceClass17sendConfigurationEm+0x88>)
		sendControl(_pack_buffer, _pack_size);
    6028:	8832      	ldrh	r2, [r6, #0]
		_pack_message = false;
    602a:	701f      	strb	r7, [r3, #0]
		sendControl(_pack_buffer, _pack_size);
    602c:	4903      	ldr	r1, [pc, #12]	; (603c <_ZN14USBDeviceClass17sendConfigurationEm+0x90>)
    602e:	e7e6      	b.n	5ffe <_ZN14USBDeviceClass17sendConfigurationEm+0x52>
    6030:	200009d4 	.word	0x200009d4
    6034:	20000ad5 	.word	0x20000ad5
    6038:	20000ad6 	.word	0x20000ad6
    603c:	200009d5 	.word	0x200009d5

00006040 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup>:
{
    6040:	b570      	push	{r4, r5, r6, lr}
	uint8_t t = setup.wValueH;
    6042:	78ce      	ldrb	r6, [r1, #3]
{
    6044:	b092      	sub	sp, #72	; 0x48
    6046:	0005      	movs	r5, r0
    6048:	000c      	movs	r4, r1
	if (t == USB_CONFIGURATION_DESCRIPTOR_TYPE)
    604a:	2e02      	cmp	r6, #2
    604c:	d108      	bne.n	6060 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x20>
		return USBDevice.sendConfiguration(setup.wLength);
    604e:	88c9      	ldrh	r1, [r1, #6]
    6050:	482b      	ldr	r0, [pc, #172]	; (6100 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0xc0>)
    6052:	f7ff ffab 	bl	5fac <_ZN14USBDeviceClass17sendConfigurationEm>
    6056:	1e43      	subs	r3, r0, #1
    6058:	4198      	sbcs	r0, r3
    605a:	b2c0      	uxtb	r0, r0
}
    605c:	b012      	add	sp, #72	; 0x48
    605e:	bd70      	pop	{r4, r5, r6, pc}
	ret = PluggableUSB().getDescriptor(setup);
    6060:	f001 f800 	bl	7064 <_Z12PluggableUSBv>
    6064:	0021      	movs	r1, r4
    6066:	f000 ffcd 	bl	7004 <_ZN13PluggableUSB_13getDescriptorER8USBSetup>
	if (ret != 0) {
    606a:	2800      	cmp	r0, #0
    606c:	d003      	beq.n	6076 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x36>
		return (ret > 0 ? true : false);
    606e:	17c3      	asrs	r3, r0, #31
    6070:	1a18      	subs	r0, r3, r0
    6072:	0fc0      	lsrs	r0, r0, #31
    6074:	e7f2      	b.n	605c <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x1c>
	if (t == USB_DEVICE_DESCRIPTOR_TYPE)
    6076:	2e01      	cmp	r6, #1
    6078:	d10b      	bne.n	6092 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x52>
		if (setup.wLength == 8)
    607a:	88e2      	ldrh	r2, [r4, #6]
    607c:	4921      	ldr	r1, [pc, #132]	; (6104 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0xc4>)
		if (*desc_addr > setup.wLength) {
    607e:	2a11      	cmp	r2, #17
    6080:	dc10      	bgt.n	60a4 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x64>
			desc_length = setup.wLength;
    6082:	b2d2      	uxtb	r2, r2
	if (desc_length == 0) {
    6084:	2a00      	cmp	r2, #0
    6086:	d00d      	beq.n	60a4 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x64>
	sendControl(desc_addr, desc_length);
    6088:	0028      	movs	r0, r5
    608a:	f7ff ff33 	bl	5ef4 <_ZN14USBDeviceClass11sendControlEPKvm>
	return true;
    608e:	2001      	movs	r0, #1
    6090:	e7e4      	b.n	605c <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x1c>
	else if (USB_STRING_DESCRIPTOR_TYPE == t)
    6092:	2e03      	cmp	r6, #3
    6094:	d1e2      	bne.n	605c <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x1c>
		if (setup.wValueL == 0) {
    6096:	78a3      	ldrb	r3, [r4, #2]
    6098:	2b00      	cmp	r3, #0
    609a:	d105      	bne.n	60a8 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x68>
		if (*desc_addr > setup.wLength) {
    609c:	88e2      	ldrh	r2, [r4, #6]
    609e:	491a      	ldr	r1, [pc, #104]	; (6108 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0xc8>)
    60a0:	2a03      	cmp	r2, #3
    60a2:	ddee      	ble.n	6082 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x42>
		desc_length = *desc_addr;
    60a4:	780a      	ldrb	r2, [r1, #0]
    60a6:	e7ef      	b.n	6088 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x48>
		else if (setup.wValueL == IPRODUCT) {
    60a8:	2b02      	cmp	r3, #2
    60aa:	d105      	bne.n	60b8 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x78>
			return sendStringDescriptor(STRING_PRODUCT, setup.wLength);
    60ac:	79a2      	ldrb	r2, [r4, #6]
    60ae:	4917      	ldr	r1, [pc, #92]	; (610c <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0xcc>)
			return sendStringDescriptor(STRING_MANUFACTURER, setup.wLength);
    60b0:	0028      	movs	r0, r5
    60b2:	f7ff ff49 	bl	5f48 <_ZN14USBDeviceClass20sendStringDescriptorEPKhh>
    60b6:	e7d1      	b.n	605c <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x1c>
		else if (setup.wValueL == IMANUFACTURER) {
    60b8:	2b01      	cmp	r3, #1
    60ba:	d102      	bne.n	60c2 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x82>
			return sendStringDescriptor(STRING_MANUFACTURER, setup.wLength);
    60bc:	79a2      	ldrb	r2, [r4, #6]
    60be:	4914      	ldr	r1, [pc, #80]	; (6110 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0xd0>)
    60c0:	e7f6      	b.n	60b0 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x70>
		else if (setup.wValueL == ISERIAL) {
    60c2:	2b03      	cmp	r3, #3
    60c4:	d1ca      	bne.n	605c <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x1c>
			utox8(SERIAL_NUMBER_WORD_0, &name[0]);
    60c6:	4b13      	ldr	r3, [pc, #76]	; (6114 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0xd4>)
    60c8:	a901      	add	r1, sp, #4
    60ca:	6818      	ldr	r0, [r3, #0]
    60cc:	f7ff f9d4 	bl	5478 <_ZL5utox8mPc>
			utox8(SERIAL_NUMBER_WORD_1, &name[8]);
    60d0:	4b11      	ldr	r3, [pc, #68]	; (6118 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0xd8>)
    60d2:	a903      	add	r1, sp, #12
    60d4:	6818      	ldr	r0, [r3, #0]
    60d6:	f7ff f9cf 	bl	5478 <_ZL5utox8mPc>
			utox8(SERIAL_NUMBER_WORD_2, &name[16]);
    60da:	4b10      	ldr	r3, [pc, #64]	; (611c <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0xdc>)
    60dc:	a905      	add	r1, sp, #20
    60de:	6818      	ldr	r0, [r3, #0]
    60e0:	f7ff f9ca 	bl	5478 <_ZL5utox8mPc>
			utox8(SERIAL_NUMBER_WORD_3, &name[24]);
    60e4:	4b0e      	ldr	r3, [pc, #56]	; (6120 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0xe0>)
    60e6:	a907      	add	r1, sp, #28
    60e8:	6818      	ldr	r0, [r3, #0]
    60ea:	f7ff f9c5 	bl	5478 <_ZL5utox8mPc>
			PluggableUSB().getShortName(&name[32]);
    60ee:	f000 ffb9 	bl	7064 <_Z12PluggableUSBv>
    60f2:	a909      	add	r1, sp, #36	; 0x24
    60f4:	f000 ff96 	bl	7024 <_ZN13PluggableUSB_12getShortNameEPc>
			return sendStringDescriptor((uint8_t*)name, setup.wLength);
    60f8:	79a2      	ldrb	r2, [r4, #6]
    60fa:	a901      	add	r1, sp, #4
    60fc:	e7d8      	b.n	60b0 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup+0x70>
    60fe:	46c0      	nop			; (mov r8, r8)
    6100:	20000628 	.word	0x20000628
    6104:	0000b6f6 	.word	0x0000b6f6
    6108:	0000b6e6 	.word	0x0000b6e6
    610c:	0000b6d0 	.word	0x0000b6d0
    6110:	0000b6ea 	.word	0x0000b6ea
    6114:	0080a00c 	.word	0x0080a00c
    6118:	0080a040 	.word	0x0080a040
    611c:	0080a044 	.word	0x0080a044
    6120:	0080a048 	.word	0x0080a048

00006124 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup>:
	// Set the byte count as zero
	usbd.epBank1SetByteCount(ep, 0);
}

bool USBDeviceClass::handleStandardSetup(USBSetup &setup)
{
    6124:	b573      	push	{r0, r1, r4, r5, r6, lr}
    6126:	0006      	movs	r6, r0
	switch (setup.bRequest) {
    6128:	7848      	ldrb	r0, [r1, #1]
{
    612a:	000d      	movs	r5, r1
	switch (setup.bRequest) {
    612c:	280b      	cmp	r0, #11
    612e:	d811      	bhi.n	6154 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x30>
    6130:	f000 ffb2 	bl	7098 <__gnu_thumb1_case_uqi>
    6134:	2e101d06 	.word	0x2e101d06
    6138:	70484310 	.word	0x70484310
    613c:	6c694f4c 	.word	0x6c694f4c
	case GET_STATUS:
		if (setup.bmRequestType == 0)  // device
    6140:	7809      	ldrb	r1, [r1, #0]
    6142:	aa01      	add	r2, sp, #4
    6144:	2900      	cmp	r1, #0
    6146:	d107      	bne.n	6158 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x34>
		{
			// Send the device status
			// TODO: Check current configuration for power mode (if device is configured)
			// TODO: Check if remote wake-up is enabled
			uint8_t buff[] = { 0, 0 };
			armSend(0, buff, 2);
    6148:	2302      	movs	r3, #2
			uint8_t buff[] = { 0, 0 };
    614a:	7011      	strb	r1, [r2, #0]
    614c:	7051      	strb	r1, [r2, #1]
			armSend(0, buff, 2);
    614e:	0030      	movs	r0, r6
    6150:	f7ff feac 	bl	5eac <_ZN14USBDeviceClass7armSendEmPKvm>
			return true;
    6154:	2001      	movs	r0, #1
		return true;

	default:
		return true;
	}
}
    6156:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
			uint8_t buff[] = { 0, 0 };
    6158:	2300      	movs	r3, #0
    615a:	7013      	strb	r3, [r2, #0]
    615c:	7053      	strb	r3, [r2, #1]
			if (isEndpointHalt == 1)
    615e:	4b2e      	ldr	r3, [pc, #184]	; (6218 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0xf4>)
			if (isRemoteWakeUpEnabled == 1)
    6160:	781b      	ldrb	r3, [r3, #0]
    6162:	2b01      	cmp	r3, #1
    6164:	d100      	bne.n	6168 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x44>
				buff[0] = 1;
    6166:	7013      	strb	r3, [r2, #0]
			armSend(0, buff, 2);
    6168:	2302      	movs	r3, #2
		armSend(0, (void*)&_usbSetInterface, 1);
    616a:	2100      	movs	r1, #0
    616c:	e7ef      	b.n	614e <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x2a>
		if (setup.wValueL == 1) // DEVICEREMOTEWAKEUP
    616e:	788a      	ldrb	r2, [r1, #2]
    6170:	2300      	movs	r3, #0
    6172:	2a01      	cmp	r2, #1
    6174:	d104      	bne.n	6180 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x5c>
			uint8_t buff[] = { 0, 0 };
    6176:	aa01      	add	r2, sp, #4
    6178:	7013      	strb	r3, [r2, #0]
    617a:	7053      	strb	r3, [r2, #1]
			if (isRemoteWakeUpEnabled == 1)
    617c:	4b27      	ldr	r3, [pc, #156]	; (621c <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0xf8>)
    617e:	e7ef      	b.n	6160 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x3c>
			isEndpointHalt = 0;
    6180:	4a25      	ldr	r2, [pc, #148]	; (6218 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0xf4>)
    6182:	7013      	strb	r3, [r2, #0]
    6184:	4a26      	ldr	r2, [pc, #152]	; (6220 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0xfc>)
    6186:	6993      	ldr	r3, [r2, #24]
    6188:	0b9b      	lsrs	r3, r3, #14
    618a:	039b      	lsls	r3, r3, #14
    618c:	6193      	str	r3, [r2, #24]
    618e:	e7e1      	b.n	6154 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x30>
		if (setup.wValueL == 1) // DEVICEREMOTEWAKEUP
    6190:	788c      	ldrb	r4, [r1, #2]
    6192:	2c01      	cmp	r4, #1
    6194:	d106      	bne.n	61a4 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x80>
			uint8_t buff[] = { 0 };
    6196:	2100      	movs	r1, #0
			isRemoteWakeUpEnabled = 1;
    6198:	4b20      	ldr	r3, [pc, #128]	; (621c <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0xf8>)
			uint8_t buff[] = { 0 };
    619a:	aa01      	add	r2, sp, #4
			isRemoteWakeUpEnabled = 1;
    619c:	701c      	strb	r4, [r3, #0]
			uint8_t buff[] = { 0 };
    619e:	7011      	strb	r1, [r2, #0]
			armSend(0, buff, 1);
    61a0:	0023      	movs	r3, r4
    61a2:	e7d4      	b.n	614e <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x2a>
		if (setup.wValueL == 0) // ENDPOINTHALT
    61a4:	2c00      	cmp	r4, #0
    61a6:	d108      	bne.n	61ba <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x96>
			isEndpointHalt = 1;
    61a8:	2001      	movs	r0, #1
    61aa:	4b1b      	ldr	r3, [pc, #108]	; (6218 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0xf4>)
    61ac:	4a1c      	ldr	r2, [pc, #112]	; (6220 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0xfc>)
    61ae:	7018      	strb	r0, [r3, #0]
    61b0:	6993      	ldr	r3, [r2, #24]
    61b2:	0b9b      	lsrs	r3, r3, #14
    61b4:	039b      	lsls	r3, r3, #14
    61b6:	6193      	str	r3, [r2, #24]
			return true;
    61b8:	e7cd      	b.n	6156 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x32>
		setAddress(setup.wValueL);
    61ba:	78a9      	ldrb	r1, [r5, #2]
    61bc:	0030      	movs	r0, r6
    61be:	f7ff fc29 	bl	5a14 <_ZN14USBDeviceClass10setAddressEm>
    61c2:	e7c7      	b.n	6154 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x30>
		return sendDescriptor(setup);
    61c4:	0030      	movs	r0, r6
    61c6:	f7ff ff3b 	bl	6040 <_ZN14USBDeviceClass14sendDescriptorER8USBSetup>
    61ca:	e7c4      	b.n	6156 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x32>
		armSend(0, (void*)&_usbConfiguration, 1);
    61cc:	2301      	movs	r3, #1
    61ce:	4a15      	ldr	r2, [pc, #84]	; (6224 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x100>)
    61d0:	e7cb      	b.n	616a <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x46>
		if (REQUEST_DEVICE == (setup.bmRequestType & REQUEST_RECIPIENT)) {
    61d2:	780b      	ldrb	r3, [r1, #0]
			return false;
    61d4:	2000      	movs	r0, #0
		if (REQUEST_DEVICE == (setup.bmRequestType & REQUEST_RECIPIENT)) {
    61d6:	06db      	lsls	r3, r3, #27
    61d8:	d1bd      	bne.n	6156 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x32>
			initEndpoints();
    61da:	0030      	movs	r0, r6
    61dc:	f7ff fcd6 	bl	5b8c <_ZN14USBDeviceClass13initEndpointsEv>
	inline void epBank1EnableTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTENSET.bit.TRCPT1 = 1; }
    61e0:	202a      	movs	r0, #42	; 0x2a
    61e2:	2102      	movs	r1, #2
			_usbConfiguration = setup.wValueL;
    61e4:	78aa      	ldrb	r2, [r5, #2]
    61e6:	4b0f      	ldr	r3, [pc, #60]	; (6224 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x100>)
    61e8:	30ff      	adds	r0, #255	; 0xff
    61ea:	601a      	str	r2, [r3, #0]
    61ec:	4a0c      	ldr	r2, [pc, #48]	; (6220 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0xfc>)
    61ee:	6813      	ldr	r3, [r2, #0]
    61f0:	5c1c      	ldrb	r4, [r3, r0]
    61f2:	4321      	orrs	r1, r4
	inline void epBank0EnableTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTENSET.bit.TRCPT0 = 1; }
    61f4:	244a      	movs	r4, #74	; 0x4a
	inline void epBank1EnableTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTENSET.bit.TRCPT1 = 1; }
    61f6:	5419      	strb	r1, [r3, r0]
	inline void epBank0EnableTransferComplete(ep_t ep) { usb.DeviceEndpoint[ep].EPINTENSET.bit.TRCPT0 = 1; }
    61f8:	34ff      	adds	r4, #255	; 0xff
    61fa:	5d19      	ldrb	r1, [r3, r4]
    61fc:	3829      	subs	r0, #41	; 0x29
    61fe:	38ff      	subs	r0, #255	; 0xff
    6200:	4301      	orrs	r1, r0
    6202:	5519      	strb	r1, [r3, r4]
    6204:	e7d4      	b.n	61b0 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x8c>
		armSend(0, (void*)&_usbSetInterface, 1);
    6206:	2301      	movs	r3, #1
    6208:	4a07      	ldr	r2, [pc, #28]	; (6228 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x104>)
    620a:	e7ae      	b.n	616a <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x46>
		_usbSetInterface = setup.wValueL;
    620c:	788a      	ldrb	r2, [r1, #2]
    620e:	4b06      	ldr	r3, [pc, #24]	; (6228 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x104>)
    6210:	601a      	str	r2, [r3, #0]
    6212:	e7b7      	b.n	6184 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x60>
		return false;
    6214:	2000      	movs	r0, #0
    6216:	e79e      	b.n	6156 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup+0x32>
    6218:	20000648 	.word	0x20000648
    621c:	20000650 	.word	0x20000650
    6220:	20000ae0 	.word	0x20000ae0
    6224:	20000ad8 	.word	0x20000ad8
    6228:	20000adc 	.word	0x20000adc

0000622c <_ZN14USBDeviceClass10ISRHandlerEv>:

void USBDeviceClass::ISRHandler()
{

	if (_pack_message == true) {
    622c:	4b3c      	ldr	r3, [pc, #240]	; (6320 <_ZN14USBDeviceClass10ISRHandlerEv+0xf4>)
{
    622e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	if (_pack_message == true) {
    6230:	781c      	ldrb	r4, [r3, #0]
{
    6232:	0007      	movs	r7, r0
	if (_pack_message == true) {
    6234:	2c00      	cmp	r4, #0
    6236:	d15e      	bne.n	62f6 <_ZN14USBDeviceClass10ISRHandlerEv+0xca>
	inline bool isEndOfResetInterrupt()        { return usb.INTFLAG.bit.EORST; }
    6238:	4e3a      	ldr	r6, [pc, #232]	; (6324 <_ZN14USBDeviceClass10ISRHandlerEv+0xf8>)
    623a:	6833      	ldr	r3, [r6, #0]
    623c:	8b9b      	ldrh	r3, [r3, #28]
		return;
	}
	// End-Of-Reset
	if (usbd.isEndOfResetInterrupt())
    623e:	071b      	lsls	r3, r3, #28
    6240:	d50e      	bpl.n	6260 <_ZN14USBDeviceClass10ISRHandlerEv+0x34>
    6242:	0021      	movs	r1, r4
    6244:	0020      	movs	r0, r4
    6246:	f7ff f93d 	bl	54c4 <_ZN14USBDeviceClass6initEPEmm.part.5>
	inline void epBank0EnableSetupReceived(ep_t ep)    { usb.DeviceEndpoint[ep].EPINTENSET.bit.RXSTP = 1; }
    624a:	6832      	ldr	r2, [r6, #0]
    624c:	2310      	movs	r3, #16
    624e:	0011      	movs	r1, r2
    6250:	31ff      	adds	r1, #255	; 0xff
    6252:	7a88      	ldrb	r0, [r1, #10]
    6254:	4303      	orrs	r3, r0
    6256:	728b      	strb	r3, [r1, #10]
		initEP(0, USB_ENDPOINT_TYPE_CONTROL);

		// Enable Setup-Received interrupt
		usbd.epBank0EnableSetupReceived(0);

		_usbConfiguration = 0;
    6258:	4b33      	ldr	r3, [pc, #204]	; (6328 <_ZN14USBDeviceClass10ISRHandlerEv+0xfc>)
    625a:	601c      	str	r4, [r3, #0]
	inline void ackEndOfResetInterrupt()       { usb.INTFLAG.reg = USB_DEVICE_INTFLAG_EORST; }
    625c:	2308      	movs	r3, #8
    625e:	8393      	strh	r3, [r2, #28]
	inline bool isStartOfFrameInterrupt()      { return usb.INTFLAG.bit.SOF; }
    6260:	6833      	ldr	r3, [r6, #0]
    6262:	8b9a      	ldrh	r2, [r3, #28]

		usbd.ackEndOfResetInterrupt();
	}

	// Start-Of-Frame
	if (usbd.isStartOfFrameInterrupt())
    6264:	0752      	lsls	r2, r2, #29
    6266:	d501      	bpl.n	626c <_ZN14USBDeviceClass10ISRHandlerEv+0x40>
	inline void ackStartOfFrameInterrupt()     { usb.INTFLAG.reg = USB_DEVICE_INTFLAG_SOF; }
    6268:	2204      	movs	r2, #4
    626a:	839a      	strh	r2, [r3, #28]
	inline bool epBank0IsSetupReceived(ep_t ep)     { return usb.DeviceEndpoint[ep].EPINTFLAG.bit.RXSTP; }
    626c:	33ff      	adds	r3, #255	; 0xff
    626e:	7a1a      	ldrb	r2, [r3, #8]
		}
#endif
	}

	// Endpoint 0 Received Setup interrupt
	if (usbd.epBank0IsSetupReceived(0))
    6270:	06d2      	lsls	r2, r2, #27
    6272:	d520      	bpl.n	62b6 <_ZN14USBDeviceClass10ISRHandlerEv+0x8a>
	inline void epBank0AckSetupReceived(ep_t ep)    { usb.DeviceEndpoint[ep].EPINTFLAG.reg = USB_DEVICE_EPINTFLAG_RXSTP; }
    6274:	2210      	movs	r2, #16
    6276:	721a      	strb	r2, [r3, #8]
	inline void epBank0ResetReady(ep_t ep) { usb.DeviceEndpoint[ep].EPSTATUSCLR.bit.BK0RDY = 1; }
    6278:	7959      	ldrb	r1, [r3, #5]
    627a:	3230      	adds	r2, #48	; 0x30
    627c:	430a      	orrs	r2, r1
    627e:	715a      	strb	r2, [r3, #5]
		/* Clear the Bank 0 ready flag on Control OUT */
		// The RAM Buffer is empty: we can receive data
		usbd.epBank0ResetReady(0);

		bool ok;
		if (REQUEST_STANDARD == (setup->bmRequestType & REQUEST_TYPE)) {
    6280:	2360      	movs	r3, #96	; 0x60
    6282:	492a      	ldr	r1, [pc, #168]	; (632c <_ZN14USBDeviceClass10ISRHandlerEv+0x100>)
			// Standard Requests
			ok = handleStandardSetup(*setup);
    6284:	0038      	movs	r0, r7
		if (REQUEST_STANDARD == (setup->bmRequestType & REQUEST_TYPE)) {
    6286:	780a      	ldrb	r2, [r1, #0]
    6288:	421a      	tst	r2, r3
    628a:	d135      	bne.n	62f8 <_ZN14USBDeviceClass10ISRHandlerEv+0xcc>
			ok = handleStandardSetup(*setup);
    628c:	f7ff ff4a 	bl	6124 <_ZN14USBDeviceClass19handleStandardSetupER8USBSetup>
		} else {
			// Class Interface Requests
			ok = handleClassInterfaceSetup(*setup);
		}

		if (ok) {
    6290:	2800      	cmp	r0, #0
    6292:	d034      	beq.n	62fe <_ZN14USBDeviceClass10ISRHandlerEv+0xd2>
	inline void epBank1SetReady(ep_t ep)   { usb.DeviceEndpoint[ep].EPSTATUSSET.bit.BK1RDY = 1; }
    6294:	2280      	movs	r2, #128	; 0x80
    6296:	6833      	ldr	r3, [r6, #0]
    6298:	4252      	negs	r2, r2
    629a:	33ff      	adds	r3, #255	; 0xff
    629c:	7999      	ldrb	r1, [r3, #6]
    629e:	430a      	orrs	r2, r1
	USB->DEVICE.DeviceEndpoint[ep].EPSTATUSSET.reg = USB_DEVICE_EPSTATUSSET_STALLRQ(2);
    62a0:	719a      	strb	r2, [r3, #6]
	inline bool epBank1IsStalled(ep_t ep)           { return usb.DeviceEndpoint[ep].EPINTFLAG.bit.STALL1; }
    62a2:	6833      	ldr	r3, [r6, #0]
    62a4:	33ff      	adds	r3, #255	; 0xff
    62a6:	7a1a      	ldrb	r2, [r3, #8]
			usbd.epBank1SetReady(0);
		} else {
			stall(0);
		}

		if (usbd.epBank1IsStalled(0))
    62a8:	0652      	lsls	r2, r2, #25
    62aa:	d504      	bpl.n	62b6 <_ZN14USBDeviceClass10ISRHandlerEv+0x8a>
	inline void epBank1AckStalled(ep_t ep)          { usb.DeviceEndpoint[ep].EPINTFLAG.reg = USB_DEVICE_EPINTFLAG_STALL(2); }
    62ac:	2240      	movs	r2, #64	; 0x40
    62ae:	721a      	strb	r2, [r3, #8]
	inline void epBank1DisableStalled(ep_t ep)          { usb.DeviceEndpoint[ep].EPINTENCLR.bit.STALL1 = 1; }
    62b0:	7a59      	ldrb	r1, [r3, #9]
    62b2:	430a      	orrs	r2, r1
    62b4:	725a      	strb	r2, [r3, #9]
	inline uint16_t epInterruptSummary() { return usb.EPINTSMRY.reg; }
    62b6:	6833      	ldr	r3, [r6, #0]
		}

	} // end Received Setup handler

	uint8_t i=0;
	uint8_t ept_int = usbd.epInterruptSummary() & 0xFE; // Remove endpoint number 0 (setup)
    62b8:	2500      	movs	r5, #0
    62ba:	8c1c      	ldrh	r4, [r3, #32]
    62bc:	2301      	movs	r3, #1
    62be:	439c      	bics	r4, r3
    62c0:	b2e4      	uxtb	r4, r4
	while (ept_int != 0)
	{
		// Check if endpoint has a pending interrupt
		if ((ept_int & (1 << i)) != 0)
    62c2:	9301      	str	r3, [sp, #4]
    62c4:	b2e9      	uxtb	r1, r5
	while (ept_int != 0)
    62c6:	2c00      	cmp	r4, #0
    62c8:	d015      	beq.n	62f6 <_ZN14USBDeviceClass10ISRHandlerEv+0xca>
		if ((ept_int & (1 << i)) != 0)
    62ca:	0023      	movs	r3, r4
    62cc:	412b      	asrs	r3, r5
    62ce:	9a01      	ldr	r2, [sp, #4]
    62d0:	4213      	tst	r3, r2
    62d2:	d00d      	beq.n	62f0 <_ZN14USBDeviceClass10ISRHandlerEv+0xc4>
	inline bool epBank0IsTransferComplete(ep_t ep)  { return usb.DeviceEndpoint[ep].EPINTFLAG.bit.TRCPT0; }
    62d4:	002b      	movs	r3, r5
    62d6:	6832      	ldr	r2, [r6, #0]
    62d8:	3308      	adds	r3, #8
    62da:	015b      	lsls	r3, r3, #5
    62dc:	18d3      	adds	r3, r2, r3
    62de:	79da      	ldrb	r2, [r3, #7]
		{
			// Endpoint Transfer Complete (0/1) Interrupt
			if (usbd.epBank0IsTransferComplete(i) ||
    62e0:	07d2      	lsls	r2, r2, #31
    62e2:	d413      	bmi.n	630c <_ZN14USBDeviceClass10ISRHandlerEv+0xe0>
	inline bool epBank1IsTransferComplete(ep_t ep)  { return usb.DeviceEndpoint[ep].EPINTFLAG.bit.TRCPT1; }
    62e4:	79db      	ldrb	r3, [r3, #7]
    62e6:	079b      	lsls	r3, r3, #30
    62e8:	d410      	bmi.n	630c <_ZN14USBDeviceClass10ISRHandlerEv+0xe0>
					epHandlers[i]->handleEndpoint();
				} else {
					handleEndpoint(i);
				}
			}
			ept_int &= ~(1 << i);
    62ea:	9b01      	ldr	r3, [sp, #4]
    62ec:	40ab      	lsls	r3, r5
    62ee:	439c      	bics	r4, r3
    62f0:	3501      	adds	r5, #1
		}
		i++;
		if (i > USB_EPT_NUM)
    62f2:	2d09      	cmp	r5, #9
    62f4:	d1e6      	bne.n	62c4 <_ZN14USBDeviceClass10ISRHandlerEv+0x98>
			break;  // fire exit
	}
}
    62f6:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
			ok = handleClassInterfaceSetup(*setup);
    62f8:	f7ff fbb0 	bl	5a5c <_ZN14USBDeviceClass25handleClassInterfaceSetupER8USBSetup>
    62fc:	e7c8      	b.n	6290 <_ZN14USBDeviceClass10ISRHandlerEv+0x64>
	USB->DEVICE.DeviceEndpoint[ep].EPSTATUSSET.reg = USB_DEVICE_EPSTATUSSET_STALLRQ(2);
    62fe:	2220      	movs	r2, #32
    6300:	4b0b      	ldr	r3, [pc, #44]	; (6330 <_ZN14USBDeviceClass10ISRHandlerEv+0x104>)
    6302:	e7cd      	b.n	62a0 <_ZN14USBDeviceClass10ISRHandlerEv+0x74>
					epHandlers[i]->handleEndpoint();
    6304:	6803      	ldr	r3, [r0, #0]
    6306:	681b      	ldr	r3, [r3, #0]
    6308:	4798      	blx	r3
    630a:	e7ee      	b.n	62ea <_ZN14USBDeviceClass10ISRHandlerEv+0xbe>
				if (epHandlers[i]) {
    630c:	4b09      	ldr	r3, [pc, #36]	; (6334 <_ZN14USBDeviceClass10ISRHandlerEv+0x108>)
    630e:	00aa      	lsls	r2, r5, #2
    6310:	58d0      	ldr	r0, [r2, r3]
    6312:	2800      	cmp	r0, #0
    6314:	d1f6      	bne.n	6304 <_ZN14USBDeviceClass10ISRHandlerEv+0xd8>
					handleEndpoint(i);
    6316:	0038      	movs	r0, r7
    6318:	f7ff fae0 	bl	58dc <_ZN14USBDeviceClass14handleEndpointEh>
    631c:	e7e5      	b.n	62ea <_ZN14USBDeviceClass10ISRHandlerEv+0xbe>
    631e:	46c0      	nop			; (mov r8, r8)
    6320:	20000ad5 	.word	0x20000ad5
    6324:	20000ae0 	.word	0x20000ae0
    6328:	20000ad8 	.word	0x20000ad8
    632c:	20000814 	.word	0x20000814
    6330:	410050ff 	.word	0x410050ff
    6334:	2000062c 	.word	0x2000062c

00006338 <UDD_Handler>:
extern "C" void UDD_Handler(void) {
    6338:	b510      	push	{r4, lr}
	USBDevice.ISRHandler();
    633a:	4802      	ldr	r0, [pc, #8]	; (6344 <UDD_Handler+0xc>)
    633c:	f7ff ff76 	bl	622c <_ZN14USBDeviceClass10ISRHandlerEv>
}
    6340:	bd10      	pop	{r4, pc}
    6342:	46c0      	nop			; (mov r8, r8)
    6344:	20000628 	.word	0x20000628

00006348 <_GLOBAL__sub_I__ZN20USBDevice_SAMD21G18x5resetEv>:
	USBDevice_SAMD21G18x() : usb(USB->DEVICE) {
    6348:	4a01      	ldr	r2, [pc, #4]	; (6350 <_GLOBAL__sub_I__ZN20USBDevice_SAMD21G18x5resetEv+0x8>)
    634a:	4b02      	ldr	r3, [pc, #8]	; (6354 <_GLOBAL__sub_I__ZN20USBDevice_SAMD21G18x5resetEv+0xc>)
    634c:	601a      	str	r2, [r3, #0]
 * USB Device instance
 * -------------------
 */

// USBDevice class instance
USBDeviceClass USBDevice;
    634e:	4770      	bx	lr
    6350:	41005000 	.word	0x41005000
    6354:	20000ae0 	.word	0x20000ae0

00006358 <init>:
 *   - During reset, all PORT lines are configured as inputs with input buffers, output buffers and pull disabled.
 */
void init( void )
{
  // Set Systick to 1ms interval, common to all Cortex-M variants
  if ( SysTick_Config( SystemCoreClock / 1000 ) )
    6358:	21fa      	movs	r1, #250	; 0xfa
    635a:	4b31      	ldr	r3, [pc, #196]	; (6420 <init+0xc8>)
{
    635c:	b510      	push	{r4, lr}
  if ( SysTick_Config( SystemCoreClock / 1000 ) )
    635e:	6818      	ldr	r0, [r3, #0]
    6360:	0089      	lsls	r1, r1, #2
    6362:	f000 fea3 	bl	70ac <__udivsi3>
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
    6366:	4b2f      	ldr	r3, [pc, #188]	; (6424 <init+0xcc>)
    6368:	3801      	subs	r0, #1
    636a:	4298      	cmp	r0, r3
    636c:	d856      	bhi.n	641c <init+0xc4>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
    636e:	492e      	ldr	r1, [pc, #184]	; (6428 <init+0xd0>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    6370:	4a2e      	ldr	r2, [pc, #184]	; (642c <init+0xd4>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
    6372:	6048      	str	r0, [r1, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    6374:	20c0      	movs	r0, #192	; 0xc0
    6376:	6a13      	ldr	r3, [r2, #32]
    6378:	0600      	lsls	r0, r0, #24
    637a:	021b      	lsls	r3, r3, #8
    637c:	0a1b      	lsrs	r3, r3, #8
    637e:	4303      	orrs	r3, r0
    6380:	6213      	str	r3, [r2, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
    6382:	2400      	movs	r4, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
    6384:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
    6386:	608c      	str	r4, [r1, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
    6388:	600b      	str	r3, [r1, #0]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    638a:	2180      	movs	r1, #128	; 0x80
    638c:	6a13      	ldr	r3, [r2, #32]
    638e:	0609      	lsls	r1, r1, #24
    6390:	021b      	lsls	r3, r3, #8
    6392:	0a1b      	lsrs	r3, r3, #8
    6394:	430b      	orrs	r3, r1
    6396:	6213      	str	r3, [r2, #32]
//
//  // Clock EIC for I/O interrupts
//  PM->APBAMASK.reg |= PM_APBAMASK_EIC ;

  // Clock SERCOM for Serial
  PM->APBCMASK.reg |= PM_APBCMASK_SERCOM0 | PM_APBCMASK_SERCOM1 | PM_APBCMASK_SERCOM2 | PM_APBCMASK_SERCOM3 | PM_APBCMASK_SERCOM4 | PM_APBCMASK_SERCOM5 ;
    6398:	22fc      	movs	r2, #252	; 0xfc
    639a:	4b25      	ldr	r3, [pc, #148]	; (6430 <init+0xd8>)
    639c:	6a19      	ldr	r1, [r3, #32]
    639e:	430a      	orrs	r2, r1
    63a0:	621a      	str	r2, [r3, #32]

  // Clock TC/TCC for Pulse and Analog
  PM->APBCMASK.reg |= PM_APBCMASK_TCC0 | PM_APBCMASK_TCC1 | PM_APBCMASK_TCC2 | PM_APBCMASK_TC3 | PM_APBCMASK_TC4 | PM_APBCMASK_TC5 ;
    63a2:	22fc      	movs	r2, #252	; 0xfc
    63a4:	6a19      	ldr	r1, [r3, #32]
    63a6:	0192      	lsls	r2, r2, #6
    63a8:	430a      	orrs	r2, r1
    63aa:	621a      	str	r2, [r3, #32]

  // Clock ADC/DAC for Analog
  PM->APBCMASK.reg |= PM_APBCMASK_ADC | PM_APBCMASK_DAC ;
    63ac:	22a0      	movs	r2, #160	; 0xa0
    63ae:	6a19      	ldr	r1, [r3, #32]
    63b0:	02d2      	lsls	r2, r2, #11
    63b2:	430a      	orrs	r2, r1
    63b4:	621a      	str	r2, [r3, #32]

  // Setup all pins (digital and analog) in INPUT mode (default is nothing)
  for (uint32_t ul = 0 ; ul < NUM_DIGITAL_PINS ; ul++ )
  {
    pinMode( ul, INPUT ) ;
    63b6:	0020      	movs	r0, r4
    63b8:	2100      	movs	r1, #0
  for (uint32_t ul = 0 ; ul < NUM_DIGITAL_PINS ; ul++ )
    63ba:	3401      	adds	r4, #1
    pinMode( ul, INPUT ) ;
    63bc:	f000 f8ea 	bl	6594 <pinMode>
  for (uint32_t ul = 0 ; ul < NUM_DIGITAL_PINS ; ul++ )
    63c0:	2c0f      	cmp	r4, #15
    63c2:	d1f8      	bne.n	63b6 <init+0x5e>
  }

  // Initialize Analog Controller
  // Setting clock
  while(GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY);
    63c4:	4b1b      	ldr	r3, [pc, #108]	; (6434 <init+0xdc>)
    63c6:	001c      	movs	r4, r3
    63c8:	785a      	ldrb	r2, [r3, #1]
    63ca:	b252      	sxtb	r2, r2
    63cc:	2a00      	cmp	r2, #0
    63ce:	dbfb      	blt.n	63c8 <init+0x70>

  GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID( GCM_ADC ) | // Generic Clock ADC
    63d0:	4a19      	ldr	r2, [pc, #100]	; (6438 <init+0xe0>)
    63d2:	805a      	strh	r2, [r3, #2]
                      GCLK_CLKCTRL_GEN_GCLK0     | // Generic Clock Generator 0 is source
                      GCLK_CLKCTRL_CLKEN ;

  while( ADC->STATUS.bit.SYNCBUSY == 1 );          // Wait for synchronization of registers between the clock domains
    63d4:	4b19      	ldr	r3, [pc, #100]	; (643c <init+0xe4>)
    63d6:	001a      	movs	r2, r3
    63d8:	7e59      	ldrb	r1, [r3, #25]
    63da:	09c9      	lsrs	r1, r1, #7
    63dc:	2901      	cmp	r1, #1
    63de:	d0fb      	beq.n	63d8 <init+0x80>

  ADC->CTRLB.reg = ADC_CTRLB_PRESCALER_DIV512 |    // Divide Clock by 512.
    63e0:	21e4      	movs	r1, #228	; 0xe4
    63e2:	00c9      	lsls	r1, r1, #3
    63e4:	8099      	strh	r1, [r3, #4]
                   ADC_CTRLB_RESSEL_10BIT;         // 10 bits resolution as default

  ADC->SAMPCTRL.reg = 0x3f;                        // Set max Sampling Time Length
    63e6:	213f      	movs	r1, #63	; 0x3f
    63e8:	70d9      	strb	r1, [r3, #3]

  while( ADC->STATUS.bit.SYNCBUSY == 1 );          // Wait for synchronization of registers between the clock domains
    63ea:	7e53      	ldrb	r3, [r2, #25]
    63ec:	09db      	lsrs	r3, r3, #7
    63ee:	2b01      	cmp	r3, #1
    63f0:	d0fb      	beq.n	63ea <init+0x92>

  ADC->INPUTCTRL.reg = ADC_INPUTCTRL_MUXNEG_GND;   // No Negative input (Internal Ground)
    63f2:	23c0      	movs	r3, #192	; 0xc0

  // Averaging (see datasheet table in AVGCTRL register description)
  ADC->AVGCTRL.reg = ADC_AVGCTRL_SAMPLENUM_1 |    // 1 sample only (no oversampling nor averaging)
    63f4:	2000      	movs	r0, #0
  ADC->INPUTCTRL.reg = ADC_INPUTCTRL_MUXNEG_GND;   // No Negative input (Internal Ground)
    63f6:	015b      	lsls	r3, r3, #5
    63f8:	6113      	str	r3, [r2, #16]
  ADC->AVGCTRL.reg = ADC_AVGCTRL_SAMPLENUM_1 |    // 1 sample only (no oversampling nor averaging)
    63fa:	7090      	strb	r0, [r2, #2]
                     ADC_AVGCTRL_ADJRES(0x0ul);   // Adjusting result by 0

  analogReference( AR_DEFAULT ) ; // Analog Reference is AREF pin (3.3v)
    63fc:	f000 f82e 	bl	645c <analogReference>

  // Initialize DAC
  // Setting clock
  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY );
    6400:	7863      	ldrb	r3, [r4, #1]
    6402:	b25b      	sxtb	r3, r3
    6404:	2b00      	cmp	r3, #0
    6406:	dbfb      	blt.n	6400 <init+0xa8>
  GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID( GCM_DAC ) | // Generic Clock ADC
    6408:	4b0d      	ldr	r3, [pc, #52]	; (6440 <init+0xe8>)
                      GCLK_CLKCTRL_GEN_GCLK0     | // Generic Clock Generator 0 is source
                      GCLK_CLKCTRL_CLKEN ;

  while ( DAC->STATUS.bit.SYNCBUSY == 1 ); // Wait for synchronization of registers between the clock domains
    640a:	4a0e      	ldr	r2, [pc, #56]	; (6444 <init+0xec>)
  GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID( GCM_DAC ) | // Generic Clock ADC
    640c:	8063      	strh	r3, [r4, #2]
  while ( DAC->STATUS.bit.SYNCBUSY == 1 ); // Wait for synchronization of registers between the clock domains
    640e:	79d3      	ldrb	r3, [r2, #7]
    6410:	09db      	lsrs	r3, r3, #7
    6412:	2b01      	cmp	r3, #1
    6414:	d0fb      	beq.n	640e <init+0xb6>
  DAC->CTRLB.reg = DAC_CTRLB_REFSEL_AVCC | // Using the 3.3V reference
    6416:	2341      	movs	r3, #65	; 0x41
    6418:	7053      	strb	r3, [r2, #1]
                   DAC_CTRLB_EOEN ;        // External Output Enable (Vout)
}
    641a:	bd10      	pop	{r4, pc}
    641c:	e7fe      	b.n	641c <init+0xc4>
    641e:	46c0      	nop			; (mov r8, r8)
    6420:	20000084 	.word	0x20000084
    6424:	00ffffff 	.word	0x00ffffff
    6428:	e000e010 	.word	0xe000e010
    642c:	e000ed00 	.word	0xe000ed00
    6430:	40000400 	.word	0x40000400
    6434:	40000c00 	.word	0x40000c00
    6438:	0000401e 	.word	0x0000401e
    643c:	42004000 	.word	0x42004000
    6440:	00004021 	.word	0x00004021
    6444:	42004800 	.word	0x42004800

00006448 <mapResolution>:
  _writeResolution = res;
}

static inline uint32_t mapResolution(uint32_t value, uint32_t from, uint32_t to)
{
  if (from == to) {
    6448:	4291      	cmp	r1, r2
    644a:	d002      	beq.n	6452 <mapResolution+0xa>
    return value;
  }
  if (from > to) {
    644c:	d902      	bls.n	6454 <mapResolution+0xc>
    return value >> (from-to);
    644e:	1a8a      	subs	r2, r1, r2
    6450:	40d0      	lsrs	r0, r2
  }
  return value << (to-from);
}
    6452:	4770      	bx	lr
  return value << (to-from);
    6454:	1a52      	subs	r2, r2, r1
    6456:	4090      	lsls	r0, r2
    6458:	e7fb      	b.n	6452 <mapResolution+0xa>
	...

0000645c <analogReference>:
  while (ADC->STATUS.bit.SYNCBUSY == 1)
    645c:	4a16      	ldr	r2, [pc, #88]	; (64b8 <analogReference+0x5c>)
 * External Reference should be between 1v and VDDANA-0.6v=2.7v
 *
 * Warning : On Arduino Zero board the input/output voltage for SAMD21G18 is 3.3 volts maximum
 */
void analogReference(eAnalogReference mode)
{
    645e:	b500      	push	{lr}
    6460:	0013      	movs	r3, r2
  while (ADC->STATUS.bit.SYNCBUSY == 1)
    6462:	7e51      	ldrb	r1, [r2, #25]
    6464:	09c9      	lsrs	r1, r1, #7
    6466:	2901      	cmp	r1, #1
    6468:	d0fb      	beq.n	6462 <analogReference+0x6>
  syncADC();
  switch (mode)
    646a:	3801      	subs	r0, #1
    646c:	2804      	cmp	r0, #4
    646e:	d816      	bhi.n	649e <analogReference+0x42>
      ADC->INPUTCTRL.bit.GAIN = ADC_INPUTCTRL_GAIN_1X_Val;      // Gain Factor Selection
      ADC->REFCTRL.bit.REFSEL = ADC_REFCTRL_REFSEL_INT1V_Val;   // 1.0V voltage reference
      break;

    case AR_INTERNAL1V65:
      ADC->INPUTCTRL.bit.GAIN = ADC_INPUTCTRL_GAIN_1X_Val;      // Gain Factor Selection
    6470:	6919      	ldr	r1, [r3, #16]
    6472:	4a12      	ldr	r2, [pc, #72]	; (64bc <analogReference+0x60>)
    6474:	400a      	ands	r2, r1
      ADC->REFCTRL.bit.REFSEL = ADC_REFCTRL_REFSEL_INTVCC1_Val; // 1/2 VDDANA = 0.5* 3V3 = 1.65V
    6476:	210f      	movs	r1, #15
      ADC->INPUTCTRL.bit.GAIN = ADC_INPUTCTRL_GAIN_1X_Val;      // Gain Factor Selection
    6478:	611a      	str	r2, [r3, #16]
      ADC->REFCTRL.bit.REFSEL = ADC_REFCTRL_REFSEL_INTVCC1_Val; // 1/2 VDDANA = 0.5* 3V3 = 1.65V
    647a:	785a      	ldrb	r2, [r3, #1]
    647c:	438a      	bics	r2, r1
  switch (mode)
    647e:	f000 fe0b 	bl	7098 <__gnu_thumb1_case_uqi>
    6482:	0803      	.short	0x0803
    6484:	0b06      	.short	0x0b06
    6486:	03          	.byte	0x03
    6487:	00          	.byte	0x00
      ADC->REFCTRL.bit.REFSEL = ADC_REFCTRL_REFSEL_INTVCC0_Val; // 1/1.48 VDDANA = 1/1.48* 3V3 = 2.2297
    6488:	0011      	movs	r1, r2
    648a:	2201      	movs	r2, #1
      ADC->REFCTRL.bit.REFSEL = ADC_REFCTRL_REFSEL_INTVCC1_Val; // 1/2 VDDANA = 0.5* 3V3 = 1.65V
    648c:	430a      	orrs	r2, r1
    648e:	705a      	strb	r2, [r3, #1]
    default:
      ADC->INPUTCTRL.bit.GAIN = ADC_INPUTCTRL_GAIN_DIV2_Val;
      ADC->REFCTRL.bit.REFSEL = ADC_REFCTRL_REFSEL_INTVCC1_Val; // 1/2 VDDANA = 0.5* 3V3 = 1.65V
      break;
  }
}
    6490:	bd00      	pop	{pc}
      ADC->REFCTRL.bit.REFSEL = ADC_REFCTRL_REFSEL_AREFA_Val;
    6492:	0011      	movs	r1, r2
    6494:	2203      	movs	r2, #3
    6496:	e7f9      	b.n	648c <analogReference+0x30>
      ADC->REFCTRL.bit.REFSEL = ADC_REFCTRL_REFSEL_INTVCC1_Val; // 1/2 VDDANA = 0.5* 3V3 = 1.65V
    6498:	0011      	movs	r1, r2
    649a:	2202      	movs	r2, #2
    649c:	e7f6      	b.n	648c <analogReference+0x30>
      ADC->INPUTCTRL.bit.GAIN = ADC_INPUTCTRL_GAIN_DIV2_Val;
    649e:	23f0      	movs	r3, #240	; 0xf0
    64a0:	6911      	ldr	r1, [r2, #16]
    64a2:	051b      	lsls	r3, r3, #20
    64a4:	430b      	orrs	r3, r1
      ADC->REFCTRL.bit.REFSEL = ADC_REFCTRL_REFSEL_INTVCC1_Val; // 1/2 VDDANA = 0.5* 3V3 = 1.65V
    64a6:	210f      	movs	r1, #15
      ADC->INPUTCTRL.bit.GAIN = ADC_INPUTCTRL_GAIN_DIV2_Val;
    64a8:	6113      	str	r3, [r2, #16]
      ADC->REFCTRL.bit.REFSEL = ADC_REFCTRL_REFSEL_INTVCC1_Val; // 1/2 VDDANA = 0.5* 3V3 = 1.65V
    64aa:	7853      	ldrb	r3, [r2, #1]
    64ac:	438b      	bics	r3, r1
    64ae:	0019      	movs	r1, r3
    64b0:	2302      	movs	r3, #2
    64b2:	430b      	orrs	r3, r1
    64b4:	7053      	strb	r3, [r2, #1]
}
    64b6:	e7eb      	b.n	6490 <analogReference+0x34>
    64b8:	42004000 	.word	0x42004000
    64bc:	f0ffffff 	.word	0xf0ffffff

000064c0 <analogRead>:

uint32_t analogRead(uint32_t pin)
{
    64c0:	b510      	push	{r4, lr}
    64c2:	0004      	movs	r4, r0
  uint32_t valueRead = 0;

  if (pin < A0) {
    64c4:	280e      	cmp	r0, #14
    64c6:	d800      	bhi.n	64ca <analogRead+0xa>
    pin += A0;
    64c8:	340f      	adds	r4, #15
  }

  pinPeripheral(pin, PIO_ANALOG);
    64ca:	2101      	movs	r1, #1
    64cc:	0020      	movs	r0, r4
    64ce:	f000 f8d9 	bl	6684 <pinPeripheral>

  // Disable DAC, if analogWrite() was used previously to enable the DAC
  if ((g_APinDescription[pin].ulADCChannelNumber == ADC_Channel0) || (g_APinDescription[pin].ulADCChannelNumber == DAC_Channel0)) {
    64d2:	2318      	movs	r3, #24
    64d4:	2110      	movs	r1, #16
    64d6:	4363      	muls	r3, r4
    64d8:	4c29      	ldr	r4, [pc, #164]	; (6580 <analogRead+0xc0>)
    64da:	18e4      	adds	r4, r4, r3
    64dc:	5661      	ldrsb	r1, [r4, r1]
    64de:	2900      	cmp	r1, #0
    64e0:	d03f      	beq.n	6562 <analogRead+0xa2>
    64e2:	2914      	cmp	r1, #20
    64e4:	d03d      	beq.n	6562 <analogRead+0xa2>
  while (ADC->STATUS.bit.SYNCBUSY == 1)
    64e6:	4827      	ldr	r0, [pc, #156]	; (6584 <analogRead+0xc4>)
    64e8:	0003      	movs	r3, r0
    64ea:	7e42      	ldrb	r2, [r0, #25]
    64ec:	09d2      	lsrs	r2, r2, #7
    64ee:	2a01      	cmp	r2, #1
    64f0:	d0fb      	beq.n	64ea <analogRead+0x2a>
    //DAC->CTRLB.bit.EOEN = 0x00; // The DAC output is turned off.
    syncDAC();
  }

  syncADC();
  ADC->INPUTCTRL.bit.MUXPOS = g_APinDescription[pin].ulADCChannelNumber; // Selection for the positive ADC input
    64f2:	241f      	movs	r4, #31
    64f4:	6902      	ldr	r2, [r0, #16]
    64f6:	4021      	ands	r1, r4
    64f8:	43a2      	bics	r2, r4
    64fa:	430a      	orrs	r2, r1
    64fc:	6102      	str	r2, [r0, #16]
  while (ADC->STATUS.bit.SYNCBUSY == 1)
    64fe:	7e5a      	ldrb	r2, [r3, #25]
    6500:	09d2      	lsrs	r2, r2, #7
    6502:	2a01      	cmp	r2, #1
    6504:	d0fb      	beq.n	64fe <analogRead+0x3e>
   *
   * Before enabling the ADC, the asynchronous clock source must be selected and enabled, and the ADC reference must be
   * configured. The first conversion after the reference is changed must not be used.
   */
  syncADC();
  ADC->CTRLA.bit.ENABLE = 0x01;             // Enable ADC
    6506:	2202      	movs	r2, #2
    6508:	7819      	ldrb	r1, [r3, #0]
    650a:	430a      	orrs	r2, r1
    650c:	701a      	strb	r2, [r3, #0]
  while (ADC->STATUS.bit.SYNCBUSY == 1)
    650e:	7e5a      	ldrb	r2, [r3, #25]
    6510:	09d2      	lsrs	r2, r2, #7
    6512:	2a01      	cmp	r2, #1
    6514:	d0fb      	beq.n	650e <analogRead+0x4e>

  // Start conversion
  syncADC();
  ADC->SWTRIG.bit.START = 1;
    6516:	2202      	movs	r2, #2
    6518:	7b19      	ldrb	r1, [r3, #12]
    651a:	430a      	orrs	r2, r1
    651c:	731a      	strb	r2, [r3, #12]

  // Clear the Data Ready flag
  ADC->INTFLAG.reg = ADC_INTFLAG_RESRDY;
    651e:	2201      	movs	r2, #1
    6520:	761a      	strb	r2, [r3, #24]
  while (ADC->STATUS.bit.SYNCBUSY == 1)
    6522:	7e5a      	ldrb	r2, [r3, #25]
    6524:	09d2      	lsrs	r2, r2, #7
    6526:	2a01      	cmp	r2, #1
    6528:	d0fb      	beq.n	6522 <analogRead+0x62>

  // Start conversion again, since The first conversion after the reference is changed must not be used.
  syncADC();
  ADC->SWTRIG.bit.START = 1;
    652a:	2202      	movs	r2, #2
    652c:	7b19      	ldrb	r1, [r3, #12]
    652e:	430a      	orrs	r2, r1
    6530:	731a      	strb	r2, [r3, #12]

  // Store the value
  while (ADC->INTFLAG.bit.RESRDY == 0);   // Waiting for conversion to complete
    6532:	7e1a      	ldrb	r2, [r3, #24]
    6534:	07d2      	lsls	r2, r2, #31
    6536:	d5fc      	bpl.n	6532 <analogRead+0x72>
  valueRead = ADC->RESULT.reg;
    6538:	8b58      	ldrh	r0, [r3, #26]
    653a:	b280      	uxth	r0, r0
  while (ADC->STATUS.bit.SYNCBUSY == 1)
    653c:	7e5a      	ldrb	r2, [r3, #25]
    653e:	09d2      	lsrs	r2, r2, #7
    6540:	2a01      	cmp	r2, #1
    6542:	d0fb      	beq.n	653c <analogRead+0x7c>

  syncADC();
  ADC->CTRLA.bit.ENABLE = 0x00;             // Disable ADC
    6544:	2102      	movs	r1, #2
    6546:	781a      	ldrb	r2, [r3, #0]
    6548:	438a      	bics	r2, r1
    654a:	701a      	strb	r2, [r3, #0]
  while (ADC->STATUS.bit.SYNCBUSY == 1)
    654c:	7e5a      	ldrb	r2, [r3, #25]
    654e:	09d2      	lsrs	r2, r2, #7
    6550:	2a01      	cmp	r2, #1
    6552:	d0fb      	beq.n	654c <analogRead+0x8c>
  syncADC();

  return mapResolution(valueRead, _ADCResolution, _readResolution);
    6554:	4b0c      	ldr	r3, [pc, #48]	; (6588 <analogRead+0xc8>)
    6556:	681a      	ldr	r2, [r3, #0]
    6558:	4b0c      	ldr	r3, [pc, #48]	; (658c <analogRead+0xcc>)
    655a:	6819      	ldr	r1, [r3, #0]
    655c:	f7ff ff74 	bl	6448 <mapResolution>
}
    6560:	bd10      	pop	{r4, pc}
  while (DAC->STATUS.bit.SYNCBUSY == 1)
    6562:	4b0b      	ldr	r3, [pc, #44]	; (6590 <analogRead+0xd0>)
    6564:	0018      	movs	r0, r3
    6566:	79da      	ldrb	r2, [r3, #7]
    6568:	09d2      	lsrs	r2, r2, #7
    656a:	2a01      	cmp	r2, #1
    656c:	d0fb      	beq.n	6566 <analogRead+0xa6>
    DAC->CTRLA.bit.ENABLE = 0x00; // Disable DAC
    656e:	2402      	movs	r4, #2
    6570:	781a      	ldrb	r2, [r3, #0]
    6572:	43a2      	bics	r2, r4
    6574:	701a      	strb	r2, [r3, #0]
  while (DAC->STATUS.bit.SYNCBUSY == 1)
    6576:	79c3      	ldrb	r3, [r0, #7]
    6578:	09db      	lsrs	r3, r3, #7
    657a:	2b01      	cmp	r3, #1
    657c:	d0fb      	beq.n	6576 <analogRead+0xb6>
    657e:	e7b2      	b.n	64e6 <analogRead+0x26>
    6580:	0000b708 	.word	0x0000b708
    6584:	42004000 	.word	0x42004000
    6588:	2000008c 	.word	0x2000008c
    658c:	20000088 	.word	0x20000088
    6590:	42004800 	.word	0x42004800

00006594 <pinMode>:
#endif

void pinMode( uint32_t ulPin, uint32_t ulMode )
{
  // Handle the case the pin isn't usable as PIO
  if ( g_APinDescription[ulPin].ulPinType == PIO_NOT_A_PIN )
    6594:	2318      	movs	r3, #24
{
    6596:	b530      	push	{r4, r5, lr}
  if ( g_APinDescription[ulPin].ulPinType == PIO_NOT_A_PIN )
    6598:	001d      	movs	r5, r3
{
    659a:	0004      	movs	r4, r0
  if ( g_APinDescription[ulPin].ulPinType == PIO_NOT_A_PIN )
    659c:	4345      	muls	r5, r0
    659e:	2008      	movs	r0, #8
    65a0:	4a20      	ldr	r2, [pc, #128]	; (6624 <pinMode+0x90>)
    65a2:	1955      	adds	r5, r2, r5
    65a4:	5628      	ldrsb	r0, [r5, r0]
    65a6:	3001      	adds	r0, #1
    65a8:	d014      	beq.n	65d4 <pinMode+0x40>
  {
    return ;
  }

  // Set pin mode according to chapter '22.6.3 I/O Pin Configuration'
  switch ( ulMode )
    65aa:	2903      	cmp	r1, #3
    65ac:	d812      	bhi.n	65d4 <pinMode+0x40>
    65ae:	0008      	movs	r0, r1
      PORT->Group[g_APinDescription[ulPin].ulPort].OUTSET.reg = (uint32_t)(1<<g_APinDescription[ulPin].ulPin) ;
    break ;

    case INPUT_PULLDOWN:
      // Set pin to input mode with pull-down resistor enabled
      PORT->Group[g_APinDescription[ulPin].ulPort].PINCFG[g_APinDescription[ulPin].ulPin].reg=(uint8_t)(PORT_PINCFG_INEN|PORT_PINCFG_PULLEN) ;
    65b0:	4363      	muls	r3, r4
    65b2:	56d1      	ldrsb	r1, [r2, r3]
    65b4:	18d3      	adds	r3, r2, r3
  switch ( ulMode )
    65b6:	f000 fd6f 	bl	7098 <__gnu_thumb1_case_uqi>
    65ba:	2802      	.short	0x2802
    65bc:	1b0e      	.short	0x1b0e
      PORT->Group[g_APinDescription[ulPin].ulPort].PINCFG[g_APinDescription[ulPin].ulPin].reg=(uint8_t)(PORT_PINCFG_INEN) ;
    65be:	6858      	ldr	r0, [r3, #4]
    65c0:	01cb      	lsls	r3, r1, #7
    65c2:	2102      	movs	r1, #2
    65c4:	4a18      	ldr	r2, [pc, #96]	; (6628 <pinMode+0x94>)
    65c6:	189b      	adds	r3, r3, r2
    65c8:	181a      	adds	r2, r3, r0
    65ca:	3240      	adds	r2, #64	; 0x40
    65cc:	7011      	strb	r1, [r2, #0]
      PORT->Group[g_APinDescription[ulPin].ulPort].DIRCLR.reg = (uint32_t)(1<<g_APinDescription[ulPin].ulPin) ;
    65ce:	2201      	movs	r2, #1
    65d0:	4082      	lsls	r2, r0
    65d2:	605a      	str	r2, [r3, #4]

    default:
      // do nothing
    break ;
  }
}
    65d4:	bd30      	pop	{r4, r5, pc}
      PORT->Group[g_APinDescription[ulPin].ulPort].PINCFG[g_APinDescription[ulPin].ulPin].reg=(uint8_t)(PORT_PINCFG_INEN|PORT_PINCFG_PULLEN) ;
    65d6:	6858      	ldr	r0, [r3, #4]
    65d8:	01cb      	lsls	r3, r1, #7
    65da:	2106      	movs	r1, #6
    65dc:	4a12      	ldr	r2, [pc, #72]	; (6628 <pinMode+0x94>)
    65de:	189b      	adds	r3, r3, r2
    65e0:	181a      	adds	r2, r3, r0
    65e2:	3240      	adds	r2, #64	; 0x40
    65e4:	7011      	strb	r1, [r2, #0]
      PORT->Group[g_APinDescription[ulPin].ulPort].DIRCLR.reg = (uint32_t)(1<<g_APinDescription[ulPin].ulPin) ;
    65e6:	2201      	movs	r2, #1
    65e8:	4082      	lsls	r2, r0
    65ea:	605a      	str	r2, [r3, #4]
      PORT->Group[g_APinDescription[ulPin].ulPort].OUTSET.reg = (uint32_t)(1<<g_APinDescription[ulPin].ulPin) ;
    65ec:	619a      	str	r2, [r3, #24]
    break ;
    65ee:	e7f1      	b.n	65d4 <pinMode+0x40>
      PORT->Group[g_APinDescription[ulPin].ulPort].PINCFG[g_APinDescription[ulPin].ulPin].reg=(uint8_t)(PORT_PINCFG_INEN|PORT_PINCFG_PULLEN) ;
    65f0:	6858      	ldr	r0, [r3, #4]
    65f2:	01cb      	lsls	r3, r1, #7
    65f4:	2106      	movs	r1, #6
    65f6:	4a0c      	ldr	r2, [pc, #48]	; (6628 <pinMode+0x94>)
    65f8:	189b      	adds	r3, r3, r2
    65fa:	181a      	adds	r2, r3, r0
    65fc:	3240      	adds	r2, #64	; 0x40
    65fe:	7011      	strb	r1, [r2, #0]
      PORT->Group[g_APinDescription[ulPin].ulPort].DIRCLR.reg = (uint32_t)(1<<g_APinDescription[ulPin].ulPin) ;
    6600:	2201      	movs	r2, #1
    6602:	4082      	lsls	r2, r0
    6604:	605a      	str	r2, [r3, #4]
      PORT->Group[g_APinDescription[ulPin].ulPort].OUTCLR.reg = (uint32_t)(1<<g_APinDescription[ulPin].ulPin) ;
    6606:	615a      	str	r2, [r3, #20]
    break ;
    6608:	e7e4      	b.n	65d4 <pinMode+0x40>
      PORT->Group[g_APinDescription[ulPin].ulPort].PINCFG[g_APinDescription[ulPin].ulPin].reg=(uint8_t)(PORT_PINCFG_INEN) ;
    660a:	6858      	ldr	r0, [r3, #4]
    660c:	01cb      	lsls	r3, r1, #7
    660e:	2102      	movs	r1, #2
    6610:	4a05      	ldr	r2, [pc, #20]	; (6628 <pinMode+0x94>)
    6612:	189b      	adds	r3, r3, r2
    6614:	181a      	adds	r2, r3, r0
    6616:	3240      	adds	r2, #64	; 0x40
    6618:	7011      	strb	r1, [r2, #0]
      PORT->Group[g_APinDescription[ulPin].ulPort].DIRSET.reg = (uint32_t)(1<<g_APinDescription[ulPin].ulPin) ;
    661a:	2201      	movs	r2, #1
    661c:	4082      	lsls	r2, r0
    661e:	609a      	str	r2, [r3, #8]
    break ;
    6620:	e7d8      	b.n	65d4 <pinMode+0x40>
    6622:	46c0      	nop			; (mov r8, r8)
    6624:	0000b708 	.word	0x0000b708
    6628:	41004400 	.word	0x41004400

0000662c <digitalWrite>:

void digitalWrite( uint32_t ulPin, uint32_t ulVal )
{
  // Handle the case the pin isn't usable as PIO
  if ( g_APinDescription[ulPin].ulPinType == PIO_NOT_A_PIN )
    662c:	2318      	movs	r3, #24
{
    662e:	b5f0      	push	{r4, r5, r6, r7, lr}
  if ( g_APinDescription[ulPin].ulPinType == PIO_NOT_A_PIN )
    6630:	2408      	movs	r4, #8
    6632:	4358      	muls	r0, r3
    6634:	4a11      	ldr	r2, [pc, #68]	; (667c <digitalWrite+0x50>)
    6636:	1813      	adds	r3, r2, r0
    6638:	571c      	ldrsb	r4, [r3, r4]
    663a:	3401      	adds	r4, #1
    663c:	d01b      	beq.n	6676 <digitalWrite+0x4a>
    return ;
  }

  EPortType port = g_APinDescription[ulPin].ulPort;
  uint32_t pin = g_APinDescription[ulPin].ulPin;
  uint32_t pinMask = (1ul << pin);
    663e:	2601      	movs	r6, #1
    6640:	0035      	movs	r5, r6
  uint32_t pin = g_APinDescription[ulPin].ulPin;
    6642:	685f      	ldr	r7, [r3, #4]

  if ( (PORT->Group[port].DIRSET.reg & pinMask) == 0 ) {
    6644:	5683      	ldrsb	r3, [r0, r2]
  uint32_t pinMask = (1ul << pin);
    6646:	40bd      	lsls	r5, r7
  if ( (PORT->Group[port].DIRSET.reg & pinMask) == 0 ) {
    6648:	4a0d      	ldr	r2, [pc, #52]	; (6680 <digitalWrite+0x54>)
    664a:	01db      	lsls	r3, r3, #7
    664c:	189a      	adds	r2, r3, r2
    664e:	6890      	ldr	r0, [r2, #8]
    6650:	4228      	tst	r0, r5
    6652:	d10b      	bne.n	666c <digitalWrite+0x40>
    // the pin is not an output, disable pull-up if val is LOW, otherwise enable pull-up
    PORT->Group[port].PINCFG[pin].bit.PULLEN = ((ulVal == LOW) ? 0 : 1) ;
    6654:	000c      	movs	r4, r1
    6656:	1e60      	subs	r0, r4, #1
    6658:	4184      	sbcs	r4, r0
    665a:	19d2      	adds	r2, r2, r7
    665c:	3240      	adds	r2, #64	; 0x40
    665e:	7810      	ldrb	r0, [r2, #0]
    6660:	4034      	ands	r4, r6
    6662:	3603      	adds	r6, #3
    6664:	00a4      	lsls	r4, r4, #2
    6666:	43b0      	bics	r0, r6
    6668:	4320      	orrs	r0, r4
    666a:	7010      	strb	r0, [r2, #0]
  }

  switch ( ulVal )
  {
    case LOW:
      PORT->Group[port].OUTCLR.reg = pinMask;
    666c:	4a04      	ldr	r2, [pc, #16]	; (6680 <digitalWrite+0x54>)
    666e:	189b      	adds	r3, r3, r2
  switch ( ulVal )
    6670:	2900      	cmp	r1, #0
    6672:	d101      	bne.n	6678 <digitalWrite+0x4c>
      PORT->Group[port].OUTCLR.reg = pinMask;
    6674:	615d      	str	r5, [r3, #20]
      PORT->Group[port].OUTSET.reg = pinMask;
    break ;
  }

  return ;
}
    6676:	bdf0      	pop	{r4, r5, r6, r7, pc}
      PORT->Group[port].OUTSET.reg = pinMask;
    6678:	619d      	str	r5, [r3, #24]
    break ;
    667a:	e7fc      	b.n	6676 <digitalWrite+0x4a>
    667c:	0000b708 	.word	0x0000b708
    6680:	41004400 	.word	0x41004400

00006684 <pinPeripheral>:

#include "Arduino.h"
#include "wiring_private.h"

int pinPeripheral( uint32_t ulPin, EPioType ulPeripheral )
{
    6684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6686:	0003      	movs	r3, r0
  // Handle the case the pin isn't usable as PIO
  if ( g_APinDescription[ulPin].ulPinType == PIO_NOT_A_PIN )
    6688:	2018      	movs	r0, #24
    668a:	4358      	muls	r0, r3
    668c:	4a2a      	ldr	r2, [pc, #168]	; (6738 <pinPeripheral+0xb4>)
    668e:	1810      	adds	r0, r2, r0
    6690:	7a00      	ldrb	r0, [r0, #8]
    6692:	b240      	sxtb	r0, r0
  {
    return -1 ;
    6694:	0004      	movs	r4, r0
  if ( g_APinDescription[ulPin].ulPinType == PIO_NOT_A_PIN )
    6696:	3001      	adds	r0, #1
    6698:	d013      	beq.n	66c2 <pinPeripheral+0x3e>
  }

  switch ( ulPeripheral )
    669a:	1c48      	adds	r0, r1, #1
    case PIO_NOT_A_PIN:
      return -1l ;
    break ;
  }

  return 0l ;
    669c:	2400      	movs	r4, #0
  switch ( ulPeripheral )
    669e:	280c      	cmp	r0, #12
    66a0:	d80f      	bhi.n	66c2 <pinPeripheral+0x3e>
    66a2:	f000 fcf9 	bl	7098 <__gnu_thumb1_case_uqi>
    66a6:	1c45      	.short	0x1c45
    66a8:	1c1c1c1c 	.word	0x1c1c1c1c
    66ac:	071c1c1c 	.word	0x071c1c1c
    66b0:	0707      	.short	0x0707
    66b2:	07          	.byte	0x07
    66b3:	00          	.byte	0x00
      if ( ulPeripheral == PIO_INPUT )
    66b4:	2909      	cmp	r1, #9
    66b6:	d106      	bne.n	66c6 <pinPeripheral+0x42>
        pinMode( ulPin, INPUT ) ;
    66b8:	2100      	movs	r1, #0
          pinMode( ulPin, INPUT_PULLUP ) ;
    66ba:	0018      	movs	r0, r3
    66bc:	f7ff ff6a 	bl	6594 <pinMode>
  return 0l ;
    66c0:	2400      	movs	r4, #0
}
    66c2:	0020      	movs	r0, r4
    66c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if ( ulPeripheral == PIO_INPUT_PULLUP )
    66c6:	290a      	cmp	r1, #10
    66c8:	d101      	bne.n	66ce <pinPeripheral+0x4a>
          pinMode( ulPin, INPUT_PULLUP ) ;
    66ca:	3908      	subs	r1, #8
    66cc:	e7f5      	b.n	66ba <pinPeripheral+0x36>
  return 0l ;
    66ce:	2400      	movs	r4, #0
          if ( ulPeripheral == PIO_OUTPUT )
    66d0:	290b      	cmp	r1, #11
    66d2:	d1f6      	bne.n	66c2 <pinPeripheral+0x3e>
            pinMode( ulPin, OUTPUT ) ;
    66d4:	390a      	subs	r1, #10
    66d6:	0018      	movs	r0, r3
    66d8:	f7ff ff5c 	bl	6594 <pinMode>
    66dc:	e7f1      	b.n	66c2 <pinPeripheral+0x3e>
      if ( g_APinDescription[ulPin].ulPin & 1 ) // is pin odd?
    66de:	2018      	movs	r0, #24
    66e0:	4343      	muls	r3, r0
    66e2:	18d0      	adds	r0, r2, r3
    66e4:	6846      	ldr	r6, [r0, #4]
    66e6:	2501      	movs	r5, #1
    66e8:	0034      	movs	r4, r6
    66ea:	56d2      	ldrsb	r2, [r2, r3]
        temp = (PORT->Group[g_APinDescription[ulPin].ulPort].PMUX[g_APinDescription[ulPin].ulPin >> 1].reg) & PORT_PMUX_PMUXE( 0xF ) ;
    66ec:	4813      	ldr	r0, [pc, #76]	; (673c <pinPeripheral+0xb8>)
    66ee:	01d2      	lsls	r2, r2, #7
    66f0:	1812      	adds	r2, r2, r0
    66f2:	0873      	lsrs	r3, r6, #1
    66f4:	18d3      	adds	r3, r2, r3
    66f6:	3330      	adds	r3, #48	; 0x30
      if ( g_APinDescription[ulPin].ulPin & 1 ) // is pin odd?
    66f8:	402c      	ands	r4, r5
        temp = (PORT->Group[g_APinDescription[ulPin].ulPort].PMUX[g_APinDescription[ulPin].ulPin >> 1].reg) & PORT_PMUX_PMUXE( 0xF ) ;
    66fa:	7818      	ldrb	r0, [r3, #0]
      if ( g_APinDescription[ulPin].ulPin & 1 ) // is pin odd?
    66fc:	2c00      	cmp	r4, #0
    66fe:	d00b      	beq.n	6718 <pinPeripheral+0x94>
        PORT->Group[g_APinDescription[ulPin].ulPort].PMUX[g_APinDescription[ulPin].ulPin >> 1].reg = temp|PORT_PMUX_PMUXO( ulPeripheral ) ;
    6700:	240f      	movs	r4, #15
    6702:	0109      	lsls	r1, r1, #4
    6704:	4020      	ands	r0, r4
    6706:	4301      	orrs	r1, r0
    6708:	b2c9      	uxtb	r1, r1
        PORT->Group[g_APinDescription[ulPin].ulPort].PINCFG[g_APinDescription[ulPin].ulPin].reg |= PORT_PINCFG_PMUXEN ;
    670a:	1992      	adds	r2, r2, r6
        PORT->Group[g_APinDescription[ulPin].ulPort].PMUX[g_APinDescription[ulPin].ulPin >> 1].reg = temp|PORT_PMUX_PMUXO( ulPeripheral ) ;
    670c:	7019      	strb	r1, [r3, #0]
        PORT->Group[g_APinDescription[ulPin].ulPort].PINCFG[g_APinDescription[ulPin].ulPin].reg |= PORT_PINCFG_PMUXEN ;
    670e:	3240      	adds	r2, #64	; 0x40
    6710:	7813      	ldrb	r3, [r2, #0]
    6712:	431d      	orrs	r5, r3
    6714:	7015      	strb	r5, [r2, #0]
    6716:	e7d3      	b.n	66c0 <pinPeripheral+0x3c>
        PORT->Group[g_APinDescription[ulPin].ulPort].PMUX[g_APinDescription[ulPin].ulPin >> 1].reg = temp|PORT_PMUX_PMUXE( ulPeripheral ) ;
    6718:	270f      	movs	r7, #15
    671a:	43b8      	bics	r0, r7
    671c:	4301      	orrs	r1, r0
        PORT->Group[g_APinDescription[ulPin].ulPort].PINCFG[g_APinDescription[ulPin].ulPin].reg |= PORT_PINCFG_PMUXEN ; // Enable port mux
    671e:	1992      	adds	r2, r2, r6
        PORT->Group[g_APinDescription[ulPin].ulPort].PMUX[g_APinDescription[ulPin].ulPin >> 1].reg = temp|PORT_PMUX_PMUXE( ulPeripheral ) ;
    6720:	b2c9      	uxtb	r1, r1
    6722:	7019      	strb	r1, [r3, #0]
        PORT->Group[g_APinDescription[ulPin].ulPort].PINCFG[g_APinDescription[ulPin].ulPin].reg |= PORT_PINCFG_PMUXEN ; // Enable port mux
    6724:	0013      	movs	r3, r2
    6726:	3340      	adds	r3, #64	; 0x40
    6728:	781a      	ldrb	r2, [r3, #0]
    672a:	4315      	orrs	r5, r2
    672c:	701d      	strb	r5, [r3, #0]
    672e:	e7c8      	b.n	66c2 <pinPeripheral+0x3e>
      return -1l ;
    6730:	2401      	movs	r4, #1
    6732:	4264      	negs	r4, r4
    6734:	e7c5      	b.n	66c2 <pinPeripheral+0x3e>
    6736:	46c0      	nop			; (mov r8, r8)
    6738:	0000b708 	.word	0x0000b708
    673c:	41004400 	.word	0x41004400

00006740 <_Z3maplllll>:

  return random(diff) + howsmall;
}

extern long map(long x, long in_min, long in_max, long out_min, long out_max)
{
    6740:	b510      	push	{r4, lr}
    6742:	001c      	movs	r4, r3
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
    6744:	1a43      	subs	r3, r0, r1
    6746:	9802      	ldr	r0, [sp, #8]
    6748:	1a51      	subs	r1, r2, r1
    674a:	1b00      	subs	r0, r0, r4
    674c:	4358      	muls	r0, r3
    674e:	f000 fd37 	bl	71c0 <__divsi3>
    6752:	1900      	adds	r0, r0, r4
}
    6754:	bd10      	pop	{r4, pc}

00006756 <_ZN6StringD1Ev>:
	init();
	char buf[33];
	*this = dtostrf(value, (decimalPlaces + 2), decimalPlaces, buf);
}

String::~String()
    6756:	b510      	push	{r4, lr}
    6758:	0004      	movs	r4, r0
{
	free(buffer);
    675a:	6800      	ldr	r0, [r0, #0]
    675c:	f002 fc1e 	bl	8f9c <free>
}
    6760:	0020      	movs	r0, r4
    6762:	bd10      	pop	{r4, pc}

00006764 <_ZN6String10invalidateEv>:
	capacity = 0;
	len = 0;
}

void String::invalidate(void)
{
    6764:	b510      	push	{r4, lr}
    6766:	0004      	movs	r4, r0
	if (buffer) free(buffer);
    6768:	6800      	ldr	r0, [r0, #0]
    676a:	2800      	cmp	r0, #0
    676c:	d001      	beq.n	6772 <_ZN6String10invalidateEv+0xe>
    676e:	f002 fc15 	bl	8f9c <free>
	buffer = NULL;
    6772:	2300      	movs	r3, #0
    6774:	6023      	str	r3, [r4, #0]
	capacity = len = 0;
    6776:	60a3      	str	r3, [r4, #8]
    6778:	6063      	str	r3, [r4, #4]
}
    677a:	bd10      	pop	{r4, pc}

0000677c <_ZN6String12changeBufferEj>:
	}
	return 0;
}

unsigned char String::changeBuffer(unsigned int maxStrLen)
{
    677c:	b570      	push	{r4, r5, r6, lr}
    677e:	0004      	movs	r4, r0
    6780:	000d      	movs	r5, r1
	char *newbuffer = (char *)realloc(buffer, maxStrLen + 1);
    6782:	6800      	ldr	r0, [r0, #0]
    6784:	3101      	adds	r1, #1
    6786:	f003 f96f 	bl	9a68 <realloc>
    678a:	1e03      	subs	r3, r0, #0
	if (newbuffer) {
    678c:	d001      	beq.n	6792 <_ZN6String12changeBufferEj+0x16>
		buffer = newbuffer;
		capacity = maxStrLen;
		return 1;
    678e:	2001      	movs	r0, #1
		capacity = maxStrLen;
    6790:	c428      	stmia	r4!, {r3, r5}
	}
	return 0;
}
    6792:	bd70      	pop	{r4, r5, r6, pc}

00006794 <_ZN6String7reserveEj>:
	if (buffer && capacity >= size) return 1;
    6794:	6803      	ldr	r3, [r0, #0]
{
    6796:	b510      	push	{r4, lr}
    6798:	0004      	movs	r4, r0
	if (buffer && capacity >= size) return 1;
    679a:	2b00      	cmp	r3, #0
    679c:	d004      	beq.n	67a8 <_ZN6String7reserveEj+0x14>
    679e:	6843      	ldr	r3, [r0, #4]
    67a0:	428b      	cmp	r3, r1
    67a2:	d301      	bcc.n	67a8 <_ZN6String7reserveEj+0x14>
		if (len == 0) buffer[0] = 0;
    67a4:	2001      	movs	r0, #1
}
    67a6:	bd10      	pop	{r4, pc}
	if (changeBuffer(size)) {
    67a8:	0020      	movs	r0, r4
    67aa:	f7ff ffe7 	bl	677c <_ZN6String12changeBufferEj>
    67ae:	2800      	cmp	r0, #0
    67b0:	d0f9      	beq.n	67a6 <_ZN6String7reserveEj+0x12>
		if (len == 0) buffer[0] = 0;
    67b2:	68a3      	ldr	r3, [r4, #8]
    67b4:	2b00      	cmp	r3, #0
    67b6:	d1f5      	bne.n	67a4 <_ZN6String7reserveEj+0x10>
    67b8:	6822      	ldr	r2, [r4, #0]
    67ba:	7013      	strb	r3, [r2, #0]
    67bc:	e7f2      	b.n	67a4 <_ZN6String7reserveEj+0x10>

000067be <_ZN6String4copyEPKcj>:
/*********************************************/
/*  Copy and Move                            */
/*********************************************/

String & String::copy(const char *cstr, unsigned int length)
{
    67be:	b570      	push	{r4, r5, r6, lr}
    67c0:	000e      	movs	r6, r1
	if (!reserve(length)) {
    67c2:	0011      	movs	r1, r2
{
    67c4:	0004      	movs	r4, r0
    67c6:	0015      	movs	r5, r2
	if (!reserve(length)) {
    67c8:	f7ff ffe4 	bl	6794 <_ZN6String7reserveEj>
    67cc:	2800      	cmp	r0, #0
    67ce:	d104      	bne.n	67da <_ZN6String4copyEPKcj+0x1c>
		invalidate();
    67d0:	0020      	movs	r0, r4
    67d2:	f7ff ffc7 	bl	6764 <_ZN6String10invalidateEv>
		return *this;
	}
	len = length;
	strcpy(buffer, cstr);
	return *this;
}
    67d6:	0020      	movs	r0, r4
    67d8:	bd70      	pop	{r4, r5, r6, pc}
	len = length;
    67da:	60a5      	str	r5, [r4, #8]
	strcpy(buffer, cstr);
    67dc:	0031      	movs	r1, r6
    67de:	6820      	ldr	r0, [r4, #0]
    67e0:	f003 f980 	bl	9ae4 <strcpy>
	return *this;
    67e4:	e7f7      	b.n	67d6 <_ZN6String4copyEPKcj+0x18>

000067e6 <_ZN6StringC1EPKc>:
	buffer = NULL;
    67e6:	2300      	movs	r3, #0
String::String(const char *cstr)
    67e8:	b570      	push	{r4, r5, r6, lr}
    67ea:	0004      	movs	r4, r0
    67ec:	000d      	movs	r5, r1
	buffer = NULL;
    67ee:	6003      	str	r3, [r0, #0]
	capacity = 0;
    67f0:	6043      	str	r3, [r0, #4]
	len = 0;
    67f2:	6083      	str	r3, [r0, #8]
	if (cstr) copy(cstr, strlen(cstr));
    67f4:	4299      	cmp	r1, r3
    67f6:	d007      	beq.n	6808 <_ZN6StringC1EPKc+0x22>
    67f8:	0008      	movs	r0, r1
    67fa:	f003 f97b 	bl	9af4 <strlen>
    67fe:	0029      	movs	r1, r5
    6800:	0002      	movs	r2, r0
    6802:	0020      	movs	r0, r4
    6804:	f7ff ffdb 	bl	67be <_ZN6String4copyEPKcj>
}
    6808:	0020      	movs	r0, r4
    680a:	bd70      	pop	{r4, r5, r6, pc}

0000680c <_Z11initVariantv>:
  PERIPH_WIRE.disableWIRE();
}

#endif

void initVariant() {
    680c:	b510      	push	{r4, lr}
  }
  disable_battery_fet(!batteryPresent);
#endif

  // NINA - SPI boot
  pinMode(NINA_GPIO0, OUTPUT);
    680e:	2101      	movs	r1, #1
    6810:	201e      	movs	r0, #30
    6812:	f7ff febf 	bl	6594 <pinMode>
  digitalWrite(NINA_GPIO0, HIGH);
    6816:	2101      	movs	r1, #1
    6818:	201e      	movs	r0, #30
    681a:	f7ff ff07 	bl	662c <digitalWrite>

  // disable NINA
  pinMode(NINA_RESETN, OUTPUT);
    681e:	2101      	movs	r1, #1
    6820:	201f      	movs	r0, #31
    6822:	f7ff feb7 	bl	6594 <pinMode>
  digitalWrite(NINA_RESETN, HIGH);
    6826:	2101      	movs	r1, #1
    6828:	201f      	movs	r0, #31
    682a:	f7ff feff 	bl	662c <digitalWrite>
}
    682e:	bd10      	pop	{r4, pc}

00006830 <SERCOM5_Handler>:

// Serial1
Uart Serial1(&sercom5, PIN_SERIAL1_RX, PIN_SERIAL1_TX, PAD_SERIAL1_RX, PAD_SERIAL1_TX);

void SERCOM5_Handler()
{
    6830:	b510      	push	{r4, lr}
  Serial1.IrqHandler();
    6832:	4802      	ldr	r0, [pc, #8]	; (683c <SERCOM5_Handler+0xc>)
    6834:	f000 faeb 	bl	6e0e <_ZN4Uart10IrqHandlerEv>
}
    6838:	bd10      	pop	{r4, pc}
    683a:	46c0      	nop			; (mov r8, r8)
    683c:	20000be4 	.word	0x20000be4

00006840 <SERCOM4_Handler>:

// Serial2
Uart Serial2(&sercom4, PIN_SERIAL2_RX, PIN_SERIAL2_TX, PAD_SERIAL2_RX, PAD_SERIAL2_TX, PIN_SERIAL2_RTS, PIN_SERIAL2_CTS);

void SERCOM4_Handler()
{
    6840:	b510      	push	{r4, lr}
  Serial2.IrqHandler();
    6842:	4802      	ldr	r0, [pc, #8]	; (684c <SERCOM4_Handler+0xc>)
    6844:	f000 fae3 	bl	6e0e <_ZN4Uart10IrqHandlerEv>
}
    6848:	bd10      	pop	{r4, pc}
    684a:	46c0      	nop			; (mov r8, r8)
    684c:	20000e20 	.word	0x20000e20

00006850 <_GLOBAL__sub_I_g_APinDescription>:
    6850:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
SERCOM sercom0(SERCOM0);
    6852:	4919      	ldr	r1, [pc, #100]	; (68b8 <_GLOBAL__sub_I_g_APinDescription+0x68>)
    6854:	4819      	ldr	r0, [pc, #100]	; (68bc <_GLOBAL__sub_I_g_APinDescription+0x6c>)
    6856:	f000 f84b 	bl	68f0 <_ZN6SERCOMC1EP6Sercom>
SERCOM sercom1(SERCOM1);
    685a:	4919      	ldr	r1, [pc, #100]	; (68c0 <_GLOBAL__sub_I_g_APinDescription+0x70>)
    685c:	4819      	ldr	r0, [pc, #100]	; (68c4 <_GLOBAL__sub_I_g_APinDescription+0x74>)
    685e:	f000 f847 	bl	68f0 <_ZN6SERCOMC1EP6Sercom>
SERCOM sercom2(SERCOM2);
    6862:	4919      	ldr	r1, [pc, #100]	; (68c8 <_GLOBAL__sub_I_g_APinDescription+0x78>)
    6864:	4819      	ldr	r0, [pc, #100]	; (68cc <_GLOBAL__sub_I_g_APinDescription+0x7c>)
    6866:	f000 f843 	bl	68f0 <_ZN6SERCOMC1EP6Sercom>
SERCOM sercom3(SERCOM3);
    686a:	4919      	ldr	r1, [pc, #100]	; (68d0 <_GLOBAL__sub_I_g_APinDescription+0x80>)
    686c:	4819      	ldr	r0, [pc, #100]	; (68d4 <_GLOBAL__sub_I_g_APinDescription+0x84>)
    686e:	f000 f83f 	bl	68f0 <_ZN6SERCOMC1EP6Sercom>
SERCOM sercom4(SERCOM4);
    6872:	4c19      	ldr	r4, [pc, #100]	; (68d8 <_GLOBAL__sub_I_g_APinDescription+0x88>)
    6874:	4919      	ldr	r1, [pc, #100]	; (68dc <_GLOBAL__sub_I_g_APinDescription+0x8c>)
    6876:	0020      	movs	r0, r4
    6878:	f000 f83a 	bl	68f0 <_ZN6SERCOMC1EP6Sercom>
SERCOM sercom5(SERCOM5);
    687c:	4e18      	ldr	r6, [pc, #96]	; (68e0 <_GLOBAL__sub_I_g_APinDescription+0x90>)
    687e:	4919      	ldr	r1, [pc, #100]	; (68e4 <_GLOBAL__sub_I_g_APinDescription+0x94>)
    6880:	0030      	movs	r0, r6
    6882:	f000 f835 	bl	68f0 <_ZN6SERCOMC1EP6Sercom>
Uart Serial1(&sercom5, PIN_SERIAL1_RX, PIN_SERIAL1_TX, PAD_SERIAL1_RX, PAD_SERIAL1_TX);
    6886:	2501      	movs	r5, #1
    6888:	2303      	movs	r3, #3
    688a:	0031      	movs	r1, r6
    688c:	9501      	str	r5, [sp, #4]
    688e:	9300      	str	r3, [sp, #0]
    6890:	220d      	movs	r2, #13
    6892:	330b      	adds	r3, #11
    6894:	4814      	ldr	r0, [pc, #80]	; (68e8 <_GLOBAL__sub_I_g_APinDescription+0x98>)
    6896:	f000 fa4f 	bl	6d38 <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPad>
Uart Serial2(&sercom4, PIN_SERIAL2_RX, PIN_SERIAL2_TX, PAD_SERIAL2_RX, PAD_SERIAL2_TX, PIN_SERIAL2_RTS, PIN_SERIAL2_CTS);
    689a:	231d      	movs	r3, #29
    689c:	9303      	str	r3, [sp, #12]
    689e:	3b01      	subs	r3, #1
    68a0:	9302      	str	r3, [sp, #8]
    68a2:	3b1a      	subs	r3, #26
    68a4:	9301      	str	r3, [sp, #4]
    68a6:	9500      	str	r5, [sp, #0]
    68a8:	3318      	adds	r3, #24
    68aa:	221b      	movs	r2, #27
    68ac:	0021      	movs	r1, r4
    68ae:	480f      	ldr	r0, [pc, #60]	; (68ec <_GLOBAL__sub_I_g_APinDescription+0x9c>)
    68b0:	f000 f9fe 	bl	6cb0 <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPadhh>
}
    68b4:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
    68b6:	46c0      	nop			; (mov r8, r8)
    68b8:	42000800 	.word	0x42000800
    68bc:	2000105c 	.word	0x2000105c
    68c0:	42000c00 	.word	0x42000c00
    68c4:	20001060 	.word	0x20001060
    68c8:	42001000 	.word	0x42001000
    68cc:	20001064 	.word	0x20001064
    68d0:	42001400 	.word	0x42001400
    68d4:	20001068 	.word	0x20001068
    68d8:	2000106c 	.word	0x2000106c
    68dc:	42001800 	.word	0x42001800
    68e0:	20001070 	.word	0x20001070
    68e4:	42001c00 	.word	0x42001c00
    68e8:	20000be4 	.word	0x20000be4
    68ec:	20000e20 	.word	0x20000e20

000068f0 <_ZN6SERCOMC1EP6Sercom>:
#define WIRE_RISE_TIME_NANOSECONDS 125
#endif

SERCOM::SERCOM(Sercom* s)
{
  sercom = s;
    68f0:	6001      	str	r1, [r0, #0]
}
    68f2:	4770      	bx	lr

000068f4 <_ZN6SERCOM9initFrameE18SercomUartCharSize15SercomDataOrder16SercomParityMode19SercomNumberStopBit>:
    sercom->USART.BAUD.FRAC.FP   = (baudTimes8 % 8);
    sercom->USART.BAUD.FRAC.BAUD = (baudTimes8 / 8);
  }
}
void SERCOM::initFrame(SercomUartCharSize charSize, SercomDataOrder dataOrder, SercomParityMode parityMode, SercomNumberStopBit nbStopBits)
{
    68f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    68f6:	ac05      	add	r4, sp, #20
    68f8:	7825      	ldrb	r5, [r4, #0]
  //Setting the CTRLA register
  sercom->USART.CTRLA.reg |=	SERCOM_USART_CTRLA_FORM( (parityMode == SERCOM_NO_PARITY ? 0 : 1) ) |
    68fa:	6804      	ldr	r4, [r0, #0]
    68fc:	1e98      	subs	r0, r3, #2
    68fe:	1e47      	subs	r7, r0, #1
    6900:	41b8      	sbcs	r0, r7
                dataOrder << SERCOM_USART_CTRLA_DORD_Pos;
    6902:	6826      	ldr	r6, [r4, #0]
    6904:	0792      	lsls	r2, r2, #30
  sercom->USART.CTRLA.reg |=	SERCOM_USART_CTRLA_FORM( (parityMode == SERCOM_NO_PARITY ? 0 : 1) ) |
    6906:	0600      	lsls	r0, r0, #24
                dataOrder << SERCOM_USART_CTRLA_DORD_Pos;
    6908:	4332      	orrs	r2, r6
    690a:	4302      	orrs	r2, r0

  //Setting the CTRLB register
  sercom->USART.CTRLB.reg |=	SERCOM_USART_CTRLB_CHSIZE(charSize) |
    690c:	2007      	movs	r0, #7
  sercom->USART.CTRLA.reg |=	SERCOM_USART_CTRLA_FORM( (parityMode == SERCOM_NO_PARITY ? 0 : 1) ) |
    690e:	6022      	str	r2, [r4, #0]
  sercom->USART.CTRLB.reg |=	SERCOM_USART_CTRLB_CHSIZE(charSize) |
    6910:	4001      	ands	r1, r0
                nbStopBits << SERCOM_USART_CTRLB_SBMODE_Pos |
    6912:	01ad      	lsls	r5, r5, #6
                (parityMode == SERCOM_NO_PARITY ? 0 : parityMode) << SERCOM_USART_CTRLB_PMODE_Pos; //If no parity use default value
    6914:	6862      	ldr	r2, [r4, #4]
    6916:	4329      	orrs	r1, r5
    6918:	2000      	movs	r0, #0
    691a:	2b02      	cmp	r3, #2
    691c:	d000      	beq.n	6920 <_ZN6SERCOM9initFrameE18SercomUartCharSize15SercomDataOrder16SercomParityMode19SercomNumberStopBit+0x2c>
    691e:	0358      	lsls	r0, r3, #13
    6920:	4311      	orrs	r1, r2
    6922:	4301      	orrs	r1, r0
  sercom->USART.CTRLB.reg |=	SERCOM_USART_CTRLB_CHSIZE(charSize) |
    6924:	6061      	str	r1, [r4, #4]
}
    6926:	bdf0      	pop	{r4, r5, r6, r7, pc}

00006928 <_ZN6SERCOM8initPadsE15SercomUartTXPad11SercomRXPad>:

void SERCOM::initPads(SercomUartTXPad txPad, SercomRXPad rxPad)
{
    6928:	b510      	push	{r4, lr}
  //Setting the CTRLA register
  sercom->USART.CTRLA.reg |=	SERCOM_USART_CTRLA_TXPO(txPad) |
                SERCOM_USART_CTRLA_RXPO(rxPad);
    692a:	24c0      	movs	r4, #192	; 0xc0
  sercom->USART.CTRLA.reg |=	SERCOM_USART_CTRLA_TXPO(txPad) |
    692c:	6803      	ldr	r3, [r0, #0]
                SERCOM_USART_CTRLA_RXPO(rxPad);
    692e:	03a4      	lsls	r4, r4, #14
    6930:	6818      	ldr	r0, [r3, #0]
    6932:	0512      	lsls	r2, r2, #20
    6934:	4022      	ands	r2, r4
    6936:	4302      	orrs	r2, r0
  sercom->USART.CTRLA.reg |=	SERCOM_USART_CTRLA_TXPO(txPad) |
    6938:	20c0      	movs	r0, #192	; 0xc0
    693a:	0409      	lsls	r1, r1, #16
    693c:	0280      	lsls	r0, r0, #10
    693e:	4001      	ands	r1, r0
                SERCOM_USART_CTRLA_RXPO(rxPad);
    6940:	4311      	orrs	r1, r2
  sercom->USART.CTRLA.reg |=	SERCOM_USART_CTRLA_TXPO(txPad) |
    6942:	6019      	str	r1, [r3, #0]

  // Enable Transceiver and Receiver
  sercom->USART.CTRLB.reg |= SERCOM_USART_CTRLB_TXEN | SERCOM_USART_CTRLB_RXEN ;
    6944:	685a      	ldr	r2, [r3, #4]
    6946:	4310      	orrs	r0, r2
    6948:	6058      	str	r0, [r3, #4]
}
    694a:	bd10      	pop	{r4, pc}

0000694c <_ZN6SERCOM9resetUARTEv>:

void SERCOM::resetUART()
{
  // Start the Software Reset
  sercom->USART.CTRLA.bit.SWRST = 1 ;
    694c:	2201      	movs	r2, #1
    694e:	6803      	ldr	r3, [r0, #0]
    6950:	6819      	ldr	r1, [r3, #0]
    6952:	430a      	orrs	r2, r1
    6954:	601a      	str	r2, [r3, #0]

  while ( sercom->USART.CTRLA.bit.SWRST || sercom->USART.SYNCBUSY.bit.SWRST )
    6956:	681a      	ldr	r2, [r3, #0]
    6958:	07d2      	lsls	r2, r2, #31
    695a:	d4fc      	bmi.n	6956 <_ZN6SERCOM9resetUARTEv+0xa>
    695c:	69da      	ldr	r2, [r3, #28]
    695e:	07d2      	lsls	r2, r2, #31
    6960:	d4f9      	bmi.n	6956 <_ZN6SERCOM9resetUARTEv+0xa>
  {
    // Wait for both bits Software Reset from CTRLA and SYNCBUSY coming back to 0
  }
}
    6962:	4770      	bx	lr

00006964 <_ZN6SERCOM10enableUARTEv>:

void SERCOM::enableUART()
{
  //Setting  the enable bit to 1
  sercom->USART.CTRLA.bit.ENABLE = 0x1u;
    6964:	2202      	movs	r2, #2
    6966:	6803      	ldr	r3, [r0, #0]
    6968:	6819      	ldr	r1, [r3, #0]
    696a:	430a      	orrs	r2, r1
    696c:	601a      	str	r2, [r3, #0]

  //Wait for then enable bit from SYNCBUSY is equal to 0;
  while(sercom->USART.SYNCBUSY.bit.ENABLE);
    696e:	69da      	ldr	r2, [r3, #28]
    6970:	0792      	lsls	r2, r2, #30
    6972:	d4fc      	bmi.n	696e <_ZN6SERCOM10enableUARTEv+0xa>
}
    6974:	4770      	bx	lr

00006976 <_ZN6SERCOM9flushUARTEv>:
}

bool SERCOM::isDataRegisterEmptyUART()
{
  //DRE : Data Register Empty
  return sercom->USART.INTFLAG.bit.DRE;
    6976:	6803      	ldr	r3, [r0, #0]
    6978:	7e1a      	ldrb	r2, [r3, #24]
  if(isDataRegisterEmptyUART())
    697a:	07d2      	lsls	r2, r2, #31
    697c:	d402      	bmi.n	6984 <_ZN6SERCOM9flushUARTEv+0xe>
  while(!sercom->USART.INTFLAG.bit.TXC);
    697e:	7e1a      	ldrb	r2, [r3, #24]
    6980:	0792      	lsls	r2, r2, #30
    6982:	d5fc      	bpl.n	697e <_ZN6SERCOM9flushUARTEv+0x8>
}
    6984:	4770      	bx	lr

00006986 <_ZN6SERCOM15clearStatusUARTEv>:
  sercom->USART.STATUS.reg = SERCOM_USART_STATUS_RESETVALUE;
    6986:	2200      	movs	r2, #0
    6988:	6803      	ldr	r3, [r0, #0]
    698a:	835a      	strh	r2, [r3, #26]
}
    698c:	4770      	bx	lr

0000698e <_ZN6SERCOM17availableDataUARTEv>:
  return sercom->USART.INTFLAG.bit.RXC;
    698e:	6803      	ldr	r3, [r0, #0]
    6990:	7e18      	ldrb	r0, [r3, #24]
    6992:	0740      	lsls	r0, r0, #29
    6994:	0fc0      	lsrs	r0, r0, #31
}
    6996:	4770      	bx	lr

00006998 <_ZN6SERCOM11isUARTErrorEv>:
  return sercom->USART.INTFLAG.bit.ERROR;
    6998:	6803      	ldr	r3, [r0, #0]
    699a:	7e18      	ldrb	r0, [r3, #24]
    699c:	09c0      	lsrs	r0, r0, #7
}
    699e:	4770      	bx	lr

000069a0 <_ZN6SERCOM20acknowledgeUARTErrorEv>:
  sercom->USART.INTFLAG.bit.ERROR = 1;
    69a0:	2380      	movs	r3, #128	; 0x80
    69a2:	6802      	ldr	r2, [r0, #0]
    69a4:	425b      	negs	r3, r3
    69a6:	7e11      	ldrb	r1, [r2, #24]
    69a8:	430b      	orrs	r3, r1
    69aa:	7613      	strb	r3, [r2, #24]
}
    69ac:	4770      	bx	lr

000069ae <_ZN6SERCOM16isFrameErrorUARTEv>:
  return sercom->USART.STATUS.bit.FERR;
    69ae:	6803      	ldr	r3, [r0, #0]
    69b0:	8b58      	ldrh	r0, [r3, #26]
    69b2:	0780      	lsls	r0, r0, #30
    69b4:	0fc0      	lsrs	r0, r0, #31
}
    69b6:	4770      	bx	lr

000069b8 <_ZN6SERCOM19clearFrameErrorUARTEv>:
  sercom->USART.STATUS.bit.FERR = 1;
    69b8:	2302      	movs	r3, #2
    69ba:	6802      	ldr	r2, [r0, #0]
    69bc:	8b51      	ldrh	r1, [r2, #26]
    69be:	430b      	orrs	r3, r1
    69c0:	8353      	strh	r3, [r2, #26]
}
    69c2:	4770      	bx	lr

000069c4 <_ZN6SERCOM23isDataRegisterEmptyUARTEv>:
  return sercom->USART.INTFLAG.bit.DRE;
    69c4:	6803      	ldr	r3, [r0, #0]
    69c6:	7e18      	ldrb	r0, [r3, #24]
    69c8:	07c0      	lsls	r0, r0, #31
    69ca:	0fc0      	lsrs	r0, r0, #31
}
    69cc:	4770      	bx	lr

000069ce <_ZN6SERCOM12readDataUARTEv>:

uint8_t SERCOM::readDataUART()
{
  return sercom->USART.DATA.bit.DATA;
    69ce:	6803      	ldr	r3, [r0, #0]
    69d0:	8d18      	ldrh	r0, [r3, #40]	; 0x28
    69d2:	b2c0      	uxtb	r0, r0
}
    69d4:	4770      	bx	lr

000069d6 <_ZN6SERCOM13writeDataUARTEh>:
  return sercom->USART.INTFLAG.bit.DRE;
    69d6:	6803      	ldr	r3, [r0, #0]
    69d8:	7e1a      	ldrb	r2, [r3, #24]

int SERCOM::writeDataUART(uint8_t data)
{
  // Wait for data register to be empty
  while(!isDataRegisterEmptyUART());
    69da:	07d2      	lsls	r2, r2, #31
    69dc:	d5fc      	bpl.n	69d8 <_ZN6SERCOM13writeDataUARTEh+0x2>

  //Put data into DATA register
  sercom->USART.DATA.reg = (uint16_t)data;
    69de:	b289      	uxth	r1, r1
  return 1;
}
    69e0:	2001      	movs	r0, #1
  sercom->USART.DATA.reg = (uint16_t)data;
    69e2:	8519      	strh	r1, [r3, #40]	; 0x28
}
    69e4:	4770      	bx	lr

000069e6 <_ZN6SERCOM36enableDataRegisterEmptyInterruptUARTEv>:

void SERCOM::enableDataRegisterEmptyInterruptUART()
{
  sercom->USART.INTENSET.reg = SERCOM_USART_INTENSET_DRE;
    69e6:	2201      	movs	r2, #1
    69e8:	6803      	ldr	r3, [r0, #0]
    69ea:	759a      	strb	r2, [r3, #22]
}
    69ec:	4770      	bx	lr

000069ee <_ZN6SERCOM37disableDataRegisterEmptyInterruptUARTEv>:

void SERCOM::disableDataRegisterEmptyInterruptUART()
{
  sercom->USART.INTENCLR.reg = SERCOM_USART_INTENCLR_DRE;
    69ee:	2201      	movs	r2, #1
    69f0:	6803      	ldr	r3, [r0, #0]
    69f2:	751a      	strb	r2, [r3, #20]
}
    69f4:	4770      	bx	lr
	...

000069f8 <_ZN6SERCOM13initClockNVICEv>:
void SERCOM::initClockNVIC( void )
{
  uint8_t clockId = 0;
  IRQn_Type IdNvic=PendSV_IRQn ; // Dummy init to intercept potential error later

  if(sercom == SERCOM0)
    69f8:	6803      	ldr	r3, [r0, #0]
    69fa:	4a21      	ldr	r2, [pc, #132]	; (6a80 <_ZN6SERCOM13initClockNVICEv+0x88>)
{
    69fc:	b530      	push	{r4, r5, lr}
  if(sercom == SERCOM0)
    69fe:	4293      	cmp	r3, r2
    6a00:	d011      	beq.n	6a26 <_ZN6SERCOM13initClockNVICEv+0x2e>
  {
    clockId = GCM_SERCOM0_CORE;
    IdNvic = SERCOM0_IRQn;
  }
  else if(sercom == SERCOM1)
    6a02:	4a20      	ldr	r2, [pc, #128]	; (6a84 <_ZN6SERCOM13initClockNVICEv+0x8c>)
    6a04:	4293      	cmp	r3, r2
    6a06:	d02f      	beq.n	6a68 <_ZN6SERCOM13initClockNVICEv+0x70>
  {
    clockId = GCM_SERCOM1_CORE;
    IdNvic = SERCOM1_IRQn;
  }
  else if(sercom == SERCOM2)
    6a08:	4a1f      	ldr	r2, [pc, #124]	; (6a88 <_ZN6SERCOM13initClockNVICEv+0x90>)
    6a0a:	4293      	cmp	r3, r2
    6a0c:	d02f      	beq.n	6a6e <_ZN6SERCOM13initClockNVICEv+0x76>
  {
    clockId = GCM_SERCOM2_CORE;
    IdNvic = SERCOM2_IRQn;
  }
  else if(sercom == SERCOM3)
    6a0e:	4a1f      	ldr	r2, [pc, #124]	; (6a8c <_ZN6SERCOM13initClockNVICEv+0x94>)
    6a10:	4293      	cmp	r3, r2
    6a12:	d02f      	beq.n	6a74 <_ZN6SERCOM13initClockNVICEv+0x7c>
  {
    clockId = GCM_SERCOM3_CORE;
    IdNvic = SERCOM3_IRQn;
  }
  #if defined(SERCOM4)
  else if(sercom == SERCOM4)
    6a14:	4a1e      	ldr	r2, [pc, #120]	; (6a90 <_ZN6SERCOM13initClockNVICEv+0x98>)
    6a16:	4293      	cmp	r3, r2
    6a18:	d02f      	beq.n	6a7a <_ZN6SERCOM13initClockNVICEv+0x82>
    clockId = GCM_SERCOM4_CORE;
    IdNvic = SERCOM4_IRQn;
  }
  #endif // SERCOM4
  #if defined(SERCOM5)
  else if(sercom == SERCOM5)
    6a1a:	4a1e      	ldr	r2, [pc, #120]	; (6a94 <_ZN6SERCOM13initClockNVICEv+0x9c>)
    6a1c:	4293      	cmp	r3, r2
    6a1e:	d122      	bne.n	6a66 <_ZN6SERCOM13initClockNVICEv+0x6e>
  {
    clockId = GCM_SERCOM5_CORE;
    IdNvic = SERCOM5_IRQn;
    6a20:	230e      	movs	r3, #14
    clockId = GCM_SERCOM5_CORE;
    6a22:	2219      	movs	r2, #25
    6a24:	e001      	b.n	6a2a <_ZN6SERCOM13initClockNVICEv+0x32>
    IdNvic = SERCOM0_IRQn;
    6a26:	2309      	movs	r3, #9
    clockId = GCM_SERCOM0_CORE;
    6a28:	2214      	movs	r2, #20
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
    6a2a:	2101      	movs	r1, #1
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    6a2c:	2503      	movs	r5, #3
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
    6a2e:	4099      	lsls	r1, r3
    6a30:	4819      	ldr	r0, [pc, #100]	; (6a98 <_ZN6SERCOM13initClockNVICEv+0xa0>)
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    6a32:	24c0      	movs	r4, #192	; 0xc0
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
    6a34:	6001      	str	r1, [r0, #0]
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    6a36:	0899      	lsrs	r1, r3, #2
    6a38:	402b      	ands	r3, r5
    6a3a:	40ab      	lsls	r3, r5
    6a3c:	35fc      	adds	r5, #252	; 0xfc
    6a3e:	409d      	lsls	r5, r3
    6a40:	0089      	lsls	r1, r1, #2
    6a42:	1809      	adds	r1, r1, r0
    6a44:	00a4      	lsls	r4, r4, #2
    6a46:	5908      	ldr	r0, [r1, r4]
    6a48:	43a8      	bics	r0, r5
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
    6a4a:	25c0      	movs	r5, #192	; 0xc0
    6a4c:	409d      	lsls	r5, r3
    6a4e:	002b      	movs	r3, r5
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    6a50:	4303      	orrs	r3, r0
    6a52:	510b      	str	r3, [r1, r4]
  NVIC_EnableIRQ(IdNvic);
  NVIC_SetPriority (IdNvic, SERCOM_NVIC_PRIORITY);  /* set Priority */

  //Setting clock
  GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID( clockId ) | // Generic Clock 0 (SERCOMx)
                      GCLK_CLKCTRL_GEN_GCLK0 | // Generic Clock Generator 0 is source
    6a54:	2380      	movs	r3, #128	; 0x80
    6a56:	01db      	lsls	r3, r3, #7
    6a58:	431a      	orrs	r2, r3
  GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID( clockId ) | // Generic Clock 0 (SERCOMx)
    6a5a:	4b10      	ldr	r3, [pc, #64]	; (6a9c <_ZN6SERCOM13initClockNVICEv+0xa4>)
    6a5c:	805a      	strh	r2, [r3, #2]
                      GCLK_CLKCTRL_CLKEN ;

  while ( GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY )
    6a5e:	785a      	ldrb	r2, [r3, #1]
    6a60:	b252      	sxtb	r2, r2
    6a62:	2a00      	cmp	r2, #0
    6a64:	dbfb      	blt.n	6a5e <_ZN6SERCOM13initClockNVICEv+0x66>
  {
    /* Wait for synchronization */
  }
}
    6a66:	bd30      	pop	{r4, r5, pc}
    IdNvic = SERCOM1_IRQn;
    6a68:	230a      	movs	r3, #10
    clockId = GCM_SERCOM1_CORE;
    6a6a:	2215      	movs	r2, #21
    6a6c:	e7dd      	b.n	6a2a <_ZN6SERCOM13initClockNVICEv+0x32>
    IdNvic = SERCOM2_IRQn;
    6a6e:	230b      	movs	r3, #11
    clockId = GCM_SERCOM2_CORE;
    6a70:	2216      	movs	r2, #22
    6a72:	e7da      	b.n	6a2a <_ZN6SERCOM13initClockNVICEv+0x32>
    IdNvic = SERCOM3_IRQn;
    6a74:	230c      	movs	r3, #12
    clockId = GCM_SERCOM3_CORE;
    6a76:	2217      	movs	r2, #23
    6a78:	e7d7      	b.n	6a2a <_ZN6SERCOM13initClockNVICEv+0x32>
    IdNvic = SERCOM4_IRQn;
    6a7a:	230d      	movs	r3, #13
    clockId = GCM_SERCOM4_CORE;
    6a7c:	2218      	movs	r2, #24
    6a7e:	e7d4      	b.n	6a2a <_ZN6SERCOM13initClockNVICEv+0x32>
    6a80:	42000800 	.word	0x42000800
    6a84:	42000c00 	.word	0x42000c00
    6a88:	42001000 	.word	0x42001000
    6a8c:	42001400 	.word	0x42001400
    6a90:	42001800 	.word	0x42001800
    6a94:	42001c00 	.word	0x42001c00
    6a98:	e000e100 	.word	0xe000e100
    6a9c:	40000c00 	.word	0x40000c00

00006aa0 <_ZN6SERCOM8initUARTE14SercomUartMode20SercomUartSampleRatem>:
{
    6aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6aa2:	0004      	movs	r4, r0
    6aa4:	0016      	movs	r6, r2
    6aa6:	000f      	movs	r7, r1
    6aa8:	001d      	movs	r5, r3
  initClockNVIC();
    6aaa:	f7ff ffa5 	bl	69f8 <_ZN6SERCOM13initClockNVICEv>
  resetUART();
    6aae:	0020      	movs	r0, r4
    6ab0:	f7ff ff4c 	bl	694c <_ZN6SERCOM9resetUARTEv>
  sercom->USART.CTRLA.reg =	SERCOM_USART_CTRLA_MODE(mode) |
    6ab4:	221c      	movs	r2, #28
    6ab6:	00bb      	lsls	r3, r7, #2
    6ab8:	4013      	ands	r3, r2
                SERCOM_USART_CTRLA_SAMPR(sampleRate);
    6aba:	0772      	lsls	r2, r6, #29
  sercom->USART.CTRLA.reg =	SERCOM_USART_CTRLA_MODE(mode) |
    6abc:	6824      	ldr	r4, [r4, #0]
                SERCOM_USART_CTRLA_SAMPR(sampleRate);
    6abe:	0c12      	lsrs	r2, r2, #16
  sercom->USART.CTRLA.reg =	SERCOM_USART_CTRLA_MODE(mode) |
    6ac0:	4313      	orrs	r3, r2
    6ac2:	6023      	str	r3, [r4, #0]
  sercom->USART.INTENSET.reg =	SERCOM_USART_INTENSET_RXC |  //Received complete
    6ac4:	2384      	movs	r3, #132	; 0x84
    6ac6:	75a3      	strb	r3, [r4, #22]
  if ( mode == UART_INT_CLOCK )
    6ac8:	2f01      	cmp	r7, #1
    6aca:	d118      	bne.n	6afe <_ZN6SERCOM8initUARTE14SercomUartMode20SercomUartSampleRatem+0x5e>
      sampleRateValue = 16;
    6acc:	2110      	movs	r1, #16
    if (sampleRate == SAMPLE_RATE_x16) {
    6ace:	2e01      	cmp	r6, #1
    6ad0:	d000      	beq.n	6ad4 <_ZN6SERCOM8initUARTE14SercomUartMode20SercomUartSampleRatem+0x34>
      sampleRateValue = 8;
    6ad2:	3908      	subs	r1, #8
    uint32_t baudTimes8 = (SystemCoreClock * 8) / (sampleRateValue * baudrate);
    6ad4:	4b0a      	ldr	r3, [pc, #40]	; (6b00 <_ZN6SERCOM8initUARTE14SercomUartMode20SercomUartSampleRatem+0x60>)
    6ad6:	4369      	muls	r1, r5
    6ad8:	6818      	ldr	r0, [r3, #0]
    6ada:	00c0      	lsls	r0, r0, #3
    6adc:	f000 fae6 	bl	70ac <__udivsi3>
    sercom->USART.BAUD.FRAC.FP   = (baudTimes8 % 8);
    6ae0:	2207      	movs	r2, #7
    6ae2:	89a3      	ldrh	r3, [r4, #12]
    6ae4:	4002      	ands	r2, r0
    6ae6:	04db      	lsls	r3, r3, #19
    6ae8:	0352      	lsls	r2, r2, #13
    6aea:	0cdb      	lsrs	r3, r3, #19
    6aec:	4313      	orrs	r3, r2
    6aee:	81a3      	strh	r3, [r4, #12]
    sercom->USART.BAUD.FRAC.BAUD = (baudTimes8 / 8);
    6af0:	0403      	lsls	r3, r0, #16
    6af2:	89a0      	ldrh	r0, [r4, #12]
    6af4:	0cdb      	lsrs	r3, r3, #19
    6af6:	0b40      	lsrs	r0, r0, #13
    6af8:	0340      	lsls	r0, r0, #13
    6afa:	4318      	orrs	r0, r3
    6afc:	81a0      	strh	r0, [r4, #12]
}
    6afe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6b00:	20000084 	.word	0x20000084

00006b04 <_ZN4UartcvbEv>:
    size_t write(const uint8_t data);
    using Print::write; // pull in write(str) and write(buf, size) from Print

    void IrqHandler();

    operator bool() { return true; }
    6b04:	2001      	movs	r0, #1
    6b06:	4770      	bx	lr

00006b08 <_ZN4Uart5beginEm>:
  uc_pinRTS = _pinRTS;
  uc_pinCTS = _pinCTS;
}

void Uart::begin(unsigned long baudrate)
{
    6b08:	b510      	push	{r4, lr}
  begin(baudrate, SERIAL_8N1);
    6b0a:	6803      	ldr	r3, [r0, #0]
    6b0c:	4a01      	ldr	r2, [pc, #4]	; (6b14 <_ZN4Uart5beginEm+0xc>)
    6b0e:	6a1b      	ldr	r3, [r3, #32]
    6b10:	4798      	blx	r3
}
    6b12:	bd10      	pop	{r4, pc}
    6b14:	00000413 	.word	0x00000413

00006b18 <_ZN4Uart4peekEv>:
}

template <int N>
int RingBufferN<N>::peek()
{
  if(_iTail == _iHead)
    6b18:	0003      	movs	r3, r0
    6b1a:	33fc      	adds	r3, #252	; 0xfc
    6b1c:	69d9      	ldr	r1, [r3, #28]
    6b1e:	699a      	ldr	r2, [r3, #24]
    6b20:	4291      	cmp	r1, r2
    6b22:	d003      	beq.n	6b2c <_ZN4Uart4peekEv+0x14>
    return -1;

  return _aucBuffer[_iTail];
    6b24:	69db      	ldr	r3, [r3, #28]
    6b26:	18c0      	adds	r0, r0, r3
    6b28:	7d00      	ldrb	r0, [r0, #20]
}

int Uart::peek()
{
  return rxBuffer.peek();
}
    6b2a:	4770      	bx	lr
    return -1;
    6b2c:	2001      	movs	r0, #1
    6b2e:	4240      	negs	r0, r0
  return rxBuffer.peek();
    6b30:	e7fb      	b.n	6b2a <_ZN4Uart4peekEv+0x12>

00006b32 <_ZN4Uart3endEv>:
{
    6b32:	b510      	push	{r4, lr}
    6b34:	0004      	movs	r4, r0
  sercom->resetUART();
    6b36:	6900      	ldr	r0, [r0, #16]
    6b38:	f7ff ff08 	bl	694c <_ZN6SERCOM9resetUARTEv>
  _iHead = 0;
    6b3c:	0022      	movs	r2, r4
    6b3e:	2300      	movs	r3, #0
    6b40:	32fc      	adds	r2, #252	; 0xfc
    6b42:	6193      	str	r3, [r2, #24]
  _iTail = 0;
    6b44:	61d3      	str	r3, [r2, #28]
  _iHead = 0;
    6b46:	2286      	movs	r2, #134	; 0x86
    6b48:	0092      	lsls	r2, r2, #2
    6b4a:	18a4      	adds	r4, r4, r2
    6b4c:	6063      	str	r3, [r4, #4]
  _iTail = 0;
    6b4e:	60a3      	str	r3, [r4, #8]
}
    6b50:	bd10      	pop	{r4, pc}

00006b52 <_ZN4Uart16extractNbStopBitEt>:
  return 1;
}

SercomNumberStopBit Uart::extractNbStopBit(uint16_t config)
{
  switch(config & HARDSER_STOP_BIT_MASK)
    6b52:	20f0      	movs	r0, #240	; 0xf0
    6b54:	4001      	ands	r1, r0
  {
    case HARDSER_STOP_BIT_1:
    default:
      return SERCOM_STOP_BIT_1;
    6b56:	3930      	subs	r1, #48	; 0x30
    6b58:	4248      	negs	r0, r1
    6b5a:	4148      	adcs	r0, r1

    case HARDSER_STOP_BIT_2:
      return SERCOM_STOP_BITS_2;
  }
}
    6b5c:	4770      	bx	lr

00006b5e <_ZN4Uart15extractCharSizeEt>:

SercomUartCharSize Uart::extractCharSize(uint16_t config)
{
  switch(config & HARDSER_DATA_MASK)
    6b5e:	23f0      	movs	r3, #240	; 0xf0
    6b60:	011b      	lsls	r3, r3, #4
    6b62:	4019      	ands	r1, r3
    6b64:	2380      	movs	r3, #128	; 0x80
  {
    case HARDSER_DATA_5:
      return UART_CHAR_SIZE_5_BITS;

    case HARDSER_DATA_6:
      return UART_CHAR_SIZE_6_BITS;
    6b66:	2006      	movs	r0, #6
  switch(config & HARDSER_DATA_MASK)
    6b68:	009b      	lsls	r3, r3, #2
    6b6a:	4299      	cmp	r1, r3
    6b6c:	d00a      	beq.n	6b84 <_ZN4Uart15extractCharSizeEt+0x26>
    6b6e:	3301      	adds	r3, #1
    6b70:	33ff      	adds	r3, #255	; 0xff

    case HARDSER_DATA_7:
      return UART_CHAR_SIZE_7_BITS;
    6b72:	3001      	adds	r0, #1
  switch(config & HARDSER_DATA_MASK)
    6b74:	4299      	cmp	r1, r3
    6b76:	d005      	beq.n	6b84 <_ZN4Uart15extractCharSizeEt+0x26>
    6b78:	2380      	movs	r3, #128	; 0x80
      return UART_CHAR_SIZE_5_BITS;
    6b7a:	3802      	subs	r0, #2
  switch(config & HARDSER_DATA_MASK)
    6b7c:	005b      	lsls	r3, r3, #1
    6b7e:	4299      	cmp	r1, r3
    6b80:	d000      	beq.n	6b84 <_ZN4Uart15extractCharSizeEt+0x26>

    case HARDSER_DATA_8:
    default:
      return UART_CHAR_SIZE_8_BITS;
    6b82:	2000      	movs	r0, #0

  }
}
    6b84:	4770      	bx	lr

00006b86 <_ZN4Uart13extractParityEt>:

SercomParityMode Uart::extractParity(uint16_t config)
{
  switch(config & HARDSER_PARITY_MASK)
    6b86:	200f      	movs	r0, #15
    6b88:	4001      	ands	r1, r0
    case HARDSER_PARITY_NONE:
    default:
      return SERCOM_NO_PARITY;

    case HARDSER_PARITY_EVEN:
      return SERCOM_EVEN_PARITY;
    6b8a:	2000      	movs	r0, #0
  switch(config & HARDSER_PARITY_MASK)
    6b8c:	2901      	cmp	r1, #1
    6b8e:	d003      	beq.n	6b98 <_ZN4Uart13extractParityEt+0x12>
      return SERCOM_NO_PARITY;
    6b90:	3902      	subs	r1, #2
    6b92:	1e48      	subs	r0, r1, #1
    6b94:	4181      	sbcs	r1, r0
    6b96:	1c48      	adds	r0, r1, #1

    case HARDSER_PARITY_ODD:
      return SERCOM_ODD_PARITY;
  }
}
    6b98:	4770      	bx	lr
	...

00006b9c <_ZN4Uart5beginEmt>:
  pinPeripheral(uc_pinRX, g_APinDescription[uc_pinRX].ulPinType);
    6b9c:	2389      	movs	r3, #137	; 0x89
{
    6b9e:	b5f0      	push	{r4, r5, r6, r7, lr}
  pinPeripheral(uc_pinRX, g_APinDescription[uc_pinRX].ulPinType);
    6ba0:	2618      	movs	r6, #24
{
    6ba2:	b085      	sub	sp, #20
    6ba4:	9102      	str	r1, [sp, #8]
  pinPeripheral(uc_pinRX, g_APinDescription[uc_pinRX].ulPinType);
    6ba6:	009b      	lsls	r3, r3, #2
{
    6ba8:	0004      	movs	r4, r0
  pinPeripheral(uc_pinRX, g_APinDescription[uc_pinRX].ulPinType);
    6baa:	5cc0      	ldrb	r0, [r0, r3]
    6bac:	0033      	movs	r3, r6
    6bae:	2108      	movs	r1, #8
    6bb0:	4343      	muls	r3, r0
    6bb2:	4d32      	ldr	r5, [pc, #200]	; (6c7c <_ZN4Uart5beginEmt+0xe0>)
{
    6bb4:	0017      	movs	r7, r2
  pinPeripheral(uc_pinRX, g_APinDescription[uc_pinRX].ulPinType);
    6bb6:	18eb      	adds	r3, r5, r3
    6bb8:	5659      	ldrsb	r1, [r3, r1]
    6bba:	f7ff fd63 	bl	6684 <pinPeripheral>
  pinPeripheral(uc_pinTX, g_APinDescription[uc_pinTX].ulPinType);
    6bbe:	4b30      	ldr	r3, [pc, #192]	; (6c80 <_ZN4Uart5beginEmt+0xe4>)
    6bc0:	2108      	movs	r1, #8
    6bc2:	5ce0      	ldrb	r0, [r4, r3]
    6bc4:	0033      	movs	r3, r6
    6bc6:	4343      	muls	r3, r0
    6bc8:	18eb      	adds	r3, r5, r3
    6bca:	5659      	ldrsb	r1, [r3, r1]
    6bcc:	f7ff fd5a 	bl	6684 <pinPeripheral>
  if (uc_padTX == UART_TX_RTS_CTS_PAD_0_2_3) { 
    6bd0:	4b2c      	ldr	r3, [pc, #176]	; (6c84 <_ZN4Uart5beginEmt+0xe8>)
    6bd2:	5ce2      	ldrb	r2, [r4, r3]
    6bd4:	9303      	str	r3, [sp, #12]
    6bd6:	2a02      	cmp	r2, #2
    6bd8:	d109      	bne.n	6bee <_ZN4Uart5beginEmt+0x52>
    if (uc_pinCTS != NO_CTS_PIN) {
    6bda:	3311      	adds	r3, #17
    6bdc:	5ce0      	ldrb	r0, [r4, r3]
    6bde:	28ff      	cmp	r0, #255	; 0xff
    6be0:	d005      	beq.n	6bee <_ZN4Uart5beginEmt+0x52>
      pinPeripheral(uc_pinCTS, g_APinDescription[uc_pinCTS].ulPinType);
    6be2:	2108      	movs	r1, #8
    6be4:	4346      	muls	r6, r0
    6be6:	19ae      	adds	r6, r5, r6
    6be8:	5671      	ldrsb	r1, [r6, r1]
    6bea:	f7ff fd4b 	bl	6684 <pinPeripheral>
  if (uc_pinRTS != NO_RTS_PIN) {
    6bee:	268a      	movs	r6, #138	; 0x8a
    6bf0:	00b6      	lsls	r6, r6, #2
    6bf2:	5da0      	ldrb	r0, [r4, r6]
    6bf4:	28ff      	cmp	r0, #255	; 0xff
    6bf6:	d019      	beq.n	6c2c <_ZN4Uart5beginEmt+0x90>
    pinMode(uc_pinRTS, OUTPUT);
    6bf8:	2101      	movs	r1, #1
    6bfa:	f7ff fccb 	bl	6594 <pinMode>
    EPortType rtsPort = g_APinDescription[uc_pinRTS].ulPort;
    6bfe:	2218      	movs	r2, #24
    6c00:	5da3      	ldrb	r3, [r4, r6]
    pul_outsetRTS = &PORT->Group[rtsPort].OUTSET.reg;
    6c02:	4921      	ldr	r1, [pc, #132]	; (6c88 <_ZN4Uart5beginEmt+0xec>)
    EPortType rtsPort = g_APinDescription[uc_pinRTS].ulPort;
    6c04:	435a      	muls	r2, r3
    pul_outsetRTS = &PORT->Group[rtsPort].OUTSET.reg;
    6c06:	56ab      	ldrsb	r3, [r5, r2]
    ul_pinMaskRTS = (1ul << g_APinDescription[uc_pinRTS].ulPin);
    6c08:	18ad      	adds	r5, r5, r2
    pul_outsetRTS = &PORT->Group[rtsPort].OUTSET.reg;
    6c0a:	01db      	lsls	r3, r3, #7
    6c0c:	1858      	adds	r0, r3, r1
    6c0e:	218b      	movs	r1, #139	; 0x8b
    6c10:	0089      	lsls	r1, r1, #2
    6c12:	5060      	str	r0, [r4, r1]
    pul_outclrRTS = &PORT->Group[rtsPort].OUTCLR.reg;
    6c14:	491d      	ldr	r1, [pc, #116]	; (6c8c <_ZN4Uart5beginEmt+0xf0>)
    ul_pinMaskRTS = (1ul << g_APinDescription[uc_pinRTS].ulPin);
    6c16:	2201      	movs	r2, #1
    pul_outclrRTS = &PORT->Group[rtsPort].OUTCLR.reg;
    6c18:	185b      	adds	r3, r3, r1
    6c1a:	218c      	movs	r1, #140	; 0x8c
    6c1c:	0089      	lsls	r1, r1, #2
    6c1e:	5063      	str	r3, [r4, r1]
    ul_pinMaskRTS = (1ul << g_APinDescription[uc_pinRTS].ulPin);
    6c20:	6869      	ldr	r1, [r5, #4]
    6c22:	408a      	lsls	r2, r1
    6c24:	218d      	movs	r1, #141	; 0x8d
    6c26:	0089      	lsls	r1, r1, #2
    6c28:	5062      	str	r2, [r4, r1]
    *pul_outclrRTS = ul_pinMaskRTS;
    6c2a:	601a      	str	r2, [r3, #0]
  sercom->initUART(UART_INT_CLOCK, SAMPLE_RATE_x16, baudrate);
    6c2c:	2201      	movs	r2, #1
    6c2e:	9b02      	ldr	r3, [sp, #8]
    6c30:	0011      	movs	r1, r2
    6c32:	6920      	ldr	r0, [r4, #16]
    6c34:	f7ff ff34 	bl	6aa0 <_ZN6SERCOM8initUARTE14SercomUartMode20SercomUartSampleRatem>
  sercom->initFrame(extractCharSize(config), LSB_FIRST, extractParity(config), extractNbStopBit(config));
    6c38:	0039      	movs	r1, r7
    6c3a:	0020      	movs	r0, r4
    6c3c:	f7ff ff8f 	bl	6b5e <_ZN4Uart15extractCharSizeEt>
    6c40:	0039      	movs	r1, r7
    6c42:	0005      	movs	r5, r0
    6c44:	0020      	movs	r0, r4
    6c46:	f7ff ff9e 	bl	6b86 <_ZN4Uart13extractParityEt>
    6c4a:	0039      	movs	r1, r7
    6c4c:	0006      	movs	r6, r0
    6c4e:	0020      	movs	r0, r4
    6c50:	f7ff ff7f 	bl	6b52 <_ZN4Uart16extractNbStopBitEt>
    6c54:	0033      	movs	r3, r6
    6c56:	9000      	str	r0, [sp, #0]
    6c58:	0029      	movs	r1, r5
    6c5a:	6920      	ldr	r0, [r4, #16]
    6c5c:	2201      	movs	r2, #1
    6c5e:	f7ff fe49 	bl	68f4 <_ZN6SERCOM9initFrameE18SercomUartCharSize15SercomDataOrder16SercomParityMode19SercomNumberStopBit>
  sercom->initPads(uc_padTX, uc_padRX);
    6c62:	4b0b      	ldr	r3, [pc, #44]	; (6c90 <_ZN4Uart5beginEmt+0xf4>)
    6c64:	6920      	ldr	r0, [r4, #16]
    6c66:	5ce2      	ldrb	r2, [r4, r3]
    6c68:	9b03      	ldr	r3, [sp, #12]
    6c6a:	5ce1      	ldrb	r1, [r4, r3]
    6c6c:	f7ff fe5c 	bl	6928 <_ZN6SERCOM8initPadsE15SercomUartTXPad11SercomRXPad>
  sercom->enableUART();
    6c70:	6920      	ldr	r0, [r4, #16]
    6c72:	f7ff fe77 	bl	6964 <_ZN6SERCOM10enableUARTEv>
}
    6c76:	b005      	add	sp, #20
    6c78:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6c7a:	46c0      	nop			; (mov r8, r8)
    6c7c:	0000b708 	.word	0x0000b708
    6c80:	00000225 	.word	0x00000225
    6c84:	00000227 	.word	0x00000227
    6c88:	41004418 	.word	0x41004418
    6c8c:	41004414 	.word	0x41004414
    6c90:	00000226 	.word	0x00000226

00006c94 <_ZN11RingBufferNILi256EEC1Ev>:
    memset( _aucBuffer, 0, N ) ;
    6c94:	2280      	movs	r2, #128	; 0x80
RingBufferN<N>::RingBufferN( void )
    6c96:	b510      	push	{r4, lr}
    6c98:	0004      	movs	r4, r0
    memset( _aucBuffer, 0, N ) ;
    6c9a:	0052      	lsls	r2, r2, #1
    6c9c:	2100      	movs	r1, #0
    6c9e:	f002 f9c3 	bl	9028 <memset>
  _iHead = 0;
    6ca2:	0023      	movs	r3, r4
    6ca4:	2200      	movs	r2, #0
    6ca6:	33fc      	adds	r3, #252	; 0xfc
    6ca8:	605a      	str	r2, [r3, #4]
}
    6caa:	0020      	movs	r0, r4
  _iTail = 0;
    6cac:	609a      	str	r2, [r3, #8]
}
    6cae:	bd10      	pop	{r4, pc}

00006cb0 <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPadhh>:
Uart::Uart(SERCOM *_s, uint8_t _pinRX, uint8_t _pinTX, SercomRXPad _padRX, SercomUartTXPad _padTX, uint8_t _pinRTS, uint8_t _pinCTS)
    6cb0:	b5f0      	push	{r4, r5, r6, r7, lr}
    6cb2:	b085      	sub	sp, #20
    6cb4:	001d      	movs	r5, r3
    6cb6:	ab0a      	add	r3, sp, #40	; 0x28
    6cb8:	781b      	ldrb	r3, [r3, #0]
    6cba:	0004      	movs	r4, r0
    6cbc:	9300      	str	r3, [sp, #0]
    6cbe:	ab0b      	add	r3, sp, #44	; 0x2c
    6cc0:	781b      	ldrb	r3, [r3, #0]
    6cc2:	0016      	movs	r6, r2
    6cc4:	9301      	str	r3, [sp, #4]
    6cc6:	ab0c      	add	r3, sp, #48	; 0x30
    6cc8:	781b      	ldrb	r3, [r3, #0]
    6cca:	000f      	movs	r7, r1
    6ccc:	9302      	str	r3, [sp, #8]
    6cce:	ab0d      	add	r3, sp, #52	; 0x34
    6cd0:	781b      	ldrb	r3, [r3, #0]
    6cd2:	9303      	str	r3, [sp, #12]
    6cd4:	2300      	movs	r3, #0
    6cd6:	6043      	str	r3, [r0, #4]
    6cd8:	23fa      	movs	r3, #250	; 0xfa
    6cda:	009b      	lsls	r3, r3, #2
    6cdc:	6083      	str	r3, [r0, #8]
    6cde:	4b12      	ldr	r3, [pc, #72]	; (6d28 <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPadhh+0x78>)
    6ce0:	3308      	adds	r3, #8
    6ce2:	6003      	str	r3, [r0, #0]
    6ce4:	3014      	adds	r0, #20
    6ce6:	f7ff ffd5 	bl	6c94 <_ZN11RingBufferNILi256EEC1Ev>
    6cea:	0020      	movs	r0, r4
    6cec:	301d      	adds	r0, #29
    6cee:	30ff      	adds	r0, #255	; 0xff
    6cf0:	f7ff ffd0 	bl	6c94 <_ZN11RingBufferNILi256EEC1Ev>
  uc_pinRX = _pinRX;
    6cf4:	2389      	movs	r3, #137	; 0x89
  uc_padRX = _padRX ;
    6cf6:	466a      	mov	r2, sp
  uc_pinRX = _pinRX;
    6cf8:	009b      	lsls	r3, r3, #2
  sercom = _s;
    6cfa:	6127      	str	r7, [r4, #16]
  uc_pinRX = _pinRX;
    6cfc:	54e6      	strb	r6, [r4, r3]
  uc_pinTX = _pinTX;
    6cfe:	4b0b      	ldr	r3, [pc, #44]	; (6d2c <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPadhh+0x7c>)
  uc_padRX = _padRX ;
    6d00:	7812      	ldrb	r2, [r2, #0]
  uc_pinTX = _pinTX;
    6d02:	54e5      	strb	r5, [r4, r3]
  uc_padRX = _padRX ;
    6d04:	4b0a      	ldr	r3, [pc, #40]	; (6d30 <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPadhh+0x80>)
}
    6d06:	0020      	movs	r0, r4
  uc_padRX = _padRX ;
    6d08:	54e2      	strb	r2, [r4, r3]
  uc_padTX = _padTX;
    6d0a:	466a      	mov	r2, sp
    6d0c:	4b09      	ldr	r3, [pc, #36]	; (6d34 <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPadhh+0x84>)
    6d0e:	7912      	ldrb	r2, [r2, #4]
    6d10:	54e2      	strb	r2, [r4, r3]
  uc_pinRTS = _pinRTS;
    6d12:	466a      	mov	r2, sp
    6d14:	7a12      	ldrb	r2, [r2, #8]
    6d16:	3301      	adds	r3, #1
    6d18:	54e2      	strb	r2, [r4, r3]
  uc_pinCTS = _pinCTS;
    6d1a:	466a      	mov	r2, sp
    6d1c:	7b12      	ldrb	r2, [r2, #12]
    6d1e:	3310      	adds	r3, #16
    6d20:	54e2      	strb	r2, [r4, r3]
}
    6d22:	b005      	add	sp, #20
    6d24:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6d26:	46c0      	nop			; (mov r8, r8)
    6d28:	0000ba68 	.word	0x0000ba68
    6d2c:	00000225 	.word	0x00000225
    6d30:	00000226 	.word	0x00000226
    6d34:	00000227 	.word	0x00000227

00006d38 <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPad>:
Uart::Uart(SERCOM *_s, uint8_t _pinRX, uint8_t _pinTX, SercomRXPad _padRX, SercomUartTXPad _padTX) :
    6d38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    6d3a:	001d      	movs	r5, r3
    6d3c:	ab08      	add	r3, sp, #32
    6d3e:	781b      	ldrb	r3, [r3, #0]
    6d40:	0004      	movs	r4, r0
    6d42:	9300      	str	r3, [sp, #0]
    6d44:	ab09      	add	r3, sp, #36	; 0x24
    6d46:	781b      	ldrb	r3, [r3, #0]
    6d48:	0016      	movs	r6, r2
    6d4a:	9301      	str	r3, [sp, #4]
    6d4c:	2300      	movs	r3, #0
    6d4e:	6043      	str	r3, [r0, #4]
    6d50:	23fa      	movs	r3, #250	; 0xfa
    6d52:	009b      	lsls	r3, r3, #2
    6d54:	6083      	str	r3, [r0, #8]
Uart::Uart(SERCOM *_s, uint8_t _pinRX, uint8_t _pinTX, SercomRXPad _padRX, SercomUartTXPad _padTX, uint8_t _pinRTS, uint8_t _pinCTS)
    6d56:	4b11      	ldr	r3, [pc, #68]	; (6d9c <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPad+0x64>)
Uart::Uart(SERCOM *_s, uint8_t _pinRX, uint8_t _pinTX, SercomRXPad _padRX, SercomUartTXPad _padTX) :
    6d58:	000f      	movs	r7, r1
Uart::Uart(SERCOM *_s, uint8_t _pinRX, uint8_t _pinTX, SercomRXPad _padRX, SercomUartTXPad _padTX, uint8_t _pinRTS, uint8_t _pinCTS)
    6d5a:	3308      	adds	r3, #8
    6d5c:	6003      	str	r3, [r0, #0]
    6d5e:	3014      	adds	r0, #20
    6d60:	f7ff ff98 	bl	6c94 <_ZN11RingBufferNILi256EEC1Ev>
    6d64:	0020      	movs	r0, r4
    6d66:	301d      	adds	r0, #29
    6d68:	30ff      	adds	r0, #255	; 0xff
    6d6a:	f7ff ff93 	bl	6c94 <_ZN11RingBufferNILi256EEC1Ev>
  uc_pinRX = _pinRX;
    6d6e:	2389      	movs	r3, #137	; 0x89
  uc_padRX = _padRX ;
    6d70:	466a      	mov	r2, sp
  uc_pinRX = _pinRX;
    6d72:	009b      	lsls	r3, r3, #2
  sercom = _s;
    6d74:	6127      	str	r7, [r4, #16]
  uc_pinRX = _pinRX;
    6d76:	54e6      	strb	r6, [r4, r3]
  uc_pinTX = _pinTX;
    6d78:	4b09      	ldr	r3, [pc, #36]	; (6da0 <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPad+0x68>)
  uc_padRX = _padRX ;
    6d7a:	7812      	ldrb	r2, [r2, #0]
  uc_pinTX = _pinTX;
    6d7c:	54e5      	strb	r5, [r4, r3]
  uc_padRX = _padRX ;
    6d7e:	4b09      	ldr	r3, [pc, #36]	; (6da4 <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPad+0x6c>)
}
    6d80:	0020      	movs	r0, r4
  uc_padRX = _padRX ;
    6d82:	54e2      	strb	r2, [r4, r3]
  uc_padTX = _padTX;
    6d84:	466a      	mov	r2, sp
    6d86:	4b08      	ldr	r3, [pc, #32]	; (6da8 <_ZN4UartC1EP6SERCOMhh11SercomRXPad15SercomUartTXPad+0x70>)
    6d88:	7912      	ldrb	r2, [r2, #4]
    6d8a:	54e2      	strb	r2, [r4, r3]
  uc_pinRTS = _pinRTS;
    6d8c:	228a      	movs	r2, #138	; 0x8a
    6d8e:	3b29      	subs	r3, #41	; 0x29
    6d90:	3bff      	subs	r3, #255	; 0xff
    6d92:	0092      	lsls	r2, r2, #2
    6d94:	54a3      	strb	r3, [r4, r2]
  uc_pinCTS = _pinCTS;
    6d96:	3210      	adds	r2, #16
    6d98:	54a3      	strb	r3, [r4, r2]
}
    6d9a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    6d9c:	0000ba68 	.word	0x0000ba68
    6da0:	00000225 	.word	0x00000225
    6da4:	00000226 	.word	0x00000226
    6da8:	00000227 	.word	0x00000227

00006dac <_ZN11RingBufferNILi256EE9availableEv>:
  int delta = _iHead - _iTail;
    6dac:	0003      	movs	r3, r0
    6dae:	33fc      	adds	r3, #252	; 0xfc
    6db0:	6858      	ldr	r0, [r3, #4]
    6db2:	689b      	ldr	r3, [r3, #8]
    6db4:	1ac0      	subs	r0, r0, r3
  if(delta < 0)
    6db6:	d501      	bpl.n	6dbc <_ZN11RingBufferNILi256EE9availableEv+0x10>
    return N + delta;
    6db8:	3001      	adds	r0, #1
    6dba:	30ff      	adds	r0, #255	; 0xff
}
    6dbc:	4770      	bx	lr

00006dbe <_ZN4Uart5flushEv>:
{
    6dbe:	b510      	push	{r4, lr}
    6dc0:	0004      	movs	r4, r0
  while(txBuffer.available()); // wait until TX buffer is empty
    6dc2:	0020      	movs	r0, r4
    6dc4:	301d      	adds	r0, #29
    6dc6:	30ff      	adds	r0, #255	; 0xff
    6dc8:	f7ff fff0 	bl	6dac <_ZN11RingBufferNILi256EE9availableEv>
    6dcc:	2800      	cmp	r0, #0
    6dce:	d1f8      	bne.n	6dc2 <_ZN4Uart5flushEv+0x4>
  sercom->flushUART();
    6dd0:	6920      	ldr	r0, [r4, #16]
    6dd2:	f7ff fdd0 	bl	6976 <_ZN6SERCOM9flushUARTEv>
}
    6dd6:	bd10      	pop	{r4, pc}

00006dd8 <_ZN4Uart9availableEv>:
{
    6dd8:	b510      	push	{r4, lr}
  return rxBuffer.available();
    6dda:	3014      	adds	r0, #20
    6ddc:	f7ff ffe6 	bl	6dac <_ZN11RingBufferNILi256EE9availableEv>
}
    6de0:	bd10      	pop	{r4, pc}

00006de2 <_ZN11RingBufferNILi256EE17availableForStoreEv>:
  if (_iHead >= _iTail)
    6de2:	0003      	movs	r3, r0
    6de4:	33fc      	adds	r3, #252	; 0xfc
    6de6:	6859      	ldr	r1, [r3, #4]
    6de8:	689a      	ldr	r2, [r3, #8]
    6dea:	4291      	cmp	r1, r2
    6dec:	db04      	blt.n	6df8 <_ZN11RingBufferNILi256EE17availableForStoreEv+0x16>
    return N - 1 - _iHead + _iTail;
    6dee:	685a      	ldr	r2, [r3, #4]
    6df0:	6898      	ldr	r0, [r3, #8]
    6df2:	1a80      	subs	r0, r0, r2
    6df4:	30ff      	adds	r0, #255	; 0xff
}
    6df6:	4770      	bx	lr
    return _iTail - _iHead - 1;
    6df8:	6898      	ldr	r0, [r3, #8]
    6dfa:	685b      	ldr	r3, [r3, #4]
    6dfc:	1ac0      	subs	r0, r0, r3
    6dfe:	3801      	subs	r0, #1
    6e00:	e7f9      	b.n	6df6 <_ZN11RingBufferNILi256EE17availableForStoreEv+0x14>

00006e02 <_ZN4Uart17availableForWriteEv>:
{
    6e02:	b510      	push	{r4, lr}
  return txBuffer.availableForStore();
    6e04:	301d      	adds	r0, #29
    6e06:	30ff      	adds	r0, #255	; 0xff
    6e08:	f7ff ffeb 	bl	6de2 <_ZN11RingBufferNILi256EE17availableForStoreEv>
}
    6e0c:	bd10      	pop	{r4, pc}

00006e0e <_ZN4Uart10IrqHandlerEv>:
{
    6e0e:	b510      	push	{r4, lr}
    6e10:	0004      	movs	r4, r0
  if (sercom->isFrameErrorUART()) {
    6e12:	6900      	ldr	r0, [r0, #16]
    6e14:	f7ff fdcb 	bl	69ae <_ZN6SERCOM16isFrameErrorUARTEv>
    6e18:	2800      	cmp	r0, #0
    6e1a:	d005      	beq.n	6e28 <_ZN4Uart10IrqHandlerEv+0x1a>
    sercom->readDataUART();
    6e1c:	6920      	ldr	r0, [r4, #16]
    6e1e:	f7ff fdd6 	bl	69ce <_ZN6SERCOM12readDataUARTEv>
    sercom->clearFrameErrorUART();
    6e22:	6920      	ldr	r0, [r4, #16]
    6e24:	f7ff fdc8 	bl	69b8 <_ZN6SERCOM19clearFrameErrorUARTEv>
  if (sercom->availableDataUART()) {
    6e28:	6920      	ldr	r0, [r4, #16]
    6e2a:	f7ff fdb0 	bl	698e <_ZN6SERCOM17availableDataUARTEv>
    6e2e:	2800      	cmp	r0, #0
    6e30:	d020      	beq.n	6e74 <_ZN4Uart10IrqHandlerEv+0x66>
    rxBuffer.store_char(sercom->readDataUART());
    6e32:	6920      	ldr	r0, [r4, #16]
    6e34:	f7ff fdcb 	bl	69ce <_ZN6SERCOM12readDataUARTEv>
  int i = nextIndex(_iHead);
    6e38:	0022      	movs	r2, r4
    6e3a:	32fc      	adds	r2, #252	; 0xfc
    6e3c:	6993      	ldr	r3, [r2, #24]
  if ( i != _iTail )
    6e3e:	69d1      	ldr	r1, [r2, #28]
}

template <int N>
int RingBufferN<N>::nextIndex(int index)
{
  return (uint32_t)(index + 1) % N;
    6e40:	3301      	adds	r3, #1
    6e42:	b2db      	uxtb	r3, r3
  if ( i != _iTail )
    6e44:	428b      	cmp	r3, r1
    6e46:	d003      	beq.n	6e50 <_ZN4Uart10IrqHandlerEv+0x42>
    _aucBuffer[_iHead] = c ;
    6e48:	6991      	ldr	r1, [r2, #24]
    6e4a:	1861      	adds	r1, r4, r1
    6e4c:	7508      	strb	r0, [r1, #20]
    _iHead = i ;
    6e4e:	6193      	str	r3, [r2, #24]
    if (uc_pinRTS != NO_RTS_PIN) {
    6e50:	238a      	movs	r3, #138	; 0x8a
    6e52:	009b      	lsls	r3, r3, #2
    6e54:	5ce3      	ldrb	r3, [r4, r3]
    6e56:	2bff      	cmp	r3, #255	; 0xff
    6e58:	d00c      	beq.n	6e74 <_ZN4Uart10IrqHandlerEv+0x66>
    rxBuffer.store_char(sercom->readDataUART());
    6e5a:	0020      	movs	r0, r4
    6e5c:	3014      	adds	r0, #20
      if (rxBuffer.availableForStore() < RTS_RX_THRESHOLD) {
    6e5e:	f7ff ffc0 	bl	6de2 <_ZN11RingBufferNILi256EE17availableForStoreEv>
    6e62:	2809      	cmp	r0, #9
    6e64:	dc06      	bgt.n	6e74 <_ZN4Uart10IrqHandlerEv+0x66>
        *pul_outsetRTS = ul_pinMaskRTS;
    6e66:	238b      	movs	r3, #139	; 0x8b
    6e68:	228d      	movs	r2, #141	; 0x8d
    6e6a:	009b      	lsls	r3, r3, #2
    6e6c:	0092      	lsls	r2, r2, #2
    6e6e:	58e3      	ldr	r3, [r4, r3]
    6e70:	58a2      	ldr	r2, [r4, r2]
    6e72:	601a      	str	r2, [r3, #0]
  if (sercom->isDataRegisterEmptyUART()) {
    6e74:	6920      	ldr	r0, [r4, #16]
    6e76:	f7ff fda5 	bl	69c4 <_ZN6SERCOM23isDataRegisterEmptyUARTEv>
    6e7a:	2800      	cmp	r0, #0
    6e7c:	d01a      	beq.n	6eb4 <_ZN4Uart10IrqHandlerEv+0xa6>
    if (txBuffer.available()) {
    6e7e:	0020      	movs	r0, r4
    6e80:	301d      	adds	r0, #29
    6e82:	30ff      	adds	r0, #255	; 0xff
    6e84:	f7ff ff92 	bl	6dac <_ZN11RingBufferNILi256EE9availableEv>
    6e88:	2800      	cmp	r0, #0
    6e8a:	d022      	beq.n	6ed2 <_ZN4Uart10IrqHandlerEv+0xc4>
  if(_iTail == _iHead)
    6e8c:	2386      	movs	r3, #134	; 0x86
    6e8e:	009b      	lsls	r3, r3, #2
    6e90:	18e3      	adds	r3, r4, r3
    6e92:	6899      	ldr	r1, [r3, #8]
    6e94:	685a      	ldr	r2, [r3, #4]
    6e96:	4291      	cmp	r1, r2
    6e98:	d018      	beq.n	6ecc <_ZN4Uart10IrqHandlerEv+0xbe>
  uint8_t value = _aucBuffer[_iTail];
    6e9a:	218e      	movs	r1, #142	; 0x8e
    6e9c:	689a      	ldr	r2, [r3, #8]
    6e9e:	0049      	lsls	r1, r1, #1
    6ea0:	18a2      	adds	r2, r4, r2
    6ea2:	5c51      	ldrb	r1, [r2, r1]
  _iTail = nextIndex(_iTail);
    6ea4:	689a      	ldr	r2, [r3, #8]
  return (uint32_t)(index + 1) % N;
    6ea6:	3201      	adds	r2, #1
    6ea8:	b2d2      	uxtb	r2, r2
  _iTail = nextIndex(_iTail);
    6eaa:	609a      	str	r2, [r3, #8]
      sercom->writeDataUART(data);
    6eac:	b2c9      	uxtb	r1, r1
    6eae:	6920      	ldr	r0, [r4, #16]
    6eb0:	f7ff fd91 	bl	69d6 <_ZN6SERCOM13writeDataUARTEh>
  if (sercom->isUARTError()) {
    6eb4:	6920      	ldr	r0, [r4, #16]
    6eb6:	f7ff fd6f 	bl	6998 <_ZN6SERCOM11isUARTErrorEv>
    6eba:	2800      	cmp	r0, #0
    6ebc:	d005      	beq.n	6eca <_ZN4Uart10IrqHandlerEv+0xbc>
    sercom->acknowledgeUARTError();
    6ebe:	6920      	ldr	r0, [r4, #16]
    6ec0:	f7ff fd6e 	bl	69a0 <_ZN6SERCOM20acknowledgeUARTErrorEv>
    sercom->clearStatusUART();
    6ec4:	6920      	ldr	r0, [r4, #16]
    6ec6:	f7ff fd5e 	bl	6986 <_ZN6SERCOM15clearStatusUARTEv>
}
    6eca:	bd10      	pop	{r4, pc}
    return -1;
    6ecc:	2101      	movs	r1, #1
    6ece:	4249      	negs	r1, r1
    6ed0:	e7ec      	b.n	6eac <_ZN4Uart10IrqHandlerEv+0x9e>
      sercom->disableDataRegisterEmptyInterruptUART();
    6ed2:	6920      	ldr	r0, [r4, #16]
    6ed4:	f7ff fd8b 	bl	69ee <_ZN6SERCOM37disableDataRegisterEmptyInterruptUARTEv>
    6ed8:	e7ec      	b.n	6eb4 <_ZN4Uart10IrqHandlerEv+0xa6>
	...

00006edc <_ZN4Uart5writeEh>:
{
    6edc:	b570      	push	{r4, r5, r6, lr}
    6ede:	0004      	movs	r4, r0
  if (sercom->isDataRegisterEmptyUART() && txBuffer.available() == 0) {
    6ee0:	6900      	ldr	r0, [r0, #16]
{
    6ee2:	000d      	movs	r5, r1
  if (sercom->isDataRegisterEmptyUART() && txBuffer.available() == 0) {
    6ee4:	f7ff fd6e 	bl	69c4 <_ZN6SERCOM23isDataRegisterEmptyUARTEv>
    6ee8:	2800      	cmp	r0, #0
    6eea:	d124      	bne.n	6f36 <_ZN4Uart5writeEh+0x5a>
  return (uint32_t)(index + 1) % N;
    6eec:	26ff      	movs	r6, #255	; 0xff
}

template <int N>
bool RingBufferN<N>::isFull()
{
  return (nextIndex(_iHead) == _iTail);
    6eee:	2386      	movs	r3, #134	; 0x86
    6ef0:	009b      	lsls	r3, r3, #2
    6ef2:	18e3      	adds	r3, r4, r3
    6ef4:	685a      	ldr	r2, [r3, #4]
    6ef6:	6899      	ldr	r1, [r3, #8]
  return (uint32_t)(index + 1) % N;
    6ef8:	3201      	adds	r2, #1
    6efa:	4032      	ands	r2, r6
    while(txBuffer.isFull()) {
    6efc:	428a      	cmp	r2, r1
    6efe:	d12f      	bne.n	6f60 <_ZN4Uart5writeEh+0x84>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    6f00:	f3ef 8310 	mrs	r3, PRIMASK
      if (interruptsEnabled) {
    6f04:	07db      	lsls	r3, r3, #31
    6f06:	d40d      	bmi.n	6f24 <_ZN4Uart5writeEh+0x48>
        uint32_t exceptionNumber = (SCB->ICSR & SCB_ICSR_VECTACTIVE_Msk);
    6f08:	4b1e      	ldr	r3, [pc, #120]	; (6f84 <_ZN4Uart5writeEh+0xa8>)
    6f0a:	685b      	ldr	r3, [r3, #4]
    6f0c:	05db      	lsls	r3, r3, #23
    6f0e:	0ddb      	lsrs	r3, r3, #23
        if (exceptionNumber == 0 ||
    6f10:	d0ed      	beq.n	6eee <_ZN4Uart5writeEh+0x12>
              NVIC_GetPriority((IRQn_Type)(exceptionNumber - 16)) > SERCOM_NVIC_PRIORITY) {
    6f12:	3b10      	subs	r3, #16
    6f14:	b25b      	sxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
    6f16:	2b00      	cmp	r3, #0
    6f18:	db19      	blt.n	6f4e <_ZN4Uart5writeEh+0x72>
    return((uint32_t)(((NVIC->IP[ _IP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U - __NVIC_PRIO_BITS)));
    6f1a:	089b      	lsrs	r3, r3, #2
    6f1c:	33c0      	adds	r3, #192	; 0xc0
    6f1e:	4a1a      	ldr	r2, [pc, #104]	; (6f88 <_ZN4Uart5writeEh+0xac>)
    6f20:	009b      	lsls	r3, r3, #2
    6f22:	589b      	ldr	r3, [r3, r2]
      if (sercom->isDataRegisterEmptyUART()) {
    6f24:	6920      	ldr	r0, [r4, #16]
    6f26:	f7ff fd4d 	bl	69c4 <_ZN6SERCOM23isDataRegisterEmptyUARTEv>
    6f2a:	2800      	cmp	r0, #0
    6f2c:	d0df      	beq.n	6eee <_ZN4Uart5writeEh+0x12>
        IrqHandler();
    6f2e:	0020      	movs	r0, r4
    6f30:	f7ff ff6d 	bl	6e0e <_ZN4Uart10IrqHandlerEv>
    6f34:	e7db      	b.n	6eee <_ZN4Uart5writeEh+0x12>
  if (sercom->isDataRegisterEmptyUART() && txBuffer.available() == 0) {
    6f36:	0020      	movs	r0, r4
    6f38:	301d      	adds	r0, #29
    6f3a:	30ff      	adds	r0, #255	; 0xff
    6f3c:	f7ff ff36 	bl	6dac <_ZN11RingBufferNILi256EE9availableEv>
    6f40:	2800      	cmp	r0, #0
    6f42:	d1d3      	bne.n	6eec <_ZN4Uart5writeEh+0x10>
    sercom->writeDataUART(data);
    6f44:	0029      	movs	r1, r5
    6f46:	6920      	ldr	r0, [r4, #16]
    6f48:	f7ff fd45 	bl	69d6 <_ZN6SERCOM13writeDataUARTEh>
  return 1;
    6f4c:	e017      	b.n	6f7e <_ZN4Uart5writeEh+0xa2>
    return((uint32_t)(((SCB->SHP[_SHP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U - __NVIC_PRIO_BITS)));
    6f4e:	220f      	movs	r2, #15
    6f50:	4013      	ands	r3, r2
    6f52:	3b08      	subs	r3, #8
    6f54:	089b      	lsrs	r3, r3, #2
    6f56:	4a0d      	ldr	r2, [pc, #52]	; (6f8c <_ZN4Uart5writeEh+0xb0>)
    6f58:	009b      	lsls	r3, r3, #2
    6f5a:	189b      	adds	r3, r3, r2
    6f5c:	681b      	ldr	r3, [r3, #0]
    6f5e:	e7e1      	b.n	6f24 <_ZN4Uart5writeEh+0x48>
  int i = nextIndex(_iHead);
    6f60:	685a      	ldr	r2, [r3, #4]
  return (uint32_t)(index + 1) % N;
    6f62:	3201      	adds	r2, #1
    6f64:	4016      	ands	r6, r2
  if ( i != _iTail )
    6f66:	689a      	ldr	r2, [r3, #8]
    6f68:	4296      	cmp	r6, r2
    6f6a:	d005      	beq.n	6f78 <_ZN4Uart5writeEh+0x9c>
    _aucBuffer[_iHead] = c ;
    6f6c:	218e      	movs	r1, #142	; 0x8e
    6f6e:	685a      	ldr	r2, [r3, #4]
    6f70:	0049      	lsls	r1, r1, #1
    6f72:	18a2      	adds	r2, r4, r2
    6f74:	5455      	strb	r5, [r2, r1]
    _iHead = i ;
    6f76:	605e      	str	r6, [r3, #4]
    sercom->enableDataRegisterEmptyInterruptUART();
    6f78:	6920      	ldr	r0, [r4, #16]
    6f7a:	f7ff fd34 	bl	69e6 <_ZN6SERCOM36enableDataRegisterEmptyInterruptUARTEv>
}
    6f7e:	2001      	movs	r0, #1
    6f80:	bd70      	pop	{r4, r5, r6, pc}
    6f82:	46c0      	nop			; (mov r8, r8)
    6f84:	e000ed00 	.word	0xe000ed00
    6f88:	e000e100 	.word	0xe000e100
    6f8c:	e000ed1c 	.word	0xe000ed1c

00006f90 <_ZN4Uart4readEv>:
  if(_iTail == _iHead)
    6f90:	0003      	movs	r3, r0
    6f92:	33fc      	adds	r3, #252	; 0xfc
    6f94:	69d9      	ldr	r1, [r3, #28]
    6f96:	699a      	ldr	r2, [r3, #24]
{
    6f98:	b570      	push	{r4, r5, r6, lr}
    6f9a:	0004      	movs	r4, r0
    6f9c:	4291      	cmp	r1, r2
    6f9e:	d01a      	beq.n	6fd6 <_ZN4Uart4readEv+0x46>
  uint8_t value = _aucBuffer[_iTail];
    6fa0:	69da      	ldr	r2, [r3, #28]
    6fa2:	1882      	adds	r2, r0, r2
    6fa4:	7d15      	ldrb	r5, [r2, #20]
  _iTail = nextIndex(_iTail);
    6fa6:	69da      	ldr	r2, [r3, #28]
  return (uint32_t)(index + 1) % N;
    6fa8:	3201      	adds	r2, #1
    6faa:	b2d2      	uxtb	r2, r2
  _iTail = nextIndex(_iTail);
    6fac:	61da      	str	r2, [r3, #28]
  if (uc_pinRTS != NO_RTS_PIN) {
    6fae:	238a      	movs	r3, #138	; 0x8a
    6fb0:	009b      	lsls	r3, r3, #2
    6fb2:	5ce3      	ldrb	r3, [r4, r3]
    6fb4:	2bff      	cmp	r3, #255	; 0xff
    6fb6:	d00c      	beq.n	6fd2 <_ZN4Uart4readEv+0x42>
  int c = rxBuffer.read_char();
    6fb8:	0020      	movs	r0, r4
    6fba:	3014      	adds	r0, #20
    if (rxBuffer.availableForStore() > RTS_RX_THRESHOLD) {
    6fbc:	f7ff ff11 	bl	6de2 <_ZN11RingBufferNILi256EE17availableForStoreEv>
    6fc0:	280a      	cmp	r0, #10
    6fc2:	dd06      	ble.n	6fd2 <_ZN4Uart4readEv+0x42>
      *pul_outclrRTS = ul_pinMaskRTS;
    6fc4:	238c      	movs	r3, #140	; 0x8c
    6fc6:	228d      	movs	r2, #141	; 0x8d
    6fc8:	009b      	lsls	r3, r3, #2
    6fca:	0092      	lsls	r2, r2, #2
    6fcc:	58e3      	ldr	r3, [r4, r3]
    6fce:	58a2      	ldr	r2, [r4, r2]
    6fd0:	601a      	str	r2, [r3, #0]
}
    6fd2:	0028      	movs	r0, r5
    6fd4:	bd70      	pop	{r4, r5, r6, pc}
    return -1;
    6fd6:	2501      	movs	r5, #1
    6fd8:	426d      	negs	r5, r5
    6fda:	e7e8      	b.n	6fae <_ZN4Uart4readEv+0x1e>

00006fdc <_ZN13PluggableUSB_12getInterfaceEPh>:
#ifdef PLUGGABLE_USB_ENABLED

extern uint32_t EndPoints[];

int PluggableUSB_::getInterface(uint8_t* interfaceCount)
{
    6fdc:	b570      	push	{r4, r5, r6, lr}
    6fde:	000e      	movs	r6, r1
	int sent = 0;
    6fe0:	2500      	movs	r5, #0
	PluggableUSBModule* node;
	for (node = rootNode; node; node = node->next) {
    6fe2:	6844      	ldr	r4, [r0, #4]
    6fe4:	2c00      	cmp	r4, #0
    6fe6:	d00b      	beq.n	7000 <_ZN13PluggableUSB_12getInterfaceEPh+0x24>
		int res = node->getInterface(interfaceCount);
    6fe8:	6823      	ldr	r3, [r4, #0]
    6fea:	0031      	movs	r1, r6
    6fec:	685b      	ldr	r3, [r3, #4]
    6fee:	0020      	movs	r0, r4
    6ff0:	4798      	blx	r3
		if (res < 0)
    6ff2:	2800      	cmp	r0, #0
    6ff4:	db02      	blt.n	6ffc <_ZN13PluggableUSB_12getInterfaceEPh+0x20>
			return -1;
		sent += res;
    6ff6:	182d      	adds	r5, r5, r0
	for (node = rootNode; node; node = node->next) {
    6ff8:	68e4      	ldr	r4, [r4, #12]
    6ffa:	e7f3      	b.n	6fe4 <_ZN13PluggableUSB_12getInterfaceEPh+0x8>
			return -1;
    6ffc:	2501      	movs	r5, #1
    6ffe:	426d      	negs	r5, r5
	}
	return sent;
}
    7000:	0028      	movs	r0, r5
    7002:	bd70      	pop	{r4, r5, r6, pc}

00007004 <_ZN13PluggableUSB_13getDescriptorER8USBSetup>:

int PluggableUSB_::getDescriptor(USBSetup& setup)
{
    7004:	b570      	push	{r4, r5, r6, lr}
    7006:	000d      	movs	r5, r1
	PluggableUSBModule* node;
	for (node = rootNode; node; node = node->next) {
    7008:	6844      	ldr	r4, [r0, #4]
    700a:	2c00      	cmp	r4, #0
    700c:	d008      	beq.n	7020 <_ZN13PluggableUSB_13getDescriptorER8USBSetup+0x1c>
		int ret = node->getDescriptor(setup);
    700e:	6823      	ldr	r3, [r4, #0]
    7010:	0029      	movs	r1, r5
    7012:	689b      	ldr	r3, [r3, #8]
    7014:	0020      	movs	r0, r4
    7016:	4798      	blx	r3
		// ret!=0 -> request has been processed
		if (ret)
    7018:	2800      	cmp	r0, #0
    701a:	d102      	bne.n	7022 <_ZN13PluggableUSB_13getDescriptorER8USBSetup+0x1e>
	for (node = rootNode; node; node = node->next) {
    701c:	68e4      	ldr	r4, [r4, #12]
    701e:	e7f4      	b.n	700a <_ZN13PluggableUSB_13getDescriptorER8USBSetup+0x6>
			return ret;
	}
	return 0;
    7020:	0020      	movs	r0, r4
}
    7022:	bd70      	pop	{r4, r5, r6, pc}

00007024 <_ZN13PluggableUSB_12getShortNameEPc>:

void PluggableUSB_::getShortName(char *iSerialNum)
{
    7024:	b570      	push	{r4, r5, r6, lr}
    7026:	000d      	movs	r5, r1
       PluggableUSBModule* node;
       for (node = rootNode; node; node = node->next) {
    7028:	6844      	ldr	r4, [r0, #4]
    702a:	2c00      	cmp	r4, #0
    702c:	d007      	beq.n	703e <_ZN13PluggableUSB_12getShortNameEPc+0x1a>
               iSerialNum += node->getShortName(iSerialNum);
    702e:	6823      	ldr	r3, [r4, #0]
    7030:	0029      	movs	r1, r5
    7032:	0020      	movs	r0, r4
    7034:	68db      	ldr	r3, [r3, #12]
    7036:	4798      	blx	r3
       for (node = rootNode; node; node = node->next) {
    7038:	68e4      	ldr	r4, [r4, #12]
               iSerialNum += node->getShortName(iSerialNum);
    703a:	182d      	adds	r5, r5, r0
       for (node = rootNode; node; node = node->next) {
    703c:	e7f5      	b.n	702a <_ZN13PluggableUSB_12getShortNameEPc+0x6>
       }
       *iSerialNum = 0;
    703e:	702c      	strb	r4, [r5, #0]
}
    7040:	bd70      	pop	{r4, r5, r6, pc}

00007042 <_ZN13PluggableUSB_5setupER8USBSetup>:

bool PluggableUSB_::setup(USBSetup& setup)
{
    7042:	b570      	push	{r4, r5, r6, lr}
    7044:	000d      	movs	r5, r1
	PluggableUSBModule* node;
	for (node = rootNode; node; node = node->next) {
    7046:	6844      	ldr	r4, [r0, #4]
    7048:	2c00      	cmp	r4, #0
    704a:	d008      	beq.n	705e <_ZN13PluggableUSB_5setupER8USBSetup+0x1c>
		if (node->setup(setup)) {
    704c:	6823      	ldr	r3, [r4, #0]
    704e:	0029      	movs	r1, r5
    7050:	681b      	ldr	r3, [r3, #0]
    7052:	0020      	movs	r0, r4
    7054:	4798      	blx	r3
    7056:	2800      	cmp	r0, #0
    7058:	d102      	bne.n	7060 <_ZN13PluggableUSB_5setupER8USBSetup+0x1e>
	for (node = rootNode; node; node = node->next) {
    705a:	68e4      	ldr	r4, [r4, #12]
    705c:	e7f4      	b.n	7048 <_ZN13PluggableUSB_5setupER8USBSetup+0x6>
			return true;
		}
	}
	return false;
    705e:	0020      	movs	r0, r4
}
    7060:	bd70      	pop	{r4, r5, r6, pc}
	...

00007064 <_Z12PluggableUSBv>:
	// restart USB layer???
}

PluggableUSB_& PluggableUSB()
{
	static PluggableUSB_ obj;
    7064:	2101      	movs	r1, #1
    7066:	4a06      	ldr	r2, [pc, #24]	; (7080 <_Z12PluggableUSBv+0x1c>)
{
    7068:	b510      	push	{r4, lr}
	static PluggableUSB_ obj;
    706a:	6813      	ldr	r3, [r2, #0]
    706c:	4805      	ldr	r0, [pc, #20]	; (7084 <_Z12PluggableUSBv+0x20>)
    706e:	400b      	ands	r3, r1
    7070:	d105      	bne.n	707e <_Z12PluggableUSBv+0x1a>
	return obj;
}

PluggableUSB_::PluggableUSB_() : lastIf(CDC_ACM_INTERFACE + CDC_INTERFACE_COUNT),
                                 lastEp(CDC_FIRST_ENDPOINT + CDC_ENPOINT_COUNT),
                                 rootNode(NULL)
    7072:	2402      	movs	r4, #2
    7074:	7004      	strb	r4, [r0, #0]
    7076:	1924      	adds	r4, r4, r4
    7078:	7044      	strb	r4, [r0, #1]
    707a:	6043      	str	r3, [r0, #4]
	static PluggableUSB_ obj;
    707c:	6011      	str	r1, [r2, #0]
}
    707e:	bd10      	pop	{r4, pc}
    7080:	20001074 	.word	0x20001074
    7084:	20001078 	.word	0x20001078

00007088 <__aeabi_atexit>:
    7088:	000b      	movs	r3, r1
    708a:	b510      	push	{r4, lr}
    708c:	0001      	movs	r1, r0
    708e:	0018      	movs	r0, r3
    7090:	f001 ff44 	bl	8f1c <__cxa_atexit>
    7094:	bd10      	pop	{r4, pc}
	...

00007098 <__gnu_thumb1_case_uqi>:
    7098:	b402      	push	{r1}
    709a:	4671      	mov	r1, lr
    709c:	0849      	lsrs	r1, r1, #1
    709e:	0049      	lsls	r1, r1, #1
    70a0:	5c09      	ldrb	r1, [r1, r0]
    70a2:	0049      	lsls	r1, r1, #1
    70a4:	448e      	add	lr, r1
    70a6:	bc02      	pop	{r1}
    70a8:	4770      	bx	lr
    70aa:	46c0      	nop			; (mov r8, r8)

000070ac <__udivsi3>:
    70ac:	2200      	movs	r2, #0
    70ae:	0843      	lsrs	r3, r0, #1
    70b0:	428b      	cmp	r3, r1
    70b2:	d374      	bcc.n	719e <__udivsi3+0xf2>
    70b4:	0903      	lsrs	r3, r0, #4
    70b6:	428b      	cmp	r3, r1
    70b8:	d35f      	bcc.n	717a <__udivsi3+0xce>
    70ba:	0a03      	lsrs	r3, r0, #8
    70bc:	428b      	cmp	r3, r1
    70be:	d344      	bcc.n	714a <__udivsi3+0x9e>
    70c0:	0b03      	lsrs	r3, r0, #12
    70c2:	428b      	cmp	r3, r1
    70c4:	d328      	bcc.n	7118 <__udivsi3+0x6c>
    70c6:	0c03      	lsrs	r3, r0, #16
    70c8:	428b      	cmp	r3, r1
    70ca:	d30d      	bcc.n	70e8 <__udivsi3+0x3c>
    70cc:	22ff      	movs	r2, #255	; 0xff
    70ce:	0209      	lsls	r1, r1, #8
    70d0:	ba12      	rev	r2, r2
    70d2:	0c03      	lsrs	r3, r0, #16
    70d4:	428b      	cmp	r3, r1
    70d6:	d302      	bcc.n	70de <__udivsi3+0x32>
    70d8:	1212      	asrs	r2, r2, #8
    70da:	0209      	lsls	r1, r1, #8
    70dc:	d065      	beq.n	71aa <__udivsi3+0xfe>
    70de:	0b03      	lsrs	r3, r0, #12
    70e0:	428b      	cmp	r3, r1
    70e2:	d319      	bcc.n	7118 <__udivsi3+0x6c>
    70e4:	e000      	b.n	70e8 <__udivsi3+0x3c>
    70e6:	0a09      	lsrs	r1, r1, #8
    70e8:	0bc3      	lsrs	r3, r0, #15
    70ea:	428b      	cmp	r3, r1
    70ec:	d301      	bcc.n	70f2 <__udivsi3+0x46>
    70ee:	03cb      	lsls	r3, r1, #15
    70f0:	1ac0      	subs	r0, r0, r3
    70f2:	4152      	adcs	r2, r2
    70f4:	0b83      	lsrs	r3, r0, #14
    70f6:	428b      	cmp	r3, r1
    70f8:	d301      	bcc.n	70fe <__udivsi3+0x52>
    70fa:	038b      	lsls	r3, r1, #14
    70fc:	1ac0      	subs	r0, r0, r3
    70fe:	4152      	adcs	r2, r2
    7100:	0b43      	lsrs	r3, r0, #13
    7102:	428b      	cmp	r3, r1
    7104:	d301      	bcc.n	710a <__udivsi3+0x5e>
    7106:	034b      	lsls	r3, r1, #13
    7108:	1ac0      	subs	r0, r0, r3
    710a:	4152      	adcs	r2, r2
    710c:	0b03      	lsrs	r3, r0, #12
    710e:	428b      	cmp	r3, r1
    7110:	d301      	bcc.n	7116 <__udivsi3+0x6a>
    7112:	030b      	lsls	r3, r1, #12
    7114:	1ac0      	subs	r0, r0, r3
    7116:	4152      	adcs	r2, r2
    7118:	0ac3      	lsrs	r3, r0, #11
    711a:	428b      	cmp	r3, r1
    711c:	d301      	bcc.n	7122 <__udivsi3+0x76>
    711e:	02cb      	lsls	r3, r1, #11
    7120:	1ac0      	subs	r0, r0, r3
    7122:	4152      	adcs	r2, r2
    7124:	0a83      	lsrs	r3, r0, #10
    7126:	428b      	cmp	r3, r1
    7128:	d301      	bcc.n	712e <__udivsi3+0x82>
    712a:	028b      	lsls	r3, r1, #10
    712c:	1ac0      	subs	r0, r0, r3
    712e:	4152      	adcs	r2, r2
    7130:	0a43      	lsrs	r3, r0, #9
    7132:	428b      	cmp	r3, r1
    7134:	d301      	bcc.n	713a <__udivsi3+0x8e>
    7136:	024b      	lsls	r3, r1, #9
    7138:	1ac0      	subs	r0, r0, r3
    713a:	4152      	adcs	r2, r2
    713c:	0a03      	lsrs	r3, r0, #8
    713e:	428b      	cmp	r3, r1
    7140:	d301      	bcc.n	7146 <__udivsi3+0x9a>
    7142:	020b      	lsls	r3, r1, #8
    7144:	1ac0      	subs	r0, r0, r3
    7146:	4152      	adcs	r2, r2
    7148:	d2cd      	bcs.n	70e6 <__udivsi3+0x3a>
    714a:	09c3      	lsrs	r3, r0, #7
    714c:	428b      	cmp	r3, r1
    714e:	d301      	bcc.n	7154 <__udivsi3+0xa8>
    7150:	01cb      	lsls	r3, r1, #7
    7152:	1ac0      	subs	r0, r0, r3
    7154:	4152      	adcs	r2, r2
    7156:	0983      	lsrs	r3, r0, #6
    7158:	428b      	cmp	r3, r1
    715a:	d301      	bcc.n	7160 <__udivsi3+0xb4>
    715c:	018b      	lsls	r3, r1, #6
    715e:	1ac0      	subs	r0, r0, r3
    7160:	4152      	adcs	r2, r2
    7162:	0943      	lsrs	r3, r0, #5
    7164:	428b      	cmp	r3, r1
    7166:	d301      	bcc.n	716c <__udivsi3+0xc0>
    7168:	014b      	lsls	r3, r1, #5
    716a:	1ac0      	subs	r0, r0, r3
    716c:	4152      	adcs	r2, r2
    716e:	0903      	lsrs	r3, r0, #4
    7170:	428b      	cmp	r3, r1
    7172:	d301      	bcc.n	7178 <__udivsi3+0xcc>
    7174:	010b      	lsls	r3, r1, #4
    7176:	1ac0      	subs	r0, r0, r3
    7178:	4152      	adcs	r2, r2
    717a:	08c3      	lsrs	r3, r0, #3
    717c:	428b      	cmp	r3, r1
    717e:	d301      	bcc.n	7184 <__udivsi3+0xd8>
    7180:	00cb      	lsls	r3, r1, #3
    7182:	1ac0      	subs	r0, r0, r3
    7184:	4152      	adcs	r2, r2
    7186:	0883      	lsrs	r3, r0, #2
    7188:	428b      	cmp	r3, r1
    718a:	d301      	bcc.n	7190 <__udivsi3+0xe4>
    718c:	008b      	lsls	r3, r1, #2
    718e:	1ac0      	subs	r0, r0, r3
    7190:	4152      	adcs	r2, r2
    7192:	0843      	lsrs	r3, r0, #1
    7194:	428b      	cmp	r3, r1
    7196:	d301      	bcc.n	719c <__udivsi3+0xf0>
    7198:	004b      	lsls	r3, r1, #1
    719a:	1ac0      	subs	r0, r0, r3
    719c:	4152      	adcs	r2, r2
    719e:	1a41      	subs	r1, r0, r1
    71a0:	d200      	bcs.n	71a4 <__udivsi3+0xf8>
    71a2:	4601      	mov	r1, r0
    71a4:	4152      	adcs	r2, r2
    71a6:	4610      	mov	r0, r2
    71a8:	4770      	bx	lr
    71aa:	e7ff      	b.n	71ac <__udivsi3+0x100>
    71ac:	b501      	push	{r0, lr}
    71ae:	2000      	movs	r0, #0
    71b0:	f000 f8f0 	bl	7394 <__aeabi_idiv0>
    71b4:	bd02      	pop	{r1, pc}
    71b6:	46c0      	nop			; (mov r8, r8)

000071b8 <__aeabi_uidivmod>:
    71b8:	2900      	cmp	r1, #0
    71ba:	d0f7      	beq.n	71ac <__udivsi3+0x100>
    71bc:	e776      	b.n	70ac <__udivsi3>
    71be:	4770      	bx	lr

000071c0 <__divsi3>:
    71c0:	4603      	mov	r3, r0
    71c2:	430b      	orrs	r3, r1
    71c4:	d47f      	bmi.n	72c6 <__divsi3+0x106>
    71c6:	2200      	movs	r2, #0
    71c8:	0843      	lsrs	r3, r0, #1
    71ca:	428b      	cmp	r3, r1
    71cc:	d374      	bcc.n	72b8 <__divsi3+0xf8>
    71ce:	0903      	lsrs	r3, r0, #4
    71d0:	428b      	cmp	r3, r1
    71d2:	d35f      	bcc.n	7294 <__divsi3+0xd4>
    71d4:	0a03      	lsrs	r3, r0, #8
    71d6:	428b      	cmp	r3, r1
    71d8:	d344      	bcc.n	7264 <__divsi3+0xa4>
    71da:	0b03      	lsrs	r3, r0, #12
    71dc:	428b      	cmp	r3, r1
    71de:	d328      	bcc.n	7232 <__divsi3+0x72>
    71e0:	0c03      	lsrs	r3, r0, #16
    71e2:	428b      	cmp	r3, r1
    71e4:	d30d      	bcc.n	7202 <__divsi3+0x42>
    71e6:	22ff      	movs	r2, #255	; 0xff
    71e8:	0209      	lsls	r1, r1, #8
    71ea:	ba12      	rev	r2, r2
    71ec:	0c03      	lsrs	r3, r0, #16
    71ee:	428b      	cmp	r3, r1
    71f0:	d302      	bcc.n	71f8 <__divsi3+0x38>
    71f2:	1212      	asrs	r2, r2, #8
    71f4:	0209      	lsls	r1, r1, #8
    71f6:	d065      	beq.n	72c4 <__divsi3+0x104>
    71f8:	0b03      	lsrs	r3, r0, #12
    71fa:	428b      	cmp	r3, r1
    71fc:	d319      	bcc.n	7232 <__divsi3+0x72>
    71fe:	e000      	b.n	7202 <__divsi3+0x42>
    7200:	0a09      	lsrs	r1, r1, #8
    7202:	0bc3      	lsrs	r3, r0, #15
    7204:	428b      	cmp	r3, r1
    7206:	d301      	bcc.n	720c <__divsi3+0x4c>
    7208:	03cb      	lsls	r3, r1, #15
    720a:	1ac0      	subs	r0, r0, r3
    720c:	4152      	adcs	r2, r2
    720e:	0b83      	lsrs	r3, r0, #14
    7210:	428b      	cmp	r3, r1
    7212:	d301      	bcc.n	7218 <__divsi3+0x58>
    7214:	038b      	lsls	r3, r1, #14
    7216:	1ac0      	subs	r0, r0, r3
    7218:	4152      	adcs	r2, r2
    721a:	0b43      	lsrs	r3, r0, #13
    721c:	428b      	cmp	r3, r1
    721e:	d301      	bcc.n	7224 <__divsi3+0x64>
    7220:	034b      	lsls	r3, r1, #13
    7222:	1ac0      	subs	r0, r0, r3
    7224:	4152      	adcs	r2, r2
    7226:	0b03      	lsrs	r3, r0, #12
    7228:	428b      	cmp	r3, r1
    722a:	d301      	bcc.n	7230 <__divsi3+0x70>
    722c:	030b      	lsls	r3, r1, #12
    722e:	1ac0      	subs	r0, r0, r3
    7230:	4152      	adcs	r2, r2
    7232:	0ac3      	lsrs	r3, r0, #11
    7234:	428b      	cmp	r3, r1
    7236:	d301      	bcc.n	723c <__divsi3+0x7c>
    7238:	02cb      	lsls	r3, r1, #11
    723a:	1ac0      	subs	r0, r0, r3
    723c:	4152      	adcs	r2, r2
    723e:	0a83      	lsrs	r3, r0, #10
    7240:	428b      	cmp	r3, r1
    7242:	d301      	bcc.n	7248 <__divsi3+0x88>
    7244:	028b      	lsls	r3, r1, #10
    7246:	1ac0      	subs	r0, r0, r3
    7248:	4152      	adcs	r2, r2
    724a:	0a43      	lsrs	r3, r0, #9
    724c:	428b      	cmp	r3, r1
    724e:	d301      	bcc.n	7254 <__divsi3+0x94>
    7250:	024b      	lsls	r3, r1, #9
    7252:	1ac0      	subs	r0, r0, r3
    7254:	4152      	adcs	r2, r2
    7256:	0a03      	lsrs	r3, r0, #8
    7258:	428b      	cmp	r3, r1
    725a:	d301      	bcc.n	7260 <__divsi3+0xa0>
    725c:	020b      	lsls	r3, r1, #8
    725e:	1ac0      	subs	r0, r0, r3
    7260:	4152      	adcs	r2, r2
    7262:	d2cd      	bcs.n	7200 <__divsi3+0x40>
    7264:	09c3      	lsrs	r3, r0, #7
    7266:	428b      	cmp	r3, r1
    7268:	d301      	bcc.n	726e <__divsi3+0xae>
    726a:	01cb      	lsls	r3, r1, #7
    726c:	1ac0      	subs	r0, r0, r3
    726e:	4152      	adcs	r2, r2
    7270:	0983      	lsrs	r3, r0, #6
    7272:	428b      	cmp	r3, r1
    7274:	d301      	bcc.n	727a <__divsi3+0xba>
    7276:	018b      	lsls	r3, r1, #6
    7278:	1ac0      	subs	r0, r0, r3
    727a:	4152      	adcs	r2, r2
    727c:	0943      	lsrs	r3, r0, #5
    727e:	428b      	cmp	r3, r1
    7280:	d301      	bcc.n	7286 <__divsi3+0xc6>
    7282:	014b      	lsls	r3, r1, #5
    7284:	1ac0      	subs	r0, r0, r3
    7286:	4152      	adcs	r2, r2
    7288:	0903      	lsrs	r3, r0, #4
    728a:	428b      	cmp	r3, r1
    728c:	d301      	bcc.n	7292 <__divsi3+0xd2>
    728e:	010b      	lsls	r3, r1, #4
    7290:	1ac0      	subs	r0, r0, r3
    7292:	4152      	adcs	r2, r2
    7294:	08c3      	lsrs	r3, r0, #3
    7296:	428b      	cmp	r3, r1
    7298:	d301      	bcc.n	729e <__divsi3+0xde>
    729a:	00cb      	lsls	r3, r1, #3
    729c:	1ac0      	subs	r0, r0, r3
    729e:	4152      	adcs	r2, r2
    72a0:	0883      	lsrs	r3, r0, #2
    72a2:	428b      	cmp	r3, r1
    72a4:	d301      	bcc.n	72aa <__divsi3+0xea>
    72a6:	008b      	lsls	r3, r1, #2
    72a8:	1ac0      	subs	r0, r0, r3
    72aa:	4152      	adcs	r2, r2
    72ac:	0843      	lsrs	r3, r0, #1
    72ae:	428b      	cmp	r3, r1
    72b0:	d301      	bcc.n	72b6 <__divsi3+0xf6>
    72b2:	004b      	lsls	r3, r1, #1
    72b4:	1ac0      	subs	r0, r0, r3
    72b6:	4152      	adcs	r2, r2
    72b8:	1a41      	subs	r1, r0, r1
    72ba:	d200      	bcs.n	72be <__divsi3+0xfe>
    72bc:	4601      	mov	r1, r0
    72be:	4152      	adcs	r2, r2
    72c0:	4610      	mov	r0, r2
    72c2:	4770      	bx	lr
    72c4:	e05d      	b.n	7382 <__divsi3+0x1c2>
    72c6:	0fca      	lsrs	r2, r1, #31
    72c8:	d000      	beq.n	72cc <__divsi3+0x10c>
    72ca:	4249      	negs	r1, r1
    72cc:	1003      	asrs	r3, r0, #32
    72ce:	d300      	bcc.n	72d2 <__divsi3+0x112>
    72d0:	4240      	negs	r0, r0
    72d2:	4053      	eors	r3, r2
    72d4:	2200      	movs	r2, #0
    72d6:	469c      	mov	ip, r3
    72d8:	0903      	lsrs	r3, r0, #4
    72da:	428b      	cmp	r3, r1
    72dc:	d32d      	bcc.n	733a <__divsi3+0x17a>
    72de:	0a03      	lsrs	r3, r0, #8
    72e0:	428b      	cmp	r3, r1
    72e2:	d312      	bcc.n	730a <__divsi3+0x14a>
    72e4:	22fc      	movs	r2, #252	; 0xfc
    72e6:	0189      	lsls	r1, r1, #6
    72e8:	ba12      	rev	r2, r2
    72ea:	0a03      	lsrs	r3, r0, #8
    72ec:	428b      	cmp	r3, r1
    72ee:	d30c      	bcc.n	730a <__divsi3+0x14a>
    72f0:	0189      	lsls	r1, r1, #6
    72f2:	1192      	asrs	r2, r2, #6
    72f4:	428b      	cmp	r3, r1
    72f6:	d308      	bcc.n	730a <__divsi3+0x14a>
    72f8:	0189      	lsls	r1, r1, #6
    72fa:	1192      	asrs	r2, r2, #6
    72fc:	428b      	cmp	r3, r1
    72fe:	d304      	bcc.n	730a <__divsi3+0x14a>
    7300:	0189      	lsls	r1, r1, #6
    7302:	d03a      	beq.n	737a <__divsi3+0x1ba>
    7304:	1192      	asrs	r2, r2, #6
    7306:	e000      	b.n	730a <__divsi3+0x14a>
    7308:	0989      	lsrs	r1, r1, #6
    730a:	09c3      	lsrs	r3, r0, #7
    730c:	428b      	cmp	r3, r1
    730e:	d301      	bcc.n	7314 <__divsi3+0x154>
    7310:	01cb      	lsls	r3, r1, #7
    7312:	1ac0      	subs	r0, r0, r3
    7314:	4152      	adcs	r2, r2
    7316:	0983      	lsrs	r3, r0, #6
    7318:	428b      	cmp	r3, r1
    731a:	d301      	bcc.n	7320 <__divsi3+0x160>
    731c:	018b      	lsls	r3, r1, #6
    731e:	1ac0      	subs	r0, r0, r3
    7320:	4152      	adcs	r2, r2
    7322:	0943      	lsrs	r3, r0, #5
    7324:	428b      	cmp	r3, r1
    7326:	d301      	bcc.n	732c <__divsi3+0x16c>
    7328:	014b      	lsls	r3, r1, #5
    732a:	1ac0      	subs	r0, r0, r3
    732c:	4152      	adcs	r2, r2
    732e:	0903      	lsrs	r3, r0, #4
    7330:	428b      	cmp	r3, r1
    7332:	d301      	bcc.n	7338 <__divsi3+0x178>
    7334:	010b      	lsls	r3, r1, #4
    7336:	1ac0      	subs	r0, r0, r3
    7338:	4152      	adcs	r2, r2
    733a:	08c3      	lsrs	r3, r0, #3
    733c:	428b      	cmp	r3, r1
    733e:	d301      	bcc.n	7344 <__divsi3+0x184>
    7340:	00cb      	lsls	r3, r1, #3
    7342:	1ac0      	subs	r0, r0, r3
    7344:	4152      	adcs	r2, r2
    7346:	0883      	lsrs	r3, r0, #2
    7348:	428b      	cmp	r3, r1
    734a:	d301      	bcc.n	7350 <__divsi3+0x190>
    734c:	008b      	lsls	r3, r1, #2
    734e:	1ac0      	subs	r0, r0, r3
    7350:	4152      	adcs	r2, r2
    7352:	d2d9      	bcs.n	7308 <__divsi3+0x148>
    7354:	0843      	lsrs	r3, r0, #1
    7356:	428b      	cmp	r3, r1
    7358:	d301      	bcc.n	735e <__divsi3+0x19e>
    735a:	004b      	lsls	r3, r1, #1
    735c:	1ac0      	subs	r0, r0, r3
    735e:	4152      	adcs	r2, r2
    7360:	1a41      	subs	r1, r0, r1
    7362:	d200      	bcs.n	7366 <__divsi3+0x1a6>
    7364:	4601      	mov	r1, r0
    7366:	4663      	mov	r3, ip
    7368:	4152      	adcs	r2, r2
    736a:	105b      	asrs	r3, r3, #1
    736c:	4610      	mov	r0, r2
    736e:	d301      	bcc.n	7374 <__divsi3+0x1b4>
    7370:	4240      	negs	r0, r0
    7372:	2b00      	cmp	r3, #0
    7374:	d500      	bpl.n	7378 <__divsi3+0x1b8>
    7376:	4249      	negs	r1, r1
    7378:	4770      	bx	lr
    737a:	4663      	mov	r3, ip
    737c:	105b      	asrs	r3, r3, #1
    737e:	d300      	bcc.n	7382 <__divsi3+0x1c2>
    7380:	4240      	negs	r0, r0
    7382:	b501      	push	{r0, lr}
    7384:	2000      	movs	r0, #0
    7386:	f000 f805 	bl	7394 <__aeabi_idiv0>
    738a:	bd02      	pop	{r1, pc}

0000738c <__aeabi_idivmod>:
    738c:	2900      	cmp	r1, #0
    738e:	d0f8      	beq.n	7382 <__divsi3+0x1c2>
    7390:	e716      	b.n	71c0 <__divsi3>
    7392:	4770      	bx	lr

00007394 <__aeabi_idiv0>:
    7394:	4770      	bx	lr
    7396:	46c0      	nop			; (mov r8, r8)

00007398 <__aeabi_cdrcmple>:
    7398:	4684      	mov	ip, r0
    739a:	1c10      	adds	r0, r2, #0
    739c:	4662      	mov	r2, ip
    739e:	468c      	mov	ip, r1
    73a0:	1c19      	adds	r1, r3, #0
    73a2:	4663      	mov	r3, ip
    73a4:	e000      	b.n	73a8 <__aeabi_cdcmpeq>
    73a6:	46c0      	nop			; (mov r8, r8)

000073a8 <__aeabi_cdcmpeq>:
    73a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    73aa:	f000 ff15 	bl	81d8 <__ledf2>
    73ae:	2800      	cmp	r0, #0
    73b0:	d401      	bmi.n	73b6 <__aeabi_cdcmpeq+0xe>
    73b2:	2100      	movs	r1, #0
    73b4:	42c8      	cmn	r0, r1
    73b6:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000073b8 <__aeabi_dcmpeq>:
    73b8:	b510      	push	{r4, lr}
    73ba:	f000 fe6f 	bl	809c <__eqdf2>
    73be:	4240      	negs	r0, r0
    73c0:	3001      	adds	r0, #1
    73c2:	bd10      	pop	{r4, pc}

000073c4 <__aeabi_dcmplt>:
    73c4:	b510      	push	{r4, lr}
    73c6:	f000 ff07 	bl	81d8 <__ledf2>
    73ca:	2800      	cmp	r0, #0
    73cc:	db01      	blt.n	73d2 <__aeabi_dcmplt+0xe>
    73ce:	2000      	movs	r0, #0
    73d0:	bd10      	pop	{r4, pc}
    73d2:	2001      	movs	r0, #1
    73d4:	bd10      	pop	{r4, pc}
    73d6:	46c0      	nop			; (mov r8, r8)

000073d8 <__aeabi_dcmple>:
    73d8:	b510      	push	{r4, lr}
    73da:	f000 fefd 	bl	81d8 <__ledf2>
    73de:	2800      	cmp	r0, #0
    73e0:	dd01      	ble.n	73e6 <__aeabi_dcmple+0xe>
    73e2:	2000      	movs	r0, #0
    73e4:	bd10      	pop	{r4, pc}
    73e6:	2001      	movs	r0, #1
    73e8:	bd10      	pop	{r4, pc}
    73ea:	46c0      	nop			; (mov r8, r8)

000073ec <__aeabi_dcmpgt>:
    73ec:	b510      	push	{r4, lr}
    73ee:	f000 fe8f 	bl	8110 <__gedf2>
    73f2:	2800      	cmp	r0, #0
    73f4:	dc01      	bgt.n	73fa <__aeabi_dcmpgt+0xe>
    73f6:	2000      	movs	r0, #0
    73f8:	bd10      	pop	{r4, pc}
    73fa:	2001      	movs	r0, #1
    73fc:	bd10      	pop	{r4, pc}
    73fe:	46c0      	nop			; (mov r8, r8)

00007400 <__aeabi_dcmpge>:
    7400:	b510      	push	{r4, lr}
    7402:	f000 fe85 	bl	8110 <__gedf2>
    7406:	2800      	cmp	r0, #0
    7408:	da01      	bge.n	740e <__aeabi_dcmpge+0xe>
    740a:	2000      	movs	r0, #0
    740c:	bd10      	pop	{r4, pc}
    740e:	2001      	movs	r0, #1
    7410:	bd10      	pop	{r4, pc}
    7412:	46c0      	nop			; (mov r8, r8)

00007414 <__aeabi_dadd>:
    7414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7416:	4645      	mov	r5, r8
    7418:	46de      	mov	lr, fp
    741a:	4657      	mov	r7, sl
    741c:	464e      	mov	r6, r9
    741e:	030c      	lsls	r4, r1, #12
    7420:	b5e0      	push	{r5, r6, r7, lr}
    7422:	004e      	lsls	r6, r1, #1
    7424:	0fc9      	lsrs	r1, r1, #31
    7426:	4688      	mov	r8, r1
    7428:	000d      	movs	r5, r1
    742a:	0a61      	lsrs	r1, r4, #9
    742c:	0f44      	lsrs	r4, r0, #29
    742e:	430c      	orrs	r4, r1
    7430:	00c7      	lsls	r7, r0, #3
    7432:	0319      	lsls	r1, r3, #12
    7434:	0058      	lsls	r0, r3, #1
    7436:	0fdb      	lsrs	r3, r3, #31
    7438:	469b      	mov	fp, r3
    743a:	0a4b      	lsrs	r3, r1, #9
    743c:	0f51      	lsrs	r1, r2, #29
    743e:	430b      	orrs	r3, r1
    7440:	0d76      	lsrs	r6, r6, #21
    7442:	0d40      	lsrs	r0, r0, #21
    7444:	0019      	movs	r1, r3
    7446:	00d2      	lsls	r2, r2, #3
    7448:	45d8      	cmp	r8, fp
    744a:	d100      	bne.n	744e <__aeabi_dadd+0x3a>
    744c:	e0ae      	b.n	75ac <__aeabi_dadd+0x198>
    744e:	1a35      	subs	r5, r6, r0
    7450:	2d00      	cmp	r5, #0
    7452:	dc00      	bgt.n	7456 <__aeabi_dadd+0x42>
    7454:	e0f6      	b.n	7644 <__aeabi_dadd+0x230>
    7456:	2800      	cmp	r0, #0
    7458:	d10f      	bne.n	747a <__aeabi_dadd+0x66>
    745a:	4313      	orrs	r3, r2
    745c:	d100      	bne.n	7460 <__aeabi_dadd+0x4c>
    745e:	e0db      	b.n	7618 <__aeabi_dadd+0x204>
    7460:	1e6b      	subs	r3, r5, #1
    7462:	2b00      	cmp	r3, #0
    7464:	d000      	beq.n	7468 <__aeabi_dadd+0x54>
    7466:	e137      	b.n	76d8 <__aeabi_dadd+0x2c4>
    7468:	1aba      	subs	r2, r7, r2
    746a:	4297      	cmp	r7, r2
    746c:	41bf      	sbcs	r7, r7
    746e:	1a64      	subs	r4, r4, r1
    7470:	427f      	negs	r7, r7
    7472:	1be4      	subs	r4, r4, r7
    7474:	2601      	movs	r6, #1
    7476:	0017      	movs	r7, r2
    7478:	e024      	b.n	74c4 <__aeabi_dadd+0xb0>
    747a:	4bc6      	ldr	r3, [pc, #792]	; (7794 <__aeabi_dadd+0x380>)
    747c:	429e      	cmp	r6, r3
    747e:	d04d      	beq.n	751c <__aeabi_dadd+0x108>
    7480:	2380      	movs	r3, #128	; 0x80
    7482:	041b      	lsls	r3, r3, #16
    7484:	4319      	orrs	r1, r3
    7486:	2d38      	cmp	r5, #56	; 0x38
    7488:	dd00      	ble.n	748c <__aeabi_dadd+0x78>
    748a:	e107      	b.n	769c <__aeabi_dadd+0x288>
    748c:	2d1f      	cmp	r5, #31
    748e:	dd00      	ble.n	7492 <__aeabi_dadd+0x7e>
    7490:	e138      	b.n	7704 <__aeabi_dadd+0x2f0>
    7492:	2020      	movs	r0, #32
    7494:	1b43      	subs	r3, r0, r5
    7496:	469a      	mov	sl, r3
    7498:	000b      	movs	r3, r1
    749a:	4650      	mov	r0, sl
    749c:	4083      	lsls	r3, r0
    749e:	4699      	mov	r9, r3
    74a0:	0013      	movs	r3, r2
    74a2:	4648      	mov	r0, r9
    74a4:	40eb      	lsrs	r3, r5
    74a6:	4318      	orrs	r0, r3
    74a8:	0003      	movs	r3, r0
    74aa:	4650      	mov	r0, sl
    74ac:	4082      	lsls	r2, r0
    74ae:	1e50      	subs	r0, r2, #1
    74b0:	4182      	sbcs	r2, r0
    74b2:	40e9      	lsrs	r1, r5
    74b4:	431a      	orrs	r2, r3
    74b6:	1aba      	subs	r2, r7, r2
    74b8:	1a61      	subs	r1, r4, r1
    74ba:	4297      	cmp	r7, r2
    74bc:	41a4      	sbcs	r4, r4
    74be:	0017      	movs	r7, r2
    74c0:	4264      	negs	r4, r4
    74c2:	1b0c      	subs	r4, r1, r4
    74c4:	0223      	lsls	r3, r4, #8
    74c6:	d562      	bpl.n	758e <__aeabi_dadd+0x17a>
    74c8:	0264      	lsls	r4, r4, #9
    74ca:	0a65      	lsrs	r5, r4, #9
    74cc:	2d00      	cmp	r5, #0
    74ce:	d100      	bne.n	74d2 <__aeabi_dadd+0xbe>
    74d0:	e0df      	b.n	7692 <__aeabi_dadd+0x27e>
    74d2:	0028      	movs	r0, r5
    74d4:	f001 fd04 	bl	8ee0 <__clzsi2>
    74d8:	0003      	movs	r3, r0
    74da:	3b08      	subs	r3, #8
    74dc:	2b1f      	cmp	r3, #31
    74de:	dd00      	ble.n	74e2 <__aeabi_dadd+0xce>
    74e0:	e0d2      	b.n	7688 <__aeabi_dadd+0x274>
    74e2:	2220      	movs	r2, #32
    74e4:	003c      	movs	r4, r7
    74e6:	1ad2      	subs	r2, r2, r3
    74e8:	409d      	lsls	r5, r3
    74ea:	40d4      	lsrs	r4, r2
    74ec:	409f      	lsls	r7, r3
    74ee:	4325      	orrs	r5, r4
    74f0:	429e      	cmp	r6, r3
    74f2:	dd00      	ble.n	74f6 <__aeabi_dadd+0xe2>
    74f4:	e0c4      	b.n	7680 <__aeabi_dadd+0x26c>
    74f6:	1b9e      	subs	r6, r3, r6
    74f8:	1c73      	adds	r3, r6, #1
    74fa:	2b1f      	cmp	r3, #31
    74fc:	dd00      	ble.n	7500 <__aeabi_dadd+0xec>
    74fe:	e0f1      	b.n	76e4 <__aeabi_dadd+0x2d0>
    7500:	2220      	movs	r2, #32
    7502:	0038      	movs	r0, r7
    7504:	0029      	movs	r1, r5
    7506:	1ad2      	subs	r2, r2, r3
    7508:	40d8      	lsrs	r0, r3
    750a:	4091      	lsls	r1, r2
    750c:	4097      	lsls	r7, r2
    750e:	002c      	movs	r4, r5
    7510:	4301      	orrs	r1, r0
    7512:	1e78      	subs	r0, r7, #1
    7514:	4187      	sbcs	r7, r0
    7516:	40dc      	lsrs	r4, r3
    7518:	2600      	movs	r6, #0
    751a:	430f      	orrs	r7, r1
    751c:	077b      	lsls	r3, r7, #29
    751e:	d009      	beq.n	7534 <__aeabi_dadd+0x120>
    7520:	230f      	movs	r3, #15
    7522:	403b      	ands	r3, r7
    7524:	2b04      	cmp	r3, #4
    7526:	d005      	beq.n	7534 <__aeabi_dadd+0x120>
    7528:	1d3b      	adds	r3, r7, #4
    752a:	42bb      	cmp	r3, r7
    752c:	41bf      	sbcs	r7, r7
    752e:	427f      	negs	r7, r7
    7530:	19e4      	adds	r4, r4, r7
    7532:	001f      	movs	r7, r3
    7534:	0223      	lsls	r3, r4, #8
    7536:	d52c      	bpl.n	7592 <__aeabi_dadd+0x17e>
    7538:	4b96      	ldr	r3, [pc, #600]	; (7794 <__aeabi_dadd+0x380>)
    753a:	3601      	adds	r6, #1
    753c:	429e      	cmp	r6, r3
    753e:	d100      	bne.n	7542 <__aeabi_dadd+0x12e>
    7540:	e09a      	b.n	7678 <__aeabi_dadd+0x264>
    7542:	4645      	mov	r5, r8
    7544:	4b94      	ldr	r3, [pc, #592]	; (7798 <__aeabi_dadd+0x384>)
    7546:	08ff      	lsrs	r7, r7, #3
    7548:	401c      	ands	r4, r3
    754a:	0760      	lsls	r0, r4, #29
    754c:	0576      	lsls	r6, r6, #21
    754e:	0264      	lsls	r4, r4, #9
    7550:	4307      	orrs	r7, r0
    7552:	0b24      	lsrs	r4, r4, #12
    7554:	0d76      	lsrs	r6, r6, #21
    7556:	2100      	movs	r1, #0
    7558:	0324      	lsls	r4, r4, #12
    755a:	0b23      	lsrs	r3, r4, #12
    755c:	0d0c      	lsrs	r4, r1, #20
    755e:	4a8f      	ldr	r2, [pc, #572]	; (779c <__aeabi_dadd+0x388>)
    7560:	0524      	lsls	r4, r4, #20
    7562:	431c      	orrs	r4, r3
    7564:	4014      	ands	r4, r2
    7566:	0533      	lsls	r3, r6, #20
    7568:	4323      	orrs	r3, r4
    756a:	005b      	lsls	r3, r3, #1
    756c:	07ed      	lsls	r5, r5, #31
    756e:	085b      	lsrs	r3, r3, #1
    7570:	432b      	orrs	r3, r5
    7572:	0038      	movs	r0, r7
    7574:	0019      	movs	r1, r3
    7576:	bc3c      	pop	{r2, r3, r4, r5}
    7578:	4690      	mov	r8, r2
    757a:	4699      	mov	r9, r3
    757c:	46a2      	mov	sl, r4
    757e:	46ab      	mov	fp, r5
    7580:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7582:	4664      	mov	r4, ip
    7584:	4304      	orrs	r4, r0
    7586:	d100      	bne.n	758a <__aeabi_dadd+0x176>
    7588:	e211      	b.n	79ae <__aeabi_dadd+0x59a>
    758a:	0004      	movs	r4, r0
    758c:	4667      	mov	r7, ip
    758e:	077b      	lsls	r3, r7, #29
    7590:	d1c6      	bne.n	7520 <__aeabi_dadd+0x10c>
    7592:	4645      	mov	r5, r8
    7594:	0760      	lsls	r0, r4, #29
    7596:	08ff      	lsrs	r7, r7, #3
    7598:	4307      	orrs	r7, r0
    759a:	08e4      	lsrs	r4, r4, #3
    759c:	4b7d      	ldr	r3, [pc, #500]	; (7794 <__aeabi_dadd+0x380>)
    759e:	429e      	cmp	r6, r3
    75a0:	d030      	beq.n	7604 <__aeabi_dadd+0x1f0>
    75a2:	0324      	lsls	r4, r4, #12
    75a4:	0576      	lsls	r6, r6, #21
    75a6:	0b24      	lsrs	r4, r4, #12
    75a8:	0d76      	lsrs	r6, r6, #21
    75aa:	e7d4      	b.n	7556 <__aeabi_dadd+0x142>
    75ac:	1a33      	subs	r3, r6, r0
    75ae:	469a      	mov	sl, r3
    75b0:	2b00      	cmp	r3, #0
    75b2:	dd78      	ble.n	76a6 <__aeabi_dadd+0x292>
    75b4:	2800      	cmp	r0, #0
    75b6:	d031      	beq.n	761c <__aeabi_dadd+0x208>
    75b8:	4876      	ldr	r0, [pc, #472]	; (7794 <__aeabi_dadd+0x380>)
    75ba:	4286      	cmp	r6, r0
    75bc:	d0ae      	beq.n	751c <__aeabi_dadd+0x108>
    75be:	2080      	movs	r0, #128	; 0x80
    75c0:	0400      	lsls	r0, r0, #16
    75c2:	4301      	orrs	r1, r0
    75c4:	4653      	mov	r3, sl
    75c6:	2b38      	cmp	r3, #56	; 0x38
    75c8:	dc00      	bgt.n	75cc <__aeabi_dadd+0x1b8>
    75ca:	e0e9      	b.n	77a0 <__aeabi_dadd+0x38c>
    75cc:	430a      	orrs	r2, r1
    75ce:	1e51      	subs	r1, r2, #1
    75d0:	418a      	sbcs	r2, r1
    75d2:	2100      	movs	r1, #0
    75d4:	19d2      	adds	r2, r2, r7
    75d6:	42ba      	cmp	r2, r7
    75d8:	41bf      	sbcs	r7, r7
    75da:	1909      	adds	r1, r1, r4
    75dc:	427c      	negs	r4, r7
    75de:	0017      	movs	r7, r2
    75e0:	190c      	adds	r4, r1, r4
    75e2:	0223      	lsls	r3, r4, #8
    75e4:	d5d3      	bpl.n	758e <__aeabi_dadd+0x17a>
    75e6:	4b6b      	ldr	r3, [pc, #428]	; (7794 <__aeabi_dadd+0x380>)
    75e8:	3601      	adds	r6, #1
    75ea:	429e      	cmp	r6, r3
    75ec:	d100      	bne.n	75f0 <__aeabi_dadd+0x1dc>
    75ee:	e13a      	b.n	7866 <__aeabi_dadd+0x452>
    75f0:	2001      	movs	r0, #1
    75f2:	4b69      	ldr	r3, [pc, #420]	; (7798 <__aeabi_dadd+0x384>)
    75f4:	401c      	ands	r4, r3
    75f6:	087b      	lsrs	r3, r7, #1
    75f8:	4007      	ands	r7, r0
    75fa:	431f      	orrs	r7, r3
    75fc:	07e0      	lsls	r0, r4, #31
    75fe:	4307      	orrs	r7, r0
    7600:	0864      	lsrs	r4, r4, #1
    7602:	e78b      	b.n	751c <__aeabi_dadd+0x108>
    7604:	0023      	movs	r3, r4
    7606:	433b      	orrs	r3, r7
    7608:	d100      	bne.n	760c <__aeabi_dadd+0x1f8>
    760a:	e1cb      	b.n	79a4 <__aeabi_dadd+0x590>
    760c:	2280      	movs	r2, #128	; 0x80
    760e:	0312      	lsls	r2, r2, #12
    7610:	4314      	orrs	r4, r2
    7612:	0324      	lsls	r4, r4, #12
    7614:	0b24      	lsrs	r4, r4, #12
    7616:	e79e      	b.n	7556 <__aeabi_dadd+0x142>
    7618:	002e      	movs	r6, r5
    761a:	e77f      	b.n	751c <__aeabi_dadd+0x108>
    761c:	0008      	movs	r0, r1
    761e:	4310      	orrs	r0, r2
    7620:	d100      	bne.n	7624 <__aeabi_dadd+0x210>
    7622:	e0b4      	b.n	778e <__aeabi_dadd+0x37a>
    7624:	1e58      	subs	r0, r3, #1
    7626:	2800      	cmp	r0, #0
    7628:	d000      	beq.n	762c <__aeabi_dadd+0x218>
    762a:	e0de      	b.n	77ea <__aeabi_dadd+0x3d6>
    762c:	18ba      	adds	r2, r7, r2
    762e:	42ba      	cmp	r2, r7
    7630:	419b      	sbcs	r3, r3
    7632:	1864      	adds	r4, r4, r1
    7634:	425b      	negs	r3, r3
    7636:	18e4      	adds	r4, r4, r3
    7638:	0017      	movs	r7, r2
    763a:	2601      	movs	r6, #1
    763c:	0223      	lsls	r3, r4, #8
    763e:	d5a6      	bpl.n	758e <__aeabi_dadd+0x17a>
    7640:	2602      	movs	r6, #2
    7642:	e7d5      	b.n	75f0 <__aeabi_dadd+0x1dc>
    7644:	2d00      	cmp	r5, #0
    7646:	d16e      	bne.n	7726 <__aeabi_dadd+0x312>
    7648:	1c70      	adds	r0, r6, #1
    764a:	0540      	lsls	r0, r0, #21
    764c:	0d40      	lsrs	r0, r0, #21
    764e:	2801      	cmp	r0, #1
    7650:	dc00      	bgt.n	7654 <__aeabi_dadd+0x240>
    7652:	e0f9      	b.n	7848 <__aeabi_dadd+0x434>
    7654:	1ab8      	subs	r0, r7, r2
    7656:	4684      	mov	ip, r0
    7658:	4287      	cmp	r7, r0
    765a:	4180      	sbcs	r0, r0
    765c:	1ae5      	subs	r5, r4, r3
    765e:	4240      	negs	r0, r0
    7660:	1a2d      	subs	r5, r5, r0
    7662:	0228      	lsls	r0, r5, #8
    7664:	d400      	bmi.n	7668 <__aeabi_dadd+0x254>
    7666:	e089      	b.n	777c <__aeabi_dadd+0x368>
    7668:	1bd7      	subs	r7, r2, r7
    766a:	42ba      	cmp	r2, r7
    766c:	4192      	sbcs	r2, r2
    766e:	1b1c      	subs	r4, r3, r4
    7670:	4252      	negs	r2, r2
    7672:	1aa5      	subs	r5, r4, r2
    7674:	46d8      	mov	r8, fp
    7676:	e729      	b.n	74cc <__aeabi_dadd+0xb8>
    7678:	4645      	mov	r5, r8
    767a:	2400      	movs	r4, #0
    767c:	2700      	movs	r7, #0
    767e:	e76a      	b.n	7556 <__aeabi_dadd+0x142>
    7680:	4c45      	ldr	r4, [pc, #276]	; (7798 <__aeabi_dadd+0x384>)
    7682:	1af6      	subs	r6, r6, r3
    7684:	402c      	ands	r4, r5
    7686:	e749      	b.n	751c <__aeabi_dadd+0x108>
    7688:	003d      	movs	r5, r7
    768a:	3828      	subs	r0, #40	; 0x28
    768c:	4085      	lsls	r5, r0
    768e:	2700      	movs	r7, #0
    7690:	e72e      	b.n	74f0 <__aeabi_dadd+0xdc>
    7692:	0038      	movs	r0, r7
    7694:	f001 fc24 	bl	8ee0 <__clzsi2>
    7698:	3020      	adds	r0, #32
    769a:	e71d      	b.n	74d8 <__aeabi_dadd+0xc4>
    769c:	430a      	orrs	r2, r1
    769e:	1e51      	subs	r1, r2, #1
    76a0:	418a      	sbcs	r2, r1
    76a2:	2100      	movs	r1, #0
    76a4:	e707      	b.n	74b6 <__aeabi_dadd+0xa2>
    76a6:	2b00      	cmp	r3, #0
    76a8:	d000      	beq.n	76ac <__aeabi_dadd+0x298>
    76aa:	e0f3      	b.n	7894 <__aeabi_dadd+0x480>
    76ac:	1c70      	adds	r0, r6, #1
    76ae:	0543      	lsls	r3, r0, #21
    76b0:	0d5b      	lsrs	r3, r3, #21
    76b2:	2b01      	cmp	r3, #1
    76b4:	dc00      	bgt.n	76b8 <__aeabi_dadd+0x2a4>
    76b6:	e0ad      	b.n	7814 <__aeabi_dadd+0x400>
    76b8:	4b36      	ldr	r3, [pc, #216]	; (7794 <__aeabi_dadd+0x380>)
    76ba:	4298      	cmp	r0, r3
    76bc:	d100      	bne.n	76c0 <__aeabi_dadd+0x2ac>
    76be:	e0d1      	b.n	7864 <__aeabi_dadd+0x450>
    76c0:	18ba      	adds	r2, r7, r2
    76c2:	42ba      	cmp	r2, r7
    76c4:	41bf      	sbcs	r7, r7
    76c6:	1864      	adds	r4, r4, r1
    76c8:	427f      	negs	r7, r7
    76ca:	19e4      	adds	r4, r4, r7
    76cc:	07e7      	lsls	r7, r4, #31
    76ce:	0852      	lsrs	r2, r2, #1
    76d0:	4317      	orrs	r7, r2
    76d2:	0864      	lsrs	r4, r4, #1
    76d4:	0006      	movs	r6, r0
    76d6:	e721      	b.n	751c <__aeabi_dadd+0x108>
    76d8:	482e      	ldr	r0, [pc, #184]	; (7794 <__aeabi_dadd+0x380>)
    76da:	4285      	cmp	r5, r0
    76dc:	d100      	bne.n	76e0 <__aeabi_dadd+0x2cc>
    76de:	e093      	b.n	7808 <__aeabi_dadd+0x3f4>
    76e0:	001d      	movs	r5, r3
    76e2:	e6d0      	b.n	7486 <__aeabi_dadd+0x72>
    76e4:	0029      	movs	r1, r5
    76e6:	3e1f      	subs	r6, #31
    76e8:	40f1      	lsrs	r1, r6
    76ea:	2b20      	cmp	r3, #32
    76ec:	d100      	bne.n	76f0 <__aeabi_dadd+0x2dc>
    76ee:	e08d      	b.n	780c <__aeabi_dadd+0x3f8>
    76f0:	2240      	movs	r2, #64	; 0x40
    76f2:	1ad3      	subs	r3, r2, r3
    76f4:	409d      	lsls	r5, r3
    76f6:	432f      	orrs	r7, r5
    76f8:	1e7d      	subs	r5, r7, #1
    76fa:	41af      	sbcs	r7, r5
    76fc:	2400      	movs	r4, #0
    76fe:	430f      	orrs	r7, r1
    7700:	2600      	movs	r6, #0
    7702:	e744      	b.n	758e <__aeabi_dadd+0x17a>
    7704:	002b      	movs	r3, r5
    7706:	0008      	movs	r0, r1
    7708:	3b20      	subs	r3, #32
    770a:	40d8      	lsrs	r0, r3
    770c:	0003      	movs	r3, r0
    770e:	2d20      	cmp	r5, #32
    7710:	d100      	bne.n	7714 <__aeabi_dadd+0x300>
    7712:	e07d      	b.n	7810 <__aeabi_dadd+0x3fc>
    7714:	2040      	movs	r0, #64	; 0x40
    7716:	1b45      	subs	r5, r0, r5
    7718:	40a9      	lsls	r1, r5
    771a:	430a      	orrs	r2, r1
    771c:	1e51      	subs	r1, r2, #1
    771e:	418a      	sbcs	r2, r1
    7720:	2100      	movs	r1, #0
    7722:	431a      	orrs	r2, r3
    7724:	e6c7      	b.n	74b6 <__aeabi_dadd+0xa2>
    7726:	2e00      	cmp	r6, #0
    7728:	d050      	beq.n	77cc <__aeabi_dadd+0x3b8>
    772a:	4e1a      	ldr	r6, [pc, #104]	; (7794 <__aeabi_dadd+0x380>)
    772c:	42b0      	cmp	r0, r6
    772e:	d057      	beq.n	77e0 <__aeabi_dadd+0x3cc>
    7730:	2680      	movs	r6, #128	; 0x80
    7732:	426b      	negs	r3, r5
    7734:	4699      	mov	r9, r3
    7736:	0436      	lsls	r6, r6, #16
    7738:	4334      	orrs	r4, r6
    773a:	464b      	mov	r3, r9
    773c:	2b38      	cmp	r3, #56	; 0x38
    773e:	dd00      	ble.n	7742 <__aeabi_dadd+0x32e>
    7740:	e0d6      	b.n	78f0 <__aeabi_dadd+0x4dc>
    7742:	2b1f      	cmp	r3, #31
    7744:	dd00      	ble.n	7748 <__aeabi_dadd+0x334>
    7746:	e135      	b.n	79b4 <__aeabi_dadd+0x5a0>
    7748:	2620      	movs	r6, #32
    774a:	1af5      	subs	r5, r6, r3
    774c:	0026      	movs	r6, r4
    774e:	40ae      	lsls	r6, r5
    7750:	46b2      	mov	sl, r6
    7752:	003e      	movs	r6, r7
    7754:	40de      	lsrs	r6, r3
    7756:	46ac      	mov	ip, r5
    7758:	0035      	movs	r5, r6
    775a:	4656      	mov	r6, sl
    775c:	432e      	orrs	r6, r5
    775e:	4665      	mov	r5, ip
    7760:	40af      	lsls	r7, r5
    7762:	1e7d      	subs	r5, r7, #1
    7764:	41af      	sbcs	r7, r5
    7766:	40dc      	lsrs	r4, r3
    7768:	4337      	orrs	r7, r6
    776a:	1bd7      	subs	r7, r2, r7
    776c:	42ba      	cmp	r2, r7
    776e:	4192      	sbcs	r2, r2
    7770:	1b0c      	subs	r4, r1, r4
    7772:	4252      	negs	r2, r2
    7774:	1aa4      	subs	r4, r4, r2
    7776:	0006      	movs	r6, r0
    7778:	46d8      	mov	r8, fp
    777a:	e6a3      	b.n	74c4 <__aeabi_dadd+0xb0>
    777c:	4664      	mov	r4, ip
    777e:	4667      	mov	r7, ip
    7780:	432c      	orrs	r4, r5
    7782:	d000      	beq.n	7786 <__aeabi_dadd+0x372>
    7784:	e6a2      	b.n	74cc <__aeabi_dadd+0xb8>
    7786:	2500      	movs	r5, #0
    7788:	2600      	movs	r6, #0
    778a:	2700      	movs	r7, #0
    778c:	e706      	b.n	759c <__aeabi_dadd+0x188>
    778e:	001e      	movs	r6, r3
    7790:	e6c4      	b.n	751c <__aeabi_dadd+0x108>
    7792:	46c0      	nop			; (mov r8, r8)
    7794:	000007ff 	.word	0x000007ff
    7798:	ff7fffff 	.word	0xff7fffff
    779c:	800fffff 	.word	0x800fffff
    77a0:	2b1f      	cmp	r3, #31
    77a2:	dc63      	bgt.n	786c <__aeabi_dadd+0x458>
    77a4:	2020      	movs	r0, #32
    77a6:	1ac3      	subs	r3, r0, r3
    77a8:	0008      	movs	r0, r1
    77aa:	4098      	lsls	r0, r3
    77ac:	469c      	mov	ip, r3
    77ae:	4683      	mov	fp, r0
    77b0:	4653      	mov	r3, sl
    77b2:	0010      	movs	r0, r2
    77b4:	40d8      	lsrs	r0, r3
    77b6:	0003      	movs	r3, r0
    77b8:	4658      	mov	r0, fp
    77ba:	4318      	orrs	r0, r3
    77bc:	4663      	mov	r3, ip
    77be:	409a      	lsls	r2, r3
    77c0:	1e53      	subs	r3, r2, #1
    77c2:	419a      	sbcs	r2, r3
    77c4:	4653      	mov	r3, sl
    77c6:	4302      	orrs	r2, r0
    77c8:	40d9      	lsrs	r1, r3
    77ca:	e703      	b.n	75d4 <__aeabi_dadd+0x1c0>
    77cc:	0026      	movs	r6, r4
    77ce:	433e      	orrs	r6, r7
    77d0:	d006      	beq.n	77e0 <__aeabi_dadd+0x3cc>
    77d2:	43eb      	mvns	r3, r5
    77d4:	4699      	mov	r9, r3
    77d6:	2b00      	cmp	r3, #0
    77d8:	d0c7      	beq.n	776a <__aeabi_dadd+0x356>
    77da:	4e94      	ldr	r6, [pc, #592]	; (7a2c <__aeabi_dadd+0x618>)
    77dc:	42b0      	cmp	r0, r6
    77de:	d1ac      	bne.n	773a <__aeabi_dadd+0x326>
    77e0:	000c      	movs	r4, r1
    77e2:	0017      	movs	r7, r2
    77e4:	0006      	movs	r6, r0
    77e6:	46d8      	mov	r8, fp
    77e8:	e698      	b.n	751c <__aeabi_dadd+0x108>
    77ea:	4b90      	ldr	r3, [pc, #576]	; (7a2c <__aeabi_dadd+0x618>)
    77ec:	459a      	cmp	sl, r3
    77ee:	d00b      	beq.n	7808 <__aeabi_dadd+0x3f4>
    77f0:	4682      	mov	sl, r0
    77f2:	e6e7      	b.n	75c4 <__aeabi_dadd+0x1b0>
    77f4:	2800      	cmp	r0, #0
    77f6:	d000      	beq.n	77fa <__aeabi_dadd+0x3e6>
    77f8:	e09e      	b.n	7938 <__aeabi_dadd+0x524>
    77fa:	0018      	movs	r0, r3
    77fc:	4310      	orrs	r0, r2
    77fe:	d100      	bne.n	7802 <__aeabi_dadd+0x3ee>
    7800:	e0e9      	b.n	79d6 <__aeabi_dadd+0x5c2>
    7802:	001c      	movs	r4, r3
    7804:	0017      	movs	r7, r2
    7806:	46d8      	mov	r8, fp
    7808:	4e88      	ldr	r6, [pc, #544]	; (7a2c <__aeabi_dadd+0x618>)
    780a:	e687      	b.n	751c <__aeabi_dadd+0x108>
    780c:	2500      	movs	r5, #0
    780e:	e772      	b.n	76f6 <__aeabi_dadd+0x2e2>
    7810:	2100      	movs	r1, #0
    7812:	e782      	b.n	771a <__aeabi_dadd+0x306>
    7814:	0023      	movs	r3, r4
    7816:	433b      	orrs	r3, r7
    7818:	2e00      	cmp	r6, #0
    781a:	d000      	beq.n	781e <__aeabi_dadd+0x40a>
    781c:	e0ab      	b.n	7976 <__aeabi_dadd+0x562>
    781e:	2b00      	cmp	r3, #0
    7820:	d100      	bne.n	7824 <__aeabi_dadd+0x410>
    7822:	e0e7      	b.n	79f4 <__aeabi_dadd+0x5e0>
    7824:	000b      	movs	r3, r1
    7826:	4313      	orrs	r3, r2
    7828:	d100      	bne.n	782c <__aeabi_dadd+0x418>
    782a:	e677      	b.n	751c <__aeabi_dadd+0x108>
    782c:	18ba      	adds	r2, r7, r2
    782e:	42ba      	cmp	r2, r7
    7830:	41bf      	sbcs	r7, r7
    7832:	1864      	adds	r4, r4, r1
    7834:	427f      	negs	r7, r7
    7836:	19e4      	adds	r4, r4, r7
    7838:	0223      	lsls	r3, r4, #8
    783a:	d400      	bmi.n	783e <__aeabi_dadd+0x42a>
    783c:	e0f2      	b.n	7a24 <__aeabi_dadd+0x610>
    783e:	4b7c      	ldr	r3, [pc, #496]	; (7a30 <__aeabi_dadd+0x61c>)
    7840:	0017      	movs	r7, r2
    7842:	401c      	ands	r4, r3
    7844:	0006      	movs	r6, r0
    7846:	e669      	b.n	751c <__aeabi_dadd+0x108>
    7848:	0020      	movs	r0, r4
    784a:	4338      	orrs	r0, r7
    784c:	2e00      	cmp	r6, #0
    784e:	d1d1      	bne.n	77f4 <__aeabi_dadd+0x3e0>
    7850:	2800      	cmp	r0, #0
    7852:	d15b      	bne.n	790c <__aeabi_dadd+0x4f8>
    7854:	001c      	movs	r4, r3
    7856:	4314      	orrs	r4, r2
    7858:	d100      	bne.n	785c <__aeabi_dadd+0x448>
    785a:	e0a8      	b.n	79ae <__aeabi_dadd+0x59a>
    785c:	001c      	movs	r4, r3
    785e:	0017      	movs	r7, r2
    7860:	46d8      	mov	r8, fp
    7862:	e65b      	b.n	751c <__aeabi_dadd+0x108>
    7864:	0006      	movs	r6, r0
    7866:	2400      	movs	r4, #0
    7868:	2700      	movs	r7, #0
    786a:	e697      	b.n	759c <__aeabi_dadd+0x188>
    786c:	4650      	mov	r0, sl
    786e:	000b      	movs	r3, r1
    7870:	3820      	subs	r0, #32
    7872:	40c3      	lsrs	r3, r0
    7874:	4699      	mov	r9, r3
    7876:	4653      	mov	r3, sl
    7878:	2b20      	cmp	r3, #32
    787a:	d100      	bne.n	787e <__aeabi_dadd+0x46a>
    787c:	e095      	b.n	79aa <__aeabi_dadd+0x596>
    787e:	2340      	movs	r3, #64	; 0x40
    7880:	4650      	mov	r0, sl
    7882:	1a1b      	subs	r3, r3, r0
    7884:	4099      	lsls	r1, r3
    7886:	430a      	orrs	r2, r1
    7888:	1e51      	subs	r1, r2, #1
    788a:	418a      	sbcs	r2, r1
    788c:	464b      	mov	r3, r9
    788e:	2100      	movs	r1, #0
    7890:	431a      	orrs	r2, r3
    7892:	e69f      	b.n	75d4 <__aeabi_dadd+0x1c0>
    7894:	2e00      	cmp	r6, #0
    7896:	d130      	bne.n	78fa <__aeabi_dadd+0x4e6>
    7898:	0026      	movs	r6, r4
    789a:	433e      	orrs	r6, r7
    789c:	d067      	beq.n	796e <__aeabi_dadd+0x55a>
    789e:	43db      	mvns	r3, r3
    78a0:	469a      	mov	sl, r3
    78a2:	2b00      	cmp	r3, #0
    78a4:	d01c      	beq.n	78e0 <__aeabi_dadd+0x4cc>
    78a6:	4e61      	ldr	r6, [pc, #388]	; (7a2c <__aeabi_dadd+0x618>)
    78a8:	42b0      	cmp	r0, r6
    78aa:	d060      	beq.n	796e <__aeabi_dadd+0x55a>
    78ac:	4653      	mov	r3, sl
    78ae:	2b38      	cmp	r3, #56	; 0x38
    78b0:	dd00      	ble.n	78b4 <__aeabi_dadd+0x4a0>
    78b2:	e096      	b.n	79e2 <__aeabi_dadd+0x5ce>
    78b4:	2b1f      	cmp	r3, #31
    78b6:	dd00      	ble.n	78ba <__aeabi_dadd+0x4a6>
    78b8:	e09f      	b.n	79fa <__aeabi_dadd+0x5e6>
    78ba:	2620      	movs	r6, #32
    78bc:	1af3      	subs	r3, r6, r3
    78be:	0026      	movs	r6, r4
    78c0:	409e      	lsls	r6, r3
    78c2:	469c      	mov	ip, r3
    78c4:	46b3      	mov	fp, r6
    78c6:	4653      	mov	r3, sl
    78c8:	003e      	movs	r6, r7
    78ca:	40de      	lsrs	r6, r3
    78cc:	0033      	movs	r3, r6
    78ce:	465e      	mov	r6, fp
    78d0:	431e      	orrs	r6, r3
    78d2:	4663      	mov	r3, ip
    78d4:	409f      	lsls	r7, r3
    78d6:	1e7b      	subs	r3, r7, #1
    78d8:	419f      	sbcs	r7, r3
    78da:	4653      	mov	r3, sl
    78dc:	40dc      	lsrs	r4, r3
    78de:	4337      	orrs	r7, r6
    78e0:	18bf      	adds	r7, r7, r2
    78e2:	4297      	cmp	r7, r2
    78e4:	4192      	sbcs	r2, r2
    78e6:	1864      	adds	r4, r4, r1
    78e8:	4252      	negs	r2, r2
    78ea:	18a4      	adds	r4, r4, r2
    78ec:	0006      	movs	r6, r0
    78ee:	e678      	b.n	75e2 <__aeabi_dadd+0x1ce>
    78f0:	4327      	orrs	r7, r4
    78f2:	1e7c      	subs	r4, r7, #1
    78f4:	41a7      	sbcs	r7, r4
    78f6:	2400      	movs	r4, #0
    78f8:	e737      	b.n	776a <__aeabi_dadd+0x356>
    78fa:	4e4c      	ldr	r6, [pc, #304]	; (7a2c <__aeabi_dadd+0x618>)
    78fc:	42b0      	cmp	r0, r6
    78fe:	d036      	beq.n	796e <__aeabi_dadd+0x55a>
    7900:	2680      	movs	r6, #128	; 0x80
    7902:	425b      	negs	r3, r3
    7904:	0436      	lsls	r6, r6, #16
    7906:	469a      	mov	sl, r3
    7908:	4334      	orrs	r4, r6
    790a:	e7cf      	b.n	78ac <__aeabi_dadd+0x498>
    790c:	0018      	movs	r0, r3
    790e:	4310      	orrs	r0, r2
    7910:	d100      	bne.n	7914 <__aeabi_dadd+0x500>
    7912:	e603      	b.n	751c <__aeabi_dadd+0x108>
    7914:	1ab8      	subs	r0, r7, r2
    7916:	4684      	mov	ip, r0
    7918:	4567      	cmp	r7, ip
    791a:	41ad      	sbcs	r5, r5
    791c:	1ae0      	subs	r0, r4, r3
    791e:	426d      	negs	r5, r5
    7920:	1b40      	subs	r0, r0, r5
    7922:	0205      	lsls	r5, r0, #8
    7924:	d400      	bmi.n	7928 <__aeabi_dadd+0x514>
    7926:	e62c      	b.n	7582 <__aeabi_dadd+0x16e>
    7928:	1bd7      	subs	r7, r2, r7
    792a:	42ba      	cmp	r2, r7
    792c:	4192      	sbcs	r2, r2
    792e:	1b1c      	subs	r4, r3, r4
    7930:	4252      	negs	r2, r2
    7932:	1aa4      	subs	r4, r4, r2
    7934:	46d8      	mov	r8, fp
    7936:	e5f1      	b.n	751c <__aeabi_dadd+0x108>
    7938:	0018      	movs	r0, r3
    793a:	4310      	orrs	r0, r2
    793c:	d100      	bne.n	7940 <__aeabi_dadd+0x52c>
    793e:	e763      	b.n	7808 <__aeabi_dadd+0x3f4>
    7940:	08f8      	lsrs	r0, r7, #3
    7942:	0767      	lsls	r7, r4, #29
    7944:	4307      	orrs	r7, r0
    7946:	2080      	movs	r0, #128	; 0x80
    7948:	08e4      	lsrs	r4, r4, #3
    794a:	0300      	lsls	r0, r0, #12
    794c:	4204      	tst	r4, r0
    794e:	d008      	beq.n	7962 <__aeabi_dadd+0x54e>
    7950:	08dd      	lsrs	r5, r3, #3
    7952:	4205      	tst	r5, r0
    7954:	d105      	bne.n	7962 <__aeabi_dadd+0x54e>
    7956:	08d2      	lsrs	r2, r2, #3
    7958:	0759      	lsls	r1, r3, #29
    795a:	4311      	orrs	r1, r2
    795c:	000f      	movs	r7, r1
    795e:	002c      	movs	r4, r5
    7960:	46d8      	mov	r8, fp
    7962:	0f7b      	lsrs	r3, r7, #29
    7964:	00e4      	lsls	r4, r4, #3
    7966:	431c      	orrs	r4, r3
    7968:	00ff      	lsls	r7, r7, #3
    796a:	4e30      	ldr	r6, [pc, #192]	; (7a2c <__aeabi_dadd+0x618>)
    796c:	e5d6      	b.n	751c <__aeabi_dadd+0x108>
    796e:	000c      	movs	r4, r1
    7970:	0017      	movs	r7, r2
    7972:	0006      	movs	r6, r0
    7974:	e5d2      	b.n	751c <__aeabi_dadd+0x108>
    7976:	2b00      	cmp	r3, #0
    7978:	d038      	beq.n	79ec <__aeabi_dadd+0x5d8>
    797a:	000b      	movs	r3, r1
    797c:	4313      	orrs	r3, r2
    797e:	d100      	bne.n	7982 <__aeabi_dadd+0x56e>
    7980:	e742      	b.n	7808 <__aeabi_dadd+0x3f4>
    7982:	08f8      	lsrs	r0, r7, #3
    7984:	0767      	lsls	r7, r4, #29
    7986:	4307      	orrs	r7, r0
    7988:	2080      	movs	r0, #128	; 0x80
    798a:	08e4      	lsrs	r4, r4, #3
    798c:	0300      	lsls	r0, r0, #12
    798e:	4204      	tst	r4, r0
    7990:	d0e7      	beq.n	7962 <__aeabi_dadd+0x54e>
    7992:	08cb      	lsrs	r3, r1, #3
    7994:	4203      	tst	r3, r0
    7996:	d1e4      	bne.n	7962 <__aeabi_dadd+0x54e>
    7998:	08d2      	lsrs	r2, r2, #3
    799a:	0749      	lsls	r1, r1, #29
    799c:	4311      	orrs	r1, r2
    799e:	000f      	movs	r7, r1
    79a0:	001c      	movs	r4, r3
    79a2:	e7de      	b.n	7962 <__aeabi_dadd+0x54e>
    79a4:	2700      	movs	r7, #0
    79a6:	2400      	movs	r4, #0
    79a8:	e5d5      	b.n	7556 <__aeabi_dadd+0x142>
    79aa:	2100      	movs	r1, #0
    79ac:	e76b      	b.n	7886 <__aeabi_dadd+0x472>
    79ae:	2500      	movs	r5, #0
    79b0:	2700      	movs	r7, #0
    79b2:	e5f3      	b.n	759c <__aeabi_dadd+0x188>
    79b4:	464e      	mov	r6, r9
    79b6:	0025      	movs	r5, r4
    79b8:	3e20      	subs	r6, #32
    79ba:	40f5      	lsrs	r5, r6
    79bc:	464b      	mov	r3, r9
    79be:	002e      	movs	r6, r5
    79c0:	2b20      	cmp	r3, #32
    79c2:	d02d      	beq.n	7a20 <__aeabi_dadd+0x60c>
    79c4:	2540      	movs	r5, #64	; 0x40
    79c6:	1aed      	subs	r5, r5, r3
    79c8:	40ac      	lsls	r4, r5
    79ca:	4327      	orrs	r7, r4
    79cc:	1e7c      	subs	r4, r7, #1
    79ce:	41a7      	sbcs	r7, r4
    79d0:	2400      	movs	r4, #0
    79d2:	4337      	orrs	r7, r6
    79d4:	e6c9      	b.n	776a <__aeabi_dadd+0x356>
    79d6:	2480      	movs	r4, #128	; 0x80
    79d8:	2500      	movs	r5, #0
    79da:	0324      	lsls	r4, r4, #12
    79dc:	4e13      	ldr	r6, [pc, #76]	; (7a2c <__aeabi_dadd+0x618>)
    79de:	2700      	movs	r7, #0
    79e0:	e5dc      	b.n	759c <__aeabi_dadd+0x188>
    79e2:	4327      	orrs	r7, r4
    79e4:	1e7c      	subs	r4, r7, #1
    79e6:	41a7      	sbcs	r7, r4
    79e8:	2400      	movs	r4, #0
    79ea:	e779      	b.n	78e0 <__aeabi_dadd+0x4cc>
    79ec:	000c      	movs	r4, r1
    79ee:	0017      	movs	r7, r2
    79f0:	4e0e      	ldr	r6, [pc, #56]	; (7a2c <__aeabi_dadd+0x618>)
    79f2:	e593      	b.n	751c <__aeabi_dadd+0x108>
    79f4:	000c      	movs	r4, r1
    79f6:	0017      	movs	r7, r2
    79f8:	e590      	b.n	751c <__aeabi_dadd+0x108>
    79fa:	4656      	mov	r6, sl
    79fc:	0023      	movs	r3, r4
    79fe:	3e20      	subs	r6, #32
    7a00:	40f3      	lsrs	r3, r6
    7a02:	4699      	mov	r9, r3
    7a04:	4653      	mov	r3, sl
    7a06:	2b20      	cmp	r3, #32
    7a08:	d00e      	beq.n	7a28 <__aeabi_dadd+0x614>
    7a0a:	2340      	movs	r3, #64	; 0x40
    7a0c:	4656      	mov	r6, sl
    7a0e:	1b9b      	subs	r3, r3, r6
    7a10:	409c      	lsls	r4, r3
    7a12:	4327      	orrs	r7, r4
    7a14:	1e7c      	subs	r4, r7, #1
    7a16:	41a7      	sbcs	r7, r4
    7a18:	464b      	mov	r3, r9
    7a1a:	2400      	movs	r4, #0
    7a1c:	431f      	orrs	r7, r3
    7a1e:	e75f      	b.n	78e0 <__aeabi_dadd+0x4cc>
    7a20:	2400      	movs	r4, #0
    7a22:	e7d2      	b.n	79ca <__aeabi_dadd+0x5b6>
    7a24:	0017      	movs	r7, r2
    7a26:	e5b2      	b.n	758e <__aeabi_dadd+0x17a>
    7a28:	2400      	movs	r4, #0
    7a2a:	e7f2      	b.n	7a12 <__aeabi_dadd+0x5fe>
    7a2c:	000007ff 	.word	0x000007ff
    7a30:	ff7fffff 	.word	0xff7fffff

00007a34 <__aeabi_ddiv>:
    7a34:	b5f0      	push	{r4, r5, r6, r7, lr}
    7a36:	4657      	mov	r7, sl
    7a38:	4645      	mov	r5, r8
    7a3a:	46de      	mov	lr, fp
    7a3c:	464e      	mov	r6, r9
    7a3e:	b5e0      	push	{r5, r6, r7, lr}
    7a40:	004c      	lsls	r4, r1, #1
    7a42:	030e      	lsls	r6, r1, #12
    7a44:	b087      	sub	sp, #28
    7a46:	4683      	mov	fp, r0
    7a48:	4692      	mov	sl, r2
    7a4a:	001d      	movs	r5, r3
    7a4c:	4680      	mov	r8, r0
    7a4e:	0b36      	lsrs	r6, r6, #12
    7a50:	0d64      	lsrs	r4, r4, #21
    7a52:	0fcf      	lsrs	r7, r1, #31
    7a54:	2c00      	cmp	r4, #0
    7a56:	d04f      	beq.n	7af8 <__aeabi_ddiv+0xc4>
    7a58:	4b6f      	ldr	r3, [pc, #444]	; (7c18 <__aeabi_ddiv+0x1e4>)
    7a5a:	429c      	cmp	r4, r3
    7a5c:	d035      	beq.n	7aca <__aeabi_ddiv+0x96>
    7a5e:	2380      	movs	r3, #128	; 0x80
    7a60:	0f42      	lsrs	r2, r0, #29
    7a62:	041b      	lsls	r3, r3, #16
    7a64:	00f6      	lsls	r6, r6, #3
    7a66:	4313      	orrs	r3, r2
    7a68:	4333      	orrs	r3, r6
    7a6a:	4699      	mov	r9, r3
    7a6c:	00c3      	lsls	r3, r0, #3
    7a6e:	4698      	mov	r8, r3
    7a70:	4b6a      	ldr	r3, [pc, #424]	; (7c1c <__aeabi_ddiv+0x1e8>)
    7a72:	2600      	movs	r6, #0
    7a74:	469c      	mov	ip, r3
    7a76:	2300      	movs	r3, #0
    7a78:	4464      	add	r4, ip
    7a7a:	9303      	str	r3, [sp, #12]
    7a7c:	032b      	lsls	r3, r5, #12
    7a7e:	0b1b      	lsrs	r3, r3, #12
    7a80:	469b      	mov	fp, r3
    7a82:	006b      	lsls	r3, r5, #1
    7a84:	0fed      	lsrs	r5, r5, #31
    7a86:	4650      	mov	r0, sl
    7a88:	0d5b      	lsrs	r3, r3, #21
    7a8a:	9501      	str	r5, [sp, #4]
    7a8c:	d05e      	beq.n	7b4c <__aeabi_ddiv+0x118>
    7a8e:	4a62      	ldr	r2, [pc, #392]	; (7c18 <__aeabi_ddiv+0x1e4>)
    7a90:	4293      	cmp	r3, r2
    7a92:	d053      	beq.n	7b3c <__aeabi_ddiv+0x108>
    7a94:	465a      	mov	r2, fp
    7a96:	00d1      	lsls	r1, r2, #3
    7a98:	2280      	movs	r2, #128	; 0x80
    7a9a:	0f40      	lsrs	r0, r0, #29
    7a9c:	0412      	lsls	r2, r2, #16
    7a9e:	4302      	orrs	r2, r0
    7aa0:	430a      	orrs	r2, r1
    7aa2:	4693      	mov	fp, r2
    7aa4:	4652      	mov	r2, sl
    7aa6:	00d1      	lsls	r1, r2, #3
    7aa8:	4a5c      	ldr	r2, [pc, #368]	; (7c1c <__aeabi_ddiv+0x1e8>)
    7aaa:	4694      	mov	ip, r2
    7aac:	2200      	movs	r2, #0
    7aae:	4463      	add	r3, ip
    7ab0:	0038      	movs	r0, r7
    7ab2:	4068      	eors	r0, r5
    7ab4:	4684      	mov	ip, r0
    7ab6:	9002      	str	r0, [sp, #8]
    7ab8:	1ae4      	subs	r4, r4, r3
    7aba:	4316      	orrs	r6, r2
    7abc:	2e0f      	cmp	r6, #15
    7abe:	d900      	bls.n	7ac2 <__aeabi_ddiv+0x8e>
    7ac0:	e0b4      	b.n	7c2c <__aeabi_ddiv+0x1f8>
    7ac2:	4b57      	ldr	r3, [pc, #348]	; (7c20 <__aeabi_ddiv+0x1ec>)
    7ac4:	00b6      	lsls	r6, r6, #2
    7ac6:	599b      	ldr	r3, [r3, r6]
    7ac8:	469f      	mov	pc, r3
    7aca:	0003      	movs	r3, r0
    7acc:	4333      	orrs	r3, r6
    7ace:	4699      	mov	r9, r3
    7ad0:	d16c      	bne.n	7bac <__aeabi_ddiv+0x178>
    7ad2:	2300      	movs	r3, #0
    7ad4:	4698      	mov	r8, r3
    7ad6:	3302      	adds	r3, #2
    7ad8:	2608      	movs	r6, #8
    7ada:	9303      	str	r3, [sp, #12]
    7adc:	e7ce      	b.n	7a7c <__aeabi_ddiv+0x48>
    7ade:	46cb      	mov	fp, r9
    7ae0:	4641      	mov	r1, r8
    7ae2:	9a03      	ldr	r2, [sp, #12]
    7ae4:	9701      	str	r7, [sp, #4]
    7ae6:	2a02      	cmp	r2, #2
    7ae8:	d165      	bne.n	7bb6 <__aeabi_ddiv+0x182>
    7aea:	9b01      	ldr	r3, [sp, #4]
    7aec:	4c4a      	ldr	r4, [pc, #296]	; (7c18 <__aeabi_ddiv+0x1e4>)
    7aee:	469c      	mov	ip, r3
    7af0:	2300      	movs	r3, #0
    7af2:	2200      	movs	r2, #0
    7af4:	4698      	mov	r8, r3
    7af6:	e06b      	b.n	7bd0 <__aeabi_ddiv+0x19c>
    7af8:	0003      	movs	r3, r0
    7afa:	4333      	orrs	r3, r6
    7afc:	4699      	mov	r9, r3
    7afe:	d04e      	beq.n	7b9e <__aeabi_ddiv+0x16a>
    7b00:	2e00      	cmp	r6, #0
    7b02:	d100      	bne.n	7b06 <__aeabi_ddiv+0xd2>
    7b04:	e1bc      	b.n	7e80 <__aeabi_ddiv+0x44c>
    7b06:	0030      	movs	r0, r6
    7b08:	f001 f9ea 	bl	8ee0 <__clzsi2>
    7b0c:	0003      	movs	r3, r0
    7b0e:	3b0b      	subs	r3, #11
    7b10:	2b1c      	cmp	r3, #28
    7b12:	dd00      	ble.n	7b16 <__aeabi_ddiv+0xe2>
    7b14:	e1ac      	b.n	7e70 <__aeabi_ddiv+0x43c>
    7b16:	221d      	movs	r2, #29
    7b18:	1ad3      	subs	r3, r2, r3
    7b1a:	465a      	mov	r2, fp
    7b1c:	0001      	movs	r1, r0
    7b1e:	40da      	lsrs	r2, r3
    7b20:	3908      	subs	r1, #8
    7b22:	408e      	lsls	r6, r1
    7b24:	0013      	movs	r3, r2
    7b26:	4333      	orrs	r3, r6
    7b28:	4699      	mov	r9, r3
    7b2a:	465b      	mov	r3, fp
    7b2c:	408b      	lsls	r3, r1
    7b2e:	4698      	mov	r8, r3
    7b30:	2300      	movs	r3, #0
    7b32:	4c3c      	ldr	r4, [pc, #240]	; (7c24 <__aeabi_ddiv+0x1f0>)
    7b34:	2600      	movs	r6, #0
    7b36:	1a24      	subs	r4, r4, r0
    7b38:	9303      	str	r3, [sp, #12]
    7b3a:	e79f      	b.n	7a7c <__aeabi_ddiv+0x48>
    7b3c:	4651      	mov	r1, sl
    7b3e:	465a      	mov	r2, fp
    7b40:	4311      	orrs	r1, r2
    7b42:	d129      	bne.n	7b98 <__aeabi_ddiv+0x164>
    7b44:	2200      	movs	r2, #0
    7b46:	4693      	mov	fp, r2
    7b48:	3202      	adds	r2, #2
    7b4a:	e7b1      	b.n	7ab0 <__aeabi_ddiv+0x7c>
    7b4c:	4659      	mov	r1, fp
    7b4e:	4301      	orrs	r1, r0
    7b50:	d01e      	beq.n	7b90 <__aeabi_ddiv+0x15c>
    7b52:	465b      	mov	r3, fp
    7b54:	2b00      	cmp	r3, #0
    7b56:	d100      	bne.n	7b5a <__aeabi_ddiv+0x126>
    7b58:	e19e      	b.n	7e98 <__aeabi_ddiv+0x464>
    7b5a:	4658      	mov	r0, fp
    7b5c:	f001 f9c0 	bl	8ee0 <__clzsi2>
    7b60:	0003      	movs	r3, r0
    7b62:	3b0b      	subs	r3, #11
    7b64:	2b1c      	cmp	r3, #28
    7b66:	dd00      	ble.n	7b6a <__aeabi_ddiv+0x136>
    7b68:	e18f      	b.n	7e8a <__aeabi_ddiv+0x456>
    7b6a:	0002      	movs	r2, r0
    7b6c:	4659      	mov	r1, fp
    7b6e:	3a08      	subs	r2, #8
    7b70:	4091      	lsls	r1, r2
    7b72:	468b      	mov	fp, r1
    7b74:	211d      	movs	r1, #29
    7b76:	1acb      	subs	r3, r1, r3
    7b78:	4651      	mov	r1, sl
    7b7a:	40d9      	lsrs	r1, r3
    7b7c:	000b      	movs	r3, r1
    7b7e:	4659      	mov	r1, fp
    7b80:	430b      	orrs	r3, r1
    7b82:	4651      	mov	r1, sl
    7b84:	469b      	mov	fp, r3
    7b86:	4091      	lsls	r1, r2
    7b88:	4b26      	ldr	r3, [pc, #152]	; (7c24 <__aeabi_ddiv+0x1f0>)
    7b8a:	2200      	movs	r2, #0
    7b8c:	1a1b      	subs	r3, r3, r0
    7b8e:	e78f      	b.n	7ab0 <__aeabi_ddiv+0x7c>
    7b90:	2300      	movs	r3, #0
    7b92:	2201      	movs	r2, #1
    7b94:	469b      	mov	fp, r3
    7b96:	e78b      	b.n	7ab0 <__aeabi_ddiv+0x7c>
    7b98:	4651      	mov	r1, sl
    7b9a:	2203      	movs	r2, #3
    7b9c:	e788      	b.n	7ab0 <__aeabi_ddiv+0x7c>
    7b9e:	2300      	movs	r3, #0
    7ba0:	4698      	mov	r8, r3
    7ba2:	3301      	adds	r3, #1
    7ba4:	2604      	movs	r6, #4
    7ba6:	2400      	movs	r4, #0
    7ba8:	9303      	str	r3, [sp, #12]
    7baa:	e767      	b.n	7a7c <__aeabi_ddiv+0x48>
    7bac:	2303      	movs	r3, #3
    7bae:	46b1      	mov	r9, r6
    7bb0:	9303      	str	r3, [sp, #12]
    7bb2:	260c      	movs	r6, #12
    7bb4:	e762      	b.n	7a7c <__aeabi_ddiv+0x48>
    7bb6:	2a03      	cmp	r2, #3
    7bb8:	d100      	bne.n	7bbc <__aeabi_ddiv+0x188>
    7bba:	e25c      	b.n	8076 <__aeabi_ddiv+0x642>
    7bbc:	9b01      	ldr	r3, [sp, #4]
    7bbe:	2a01      	cmp	r2, #1
    7bc0:	d000      	beq.n	7bc4 <__aeabi_ddiv+0x190>
    7bc2:	e1e4      	b.n	7f8e <__aeabi_ddiv+0x55a>
    7bc4:	4013      	ands	r3, r2
    7bc6:	469c      	mov	ip, r3
    7bc8:	2300      	movs	r3, #0
    7bca:	2400      	movs	r4, #0
    7bcc:	2200      	movs	r2, #0
    7bce:	4698      	mov	r8, r3
    7bd0:	2100      	movs	r1, #0
    7bd2:	0312      	lsls	r2, r2, #12
    7bd4:	0b13      	lsrs	r3, r2, #12
    7bd6:	0d0a      	lsrs	r2, r1, #20
    7bd8:	0512      	lsls	r2, r2, #20
    7bda:	431a      	orrs	r2, r3
    7bdc:	0523      	lsls	r3, r4, #20
    7bde:	4c12      	ldr	r4, [pc, #72]	; (7c28 <__aeabi_ddiv+0x1f4>)
    7be0:	4640      	mov	r0, r8
    7be2:	4022      	ands	r2, r4
    7be4:	4313      	orrs	r3, r2
    7be6:	4662      	mov	r2, ip
    7be8:	005b      	lsls	r3, r3, #1
    7bea:	07d2      	lsls	r2, r2, #31
    7bec:	085b      	lsrs	r3, r3, #1
    7bee:	4313      	orrs	r3, r2
    7bf0:	0019      	movs	r1, r3
    7bf2:	b007      	add	sp, #28
    7bf4:	bc3c      	pop	{r2, r3, r4, r5}
    7bf6:	4690      	mov	r8, r2
    7bf8:	4699      	mov	r9, r3
    7bfa:	46a2      	mov	sl, r4
    7bfc:	46ab      	mov	fp, r5
    7bfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7c00:	2300      	movs	r3, #0
    7c02:	2280      	movs	r2, #128	; 0x80
    7c04:	469c      	mov	ip, r3
    7c06:	0312      	lsls	r2, r2, #12
    7c08:	4698      	mov	r8, r3
    7c0a:	4c03      	ldr	r4, [pc, #12]	; (7c18 <__aeabi_ddiv+0x1e4>)
    7c0c:	e7e0      	b.n	7bd0 <__aeabi_ddiv+0x19c>
    7c0e:	2300      	movs	r3, #0
    7c10:	4c01      	ldr	r4, [pc, #4]	; (7c18 <__aeabi_ddiv+0x1e4>)
    7c12:	2200      	movs	r2, #0
    7c14:	4698      	mov	r8, r3
    7c16:	e7db      	b.n	7bd0 <__aeabi_ddiv+0x19c>
    7c18:	000007ff 	.word	0x000007ff
    7c1c:	fffffc01 	.word	0xfffffc01
    7c20:	0000ba9c 	.word	0x0000ba9c
    7c24:	fffffc0d 	.word	0xfffffc0d
    7c28:	800fffff 	.word	0x800fffff
    7c2c:	45d9      	cmp	r9, fp
    7c2e:	d900      	bls.n	7c32 <__aeabi_ddiv+0x1fe>
    7c30:	e139      	b.n	7ea6 <__aeabi_ddiv+0x472>
    7c32:	d100      	bne.n	7c36 <__aeabi_ddiv+0x202>
    7c34:	e134      	b.n	7ea0 <__aeabi_ddiv+0x46c>
    7c36:	2300      	movs	r3, #0
    7c38:	4646      	mov	r6, r8
    7c3a:	464d      	mov	r5, r9
    7c3c:	469a      	mov	sl, r3
    7c3e:	3c01      	subs	r4, #1
    7c40:	465b      	mov	r3, fp
    7c42:	0e0a      	lsrs	r2, r1, #24
    7c44:	021b      	lsls	r3, r3, #8
    7c46:	431a      	orrs	r2, r3
    7c48:	020b      	lsls	r3, r1, #8
    7c4a:	0c17      	lsrs	r7, r2, #16
    7c4c:	9303      	str	r3, [sp, #12]
    7c4e:	0413      	lsls	r3, r2, #16
    7c50:	0c1b      	lsrs	r3, r3, #16
    7c52:	0039      	movs	r1, r7
    7c54:	0028      	movs	r0, r5
    7c56:	4690      	mov	r8, r2
    7c58:	9301      	str	r3, [sp, #4]
    7c5a:	f7ff fa27 	bl	70ac <__udivsi3>
    7c5e:	0002      	movs	r2, r0
    7c60:	9b01      	ldr	r3, [sp, #4]
    7c62:	4683      	mov	fp, r0
    7c64:	435a      	muls	r2, r3
    7c66:	0028      	movs	r0, r5
    7c68:	0039      	movs	r1, r7
    7c6a:	4691      	mov	r9, r2
    7c6c:	f7ff faa4 	bl	71b8 <__aeabi_uidivmod>
    7c70:	0c35      	lsrs	r5, r6, #16
    7c72:	0409      	lsls	r1, r1, #16
    7c74:	430d      	orrs	r5, r1
    7c76:	45a9      	cmp	r9, r5
    7c78:	d90d      	bls.n	7c96 <__aeabi_ddiv+0x262>
    7c7a:	465b      	mov	r3, fp
    7c7c:	4445      	add	r5, r8
    7c7e:	3b01      	subs	r3, #1
    7c80:	45a8      	cmp	r8, r5
    7c82:	d900      	bls.n	7c86 <__aeabi_ddiv+0x252>
    7c84:	e13a      	b.n	7efc <__aeabi_ddiv+0x4c8>
    7c86:	45a9      	cmp	r9, r5
    7c88:	d800      	bhi.n	7c8c <__aeabi_ddiv+0x258>
    7c8a:	e137      	b.n	7efc <__aeabi_ddiv+0x4c8>
    7c8c:	2302      	movs	r3, #2
    7c8e:	425b      	negs	r3, r3
    7c90:	469c      	mov	ip, r3
    7c92:	4445      	add	r5, r8
    7c94:	44e3      	add	fp, ip
    7c96:	464b      	mov	r3, r9
    7c98:	1aeb      	subs	r3, r5, r3
    7c9a:	0039      	movs	r1, r7
    7c9c:	0018      	movs	r0, r3
    7c9e:	9304      	str	r3, [sp, #16]
    7ca0:	f7ff fa04 	bl	70ac <__udivsi3>
    7ca4:	9b01      	ldr	r3, [sp, #4]
    7ca6:	0005      	movs	r5, r0
    7ca8:	4343      	muls	r3, r0
    7caa:	0039      	movs	r1, r7
    7cac:	9804      	ldr	r0, [sp, #16]
    7cae:	4699      	mov	r9, r3
    7cb0:	f7ff fa82 	bl	71b8 <__aeabi_uidivmod>
    7cb4:	0433      	lsls	r3, r6, #16
    7cb6:	0409      	lsls	r1, r1, #16
    7cb8:	0c1b      	lsrs	r3, r3, #16
    7cba:	430b      	orrs	r3, r1
    7cbc:	4599      	cmp	r9, r3
    7cbe:	d909      	bls.n	7cd4 <__aeabi_ddiv+0x2a0>
    7cc0:	4443      	add	r3, r8
    7cc2:	1e6a      	subs	r2, r5, #1
    7cc4:	4598      	cmp	r8, r3
    7cc6:	d900      	bls.n	7cca <__aeabi_ddiv+0x296>
    7cc8:	e11a      	b.n	7f00 <__aeabi_ddiv+0x4cc>
    7cca:	4599      	cmp	r9, r3
    7ccc:	d800      	bhi.n	7cd0 <__aeabi_ddiv+0x29c>
    7cce:	e117      	b.n	7f00 <__aeabi_ddiv+0x4cc>
    7cd0:	3d02      	subs	r5, #2
    7cd2:	4443      	add	r3, r8
    7cd4:	464a      	mov	r2, r9
    7cd6:	1a9b      	subs	r3, r3, r2
    7cd8:	465a      	mov	r2, fp
    7cda:	0412      	lsls	r2, r2, #16
    7cdc:	432a      	orrs	r2, r5
    7cde:	9903      	ldr	r1, [sp, #12]
    7ce0:	4693      	mov	fp, r2
    7ce2:	0c10      	lsrs	r0, r2, #16
    7ce4:	0c0a      	lsrs	r2, r1, #16
    7ce6:	4691      	mov	r9, r2
    7ce8:	0409      	lsls	r1, r1, #16
    7cea:	465a      	mov	r2, fp
    7cec:	0c09      	lsrs	r1, r1, #16
    7cee:	464e      	mov	r6, r9
    7cf0:	000d      	movs	r5, r1
    7cf2:	0412      	lsls	r2, r2, #16
    7cf4:	0c12      	lsrs	r2, r2, #16
    7cf6:	4345      	muls	r5, r0
    7cf8:	9105      	str	r1, [sp, #20]
    7cfa:	4351      	muls	r1, r2
    7cfc:	4372      	muls	r2, r6
    7cfe:	4370      	muls	r0, r6
    7d00:	1952      	adds	r2, r2, r5
    7d02:	0c0e      	lsrs	r6, r1, #16
    7d04:	18b2      	adds	r2, r6, r2
    7d06:	4295      	cmp	r5, r2
    7d08:	d903      	bls.n	7d12 <__aeabi_ddiv+0x2de>
    7d0a:	2580      	movs	r5, #128	; 0x80
    7d0c:	026d      	lsls	r5, r5, #9
    7d0e:	46ac      	mov	ip, r5
    7d10:	4460      	add	r0, ip
    7d12:	0c15      	lsrs	r5, r2, #16
    7d14:	0409      	lsls	r1, r1, #16
    7d16:	0412      	lsls	r2, r2, #16
    7d18:	0c09      	lsrs	r1, r1, #16
    7d1a:	1828      	adds	r0, r5, r0
    7d1c:	1852      	adds	r2, r2, r1
    7d1e:	4283      	cmp	r3, r0
    7d20:	d200      	bcs.n	7d24 <__aeabi_ddiv+0x2f0>
    7d22:	e0ce      	b.n	7ec2 <__aeabi_ddiv+0x48e>
    7d24:	d100      	bne.n	7d28 <__aeabi_ddiv+0x2f4>
    7d26:	e0c8      	b.n	7eba <__aeabi_ddiv+0x486>
    7d28:	1a1d      	subs	r5, r3, r0
    7d2a:	4653      	mov	r3, sl
    7d2c:	1a9e      	subs	r6, r3, r2
    7d2e:	45b2      	cmp	sl, r6
    7d30:	4192      	sbcs	r2, r2
    7d32:	4252      	negs	r2, r2
    7d34:	1aab      	subs	r3, r5, r2
    7d36:	469a      	mov	sl, r3
    7d38:	4598      	cmp	r8, r3
    7d3a:	d100      	bne.n	7d3e <__aeabi_ddiv+0x30a>
    7d3c:	e117      	b.n	7f6e <__aeabi_ddiv+0x53a>
    7d3e:	0039      	movs	r1, r7
    7d40:	0018      	movs	r0, r3
    7d42:	f7ff f9b3 	bl	70ac <__udivsi3>
    7d46:	9b01      	ldr	r3, [sp, #4]
    7d48:	0005      	movs	r5, r0
    7d4a:	4343      	muls	r3, r0
    7d4c:	0039      	movs	r1, r7
    7d4e:	4650      	mov	r0, sl
    7d50:	9304      	str	r3, [sp, #16]
    7d52:	f7ff fa31 	bl	71b8 <__aeabi_uidivmod>
    7d56:	9804      	ldr	r0, [sp, #16]
    7d58:	040b      	lsls	r3, r1, #16
    7d5a:	0c31      	lsrs	r1, r6, #16
    7d5c:	4319      	orrs	r1, r3
    7d5e:	4288      	cmp	r0, r1
    7d60:	d909      	bls.n	7d76 <__aeabi_ddiv+0x342>
    7d62:	4441      	add	r1, r8
    7d64:	1e6b      	subs	r3, r5, #1
    7d66:	4588      	cmp	r8, r1
    7d68:	d900      	bls.n	7d6c <__aeabi_ddiv+0x338>
    7d6a:	e107      	b.n	7f7c <__aeabi_ddiv+0x548>
    7d6c:	4288      	cmp	r0, r1
    7d6e:	d800      	bhi.n	7d72 <__aeabi_ddiv+0x33e>
    7d70:	e104      	b.n	7f7c <__aeabi_ddiv+0x548>
    7d72:	3d02      	subs	r5, #2
    7d74:	4441      	add	r1, r8
    7d76:	9b04      	ldr	r3, [sp, #16]
    7d78:	1acb      	subs	r3, r1, r3
    7d7a:	0018      	movs	r0, r3
    7d7c:	0039      	movs	r1, r7
    7d7e:	9304      	str	r3, [sp, #16]
    7d80:	f7ff f994 	bl	70ac <__udivsi3>
    7d84:	9b01      	ldr	r3, [sp, #4]
    7d86:	4682      	mov	sl, r0
    7d88:	4343      	muls	r3, r0
    7d8a:	0039      	movs	r1, r7
    7d8c:	9804      	ldr	r0, [sp, #16]
    7d8e:	9301      	str	r3, [sp, #4]
    7d90:	f7ff fa12 	bl	71b8 <__aeabi_uidivmod>
    7d94:	9801      	ldr	r0, [sp, #4]
    7d96:	040b      	lsls	r3, r1, #16
    7d98:	0431      	lsls	r1, r6, #16
    7d9a:	0c09      	lsrs	r1, r1, #16
    7d9c:	4319      	orrs	r1, r3
    7d9e:	4288      	cmp	r0, r1
    7da0:	d90d      	bls.n	7dbe <__aeabi_ddiv+0x38a>
    7da2:	4653      	mov	r3, sl
    7da4:	4441      	add	r1, r8
    7da6:	3b01      	subs	r3, #1
    7da8:	4588      	cmp	r8, r1
    7daa:	d900      	bls.n	7dae <__aeabi_ddiv+0x37a>
    7dac:	e0e8      	b.n	7f80 <__aeabi_ddiv+0x54c>
    7dae:	4288      	cmp	r0, r1
    7db0:	d800      	bhi.n	7db4 <__aeabi_ddiv+0x380>
    7db2:	e0e5      	b.n	7f80 <__aeabi_ddiv+0x54c>
    7db4:	2302      	movs	r3, #2
    7db6:	425b      	negs	r3, r3
    7db8:	469c      	mov	ip, r3
    7dba:	4441      	add	r1, r8
    7dbc:	44e2      	add	sl, ip
    7dbe:	9b01      	ldr	r3, [sp, #4]
    7dc0:	042d      	lsls	r5, r5, #16
    7dc2:	1ace      	subs	r6, r1, r3
    7dc4:	4651      	mov	r1, sl
    7dc6:	4329      	orrs	r1, r5
    7dc8:	9d05      	ldr	r5, [sp, #20]
    7dca:	464f      	mov	r7, r9
    7dcc:	002a      	movs	r2, r5
    7dce:	040b      	lsls	r3, r1, #16
    7dd0:	0c08      	lsrs	r0, r1, #16
    7dd2:	0c1b      	lsrs	r3, r3, #16
    7dd4:	435a      	muls	r2, r3
    7dd6:	4345      	muls	r5, r0
    7dd8:	437b      	muls	r3, r7
    7dda:	4378      	muls	r0, r7
    7ddc:	195b      	adds	r3, r3, r5
    7dde:	0c17      	lsrs	r7, r2, #16
    7de0:	18fb      	adds	r3, r7, r3
    7de2:	429d      	cmp	r5, r3
    7de4:	d903      	bls.n	7dee <__aeabi_ddiv+0x3ba>
    7de6:	2580      	movs	r5, #128	; 0x80
    7de8:	026d      	lsls	r5, r5, #9
    7dea:	46ac      	mov	ip, r5
    7dec:	4460      	add	r0, ip
    7dee:	0c1d      	lsrs	r5, r3, #16
    7df0:	0412      	lsls	r2, r2, #16
    7df2:	041b      	lsls	r3, r3, #16
    7df4:	0c12      	lsrs	r2, r2, #16
    7df6:	1828      	adds	r0, r5, r0
    7df8:	189b      	adds	r3, r3, r2
    7dfa:	4286      	cmp	r6, r0
    7dfc:	d200      	bcs.n	7e00 <__aeabi_ddiv+0x3cc>
    7dfe:	e093      	b.n	7f28 <__aeabi_ddiv+0x4f4>
    7e00:	d100      	bne.n	7e04 <__aeabi_ddiv+0x3d0>
    7e02:	e08e      	b.n	7f22 <__aeabi_ddiv+0x4ee>
    7e04:	2301      	movs	r3, #1
    7e06:	4319      	orrs	r1, r3
    7e08:	4ba0      	ldr	r3, [pc, #640]	; (808c <__aeabi_ddiv+0x658>)
    7e0a:	18e3      	adds	r3, r4, r3
    7e0c:	2b00      	cmp	r3, #0
    7e0e:	dc00      	bgt.n	7e12 <__aeabi_ddiv+0x3de>
    7e10:	e099      	b.n	7f46 <__aeabi_ddiv+0x512>
    7e12:	074a      	lsls	r2, r1, #29
    7e14:	d000      	beq.n	7e18 <__aeabi_ddiv+0x3e4>
    7e16:	e09e      	b.n	7f56 <__aeabi_ddiv+0x522>
    7e18:	465a      	mov	r2, fp
    7e1a:	01d2      	lsls	r2, r2, #7
    7e1c:	d506      	bpl.n	7e2c <__aeabi_ddiv+0x3f8>
    7e1e:	465a      	mov	r2, fp
    7e20:	4b9b      	ldr	r3, [pc, #620]	; (8090 <__aeabi_ddiv+0x65c>)
    7e22:	401a      	ands	r2, r3
    7e24:	2380      	movs	r3, #128	; 0x80
    7e26:	4693      	mov	fp, r2
    7e28:	00db      	lsls	r3, r3, #3
    7e2a:	18e3      	adds	r3, r4, r3
    7e2c:	4a99      	ldr	r2, [pc, #612]	; (8094 <__aeabi_ddiv+0x660>)
    7e2e:	4293      	cmp	r3, r2
    7e30:	dd68      	ble.n	7f04 <__aeabi_ddiv+0x4d0>
    7e32:	2301      	movs	r3, #1
    7e34:	9a02      	ldr	r2, [sp, #8]
    7e36:	4c98      	ldr	r4, [pc, #608]	; (8098 <__aeabi_ddiv+0x664>)
    7e38:	401a      	ands	r2, r3
    7e3a:	2300      	movs	r3, #0
    7e3c:	4694      	mov	ip, r2
    7e3e:	4698      	mov	r8, r3
    7e40:	2200      	movs	r2, #0
    7e42:	e6c5      	b.n	7bd0 <__aeabi_ddiv+0x19c>
    7e44:	2280      	movs	r2, #128	; 0x80
    7e46:	464b      	mov	r3, r9
    7e48:	0312      	lsls	r2, r2, #12
    7e4a:	4213      	tst	r3, r2
    7e4c:	d00a      	beq.n	7e64 <__aeabi_ddiv+0x430>
    7e4e:	465b      	mov	r3, fp
    7e50:	4213      	tst	r3, r2
    7e52:	d106      	bne.n	7e62 <__aeabi_ddiv+0x42e>
    7e54:	431a      	orrs	r2, r3
    7e56:	0312      	lsls	r2, r2, #12
    7e58:	0b12      	lsrs	r2, r2, #12
    7e5a:	46ac      	mov	ip, r5
    7e5c:	4688      	mov	r8, r1
    7e5e:	4c8e      	ldr	r4, [pc, #568]	; (8098 <__aeabi_ddiv+0x664>)
    7e60:	e6b6      	b.n	7bd0 <__aeabi_ddiv+0x19c>
    7e62:	464b      	mov	r3, r9
    7e64:	431a      	orrs	r2, r3
    7e66:	0312      	lsls	r2, r2, #12
    7e68:	0b12      	lsrs	r2, r2, #12
    7e6a:	46bc      	mov	ip, r7
    7e6c:	4c8a      	ldr	r4, [pc, #552]	; (8098 <__aeabi_ddiv+0x664>)
    7e6e:	e6af      	b.n	7bd0 <__aeabi_ddiv+0x19c>
    7e70:	0003      	movs	r3, r0
    7e72:	465a      	mov	r2, fp
    7e74:	3b28      	subs	r3, #40	; 0x28
    7e76:	409a      	lsls	r2, r3
    7e78:	2300      	movs	r3, #0
    7e7a:	4691      	mov	r9, r2
    7e7c:	4698      	mov	r8, r3
    7e7e:	e657      	b.n	7b30 <__aeabi_ddiv+0xfc>
    7e80:	4658      	mov	r0, fp
    7e82:	f001 f82d 	bl	8ee0 <__clzsi2>
    7e86:	3020      	adds	r0, #32
    7e88:	e640      	b.n	7b0c <__aeabi_ddiv+0xd8>
    7e8a:	0003      	movs	r3, r0
    7e8c:	4652      	mov	r2, sl
    7e8e:	3b28      	subs	r3, #40	; 0x28
    7e90:	409a      	lsls	r2, r3
    7e92:	2100      	movs	r1, #0
    7e94:	4693      	mov	fp, r2
    7e96:	e677      	b.n	7b88 <__aeabi_ddiv+0x154>
    7e98:	f001 f822 	bl	8ee0 <__clzsi2>
    7e9c:	3020      	adds	r0, #32
    7e9e:	e65f      	b.n	7b60 <__aeabi_ddiv+0x12c>
    7ea0:	4588      	cmp	r8, r1
    7ea2:	d200      	bcs.n	7ea6 <__aeabi_ddiv+0x472>
    7ea4:	e6c7      	b.n	7c36 <__aeabi_ddiv+0x202>
    7ea6:	464b      	mov	r3, r9
    7ea8:	07de      	lsls	r6, r3, #31
    7eaa:	085d      	lsrs	r5, r3, #1
    7eac:	4643      	mov	r3, r8
    7eae:	085b      	lsrs	r3, r3, #1
    7eb0:	431e      	orrs	r6, r3
    7eb2:	4643      	mov	r3, r8
    7eb4:	07db      	lsls	r3, r3, #31
    7eb6:	469a      	mov	sl, r3
    7eb8:	e6c2      	b.n	7c40 <__aeabi_ddiv+0x20c>
    7eba:	2500      	movs	r5, #0
    7ebc:	4592      	cmp	sl, r2
    7ebe:	d300      	bcc.n	7ec2 <__aeabi_ddiv+0x48e>
    7ec0:	e733      	b.n	7d2a <__aeabi_ddiv+0x2f6>
    7ec2:	9e03      	ldr	r6, [sp, #12]
    7ec4:	4659      	mov	r1, fp
    7ec6:	46b4      	mov	ip, r6
    7ec8:	44e2      	add	sl, ip
    7eca:	45b2      	cmp	sl, r6
    7ecc:	41ad      	sbcs	r5, r5
    7ece:	426d      	negs	r5, r5
    7ed0:	4445      	add	r5, r8
    7ed2:	18eb      	adds	r3, r5, r3
    7ed4:	3901      	subs	r1, #1
    7ed6:	4598      	cmp	r8, r3
    7ed8:	d207      	bcs.n	7eea <__aeabi_ddiv+0x4b6>
    7eda:	4298      	cmp	r0, r3
    7edc:	d900      	bls.n	7ee0 <__aeabi_ddiv+0x4ac>
    7ede:	e07f      	b.n	7fe0 <__aeabi_ddiv+0x5ac>
    7ee0:	d100      	bne.n	7ee4 <__aeabi_ddiv+0x4b0>
    7ee2:	e0bc      	b.n	805e <__aeabi_ddiv+0x62a>
    7ee4:	1a1d      	subs	r5, r3, r0
    7ee6:	468b      	mov	fp, r1
    7ee8:	e71f      	b.n	7d2a <__aeabi_ddiv+0x2f6>
    7eea:	4598      	cmp	r8, r3
    7eec:	d1fa      	bne.n	7ee4 <__aeabi_ddiv+0x4b0>
    7eee:	9d03      	ldr	r5, [sp, #12]
    7ef0:	4555      	cmp	r5, sl
    7ef2:	d9f2      	bls.n	7eda <__aeabi_ddiv+0x4a6>
    7ef4:	4643      	mov	r3, r8
    7ef6:	468b      	mov	fp, r1
    7ef8:	1a1d      	subs	r5, r3, r0
    7efa:	e716      	b.n	7d2a <__aeabi_ddiv+0x2f6>
    7efc:	469b      	mov	fp, r3
    7efe:	e6ca      	b.n	7c96 <__aeabi_ddiv+0x262>
    7f00:	0015      	movs	r5, r2
    7f02:	e6e7      	b.n	7cd4 <__aeabi_ddiv+0x2a0>
    7f04:	465a      	mov	r2, fp
    7f06:	08c9      	lsrs	r1, r1, #3
    7f08:	0752      	lsls	r2, r2, #29
    7f0a:	430a      	orrs	r2, r1
    7f0c:	055b      	lsls	r3, r3, #21
    7f0e:	4690      	mov	r8, r2
    7f10:	0d5c      	lsrs	r4, r3, #21
    7f12:	465a      	mov	r2, fp
    7f14:	2301      	movs	r3, #1
    7f16:	9902      	ldr	r1, [sp, #8]
    7f18:	0252      	lsls	r2, r2, #9
    7f1a:	4019      	ands	r1, r3
    7f1c:	0b12      	lsrs	r2, r2, #12
    7f1e:	468c      	mov	ip, r1
    7f20:	e656      	b.n	7bd0 <__aeabi_ddiv+0x19c>
    7f22:	2b00      	cmp	r3, #0
    7f24:	d100      	bne.n	7f28 <__aeabi_ddiv+0x4f4>
    7f26:	e76f      	b.n	7e08 <__aeabi_ddiv+0x3d4>
    7f28:	4446      	add	r6, r8
    7f2a:	1e4a      	subs	r2, r1, #1
    7f2c:	45b0      	cmp	r8, r6
    7f2e:	d929      	bls.n	7f84 <__aeabi_ddiv+0x550>
    7f30:	0011      	movs	r1, r2
    7f32:	4286      	cmp	r6, r0
    7f34:	d000      	beq.n	7f38 <__aeabi_ddiv+0x504>
    7f36:	e765      	b.n	7e04 <__aeabi_ddiv+0x3d0>
    7f38:	9a03      	ldr	r2, [sp, #12]
    7f3a:	4293      	cmp	r3, r2
    7f3c:	d000      	beq.n	7f40 <__aeabi_ddiv+0x50c>
    7f3e:	e761      	b.n	7e04 <__aeabi_ddiv+0x3d0>
    7f40:	e762      	b.n	7e08 <__aeabi_ddiv+0x3d4>
    7f42:	2101      	movs	r1, #1
    7f44:	4249      	negs	r1, r1
    7f46:	2001      	movs	r0, #1
    7f48:	1ac2      	subs	r2, r0, r3
    7f4a:	2a38      	cmp	r2, #56	; 0x38
    7f4c:	dd21      	ble.n	7f92 <__aeabi_ddiv+0x55e>
    7f4e:	9b02      	ldr	r3, [sp, #8]
    7f50:	4003      	ands	r3, r0
    7f52:	469c      	mov	ip, r3
    7f54:	e638      	b.n	7bc8 <__aeabi_ddiv+0x194>
    7f56:	220f      	movs	r2, #15
    7f58:	400a      	ands	r2, r1
    7f5a:	2a04      	cmp	r2, #4
    7f5c:	d100      	bne.n	7f60 <__aeabi_ddiv+0x52c>
    7f5e:	e75b      	b.n	7e18 <__aeabi_ddiv+0x3e4>
    7f60:	000a      	movs	r2, r1
    7f62:	1d11      	adds	r1, r2, #4
    7f64:	4291      	cmp	r1, r2
    7f66:	4192      	sbcs	r2, r2
    7f68:	4252      	negs	r2, r2
    7f6a:	4493      	add	fp, r2
    7f6c:	e754      	b.n	7e18 <__aeabi_ddiv+0x3e4>
    7f6e:	4b47      	ldr	r3, [pc, #284]	; (808c <__aeabi_ddiv+0x658>)
    7f70:	18e3      	adds	r3, r4, r3
    7f72:	2b00      	cmp	r3, #0
    7f74:	dde5      	ble.n	7f42 <__aeabi_ddiv+0x50e>
    7f76:	2201      	movs	r2, #1
    7f78:	4252      	negs	r2, r2
    7f7a:	e7f2      	b.n	7f62 <__aeabi_ddiv+0x52e>
    7f7c:	001d      	movs	r5, r3
    7f7e:	e6fa      	b.n	7d76 <__aeabi_ddiv+0x342>
    7f80:	469a      	mov	sl, r3
    7f82:	e71c      	b.n	7dbe <__aeabi_ddiv+0x38a>
    7f84:	42b0      	cmp	r0, r6
    7f86:	d839      	bhi.n	7ffc <__aeabi_ddiv+0x5c8>
    7f88:	d06e      	beq.n	8068 <__aeabi_ddiv+0x634>
    7f8a:	0011      	movs	r1, r2
    7f8c:	e73a      	b.n	7e04 <__aeabi_ddiv+0x3d0>
    7f8e:	9302      	str	r3, [sp, #8]
    7f90:	e73a      	b.n	7e08 <__aeabi_ddiv+0x3d4>
    7f92:	2a1f      	cmp	r2, #31
    7f94:	dc3c      	bgt.n	8010 <__aeabi_ddiv+0x5dc>
    7f96:	2320      	movs	r3, #32
    7f98:	1a9b      	subs	r3, r3, r2
    7f9a:	000c      	movs	r4, r1
    7f9c:	4658      	mov	r0, fp
    7f9e:	4099      	lsls	r1, r3
    7fa0:	4098      	lsls	r0, r3
    7fa2:	1e4b      	subs	r3, r1, #1
    7fa4:	4199      	sbcs	r1, r3
    7fa6:	465b      	mov	r3, fp
    7fa8:	40d4      	lsrs	r4, r2
    7faa:	40d3      	lsrs	r3, r2
    7fac:	4320      	orrs	r0, r4
    7fae:	4308      	orrs	r0, r1
    7fb0:	001a      	movs	r2, r3
    7fb2:	0743      	lsls	r3, r0, #29
    7fb4:	d009      	beq.n	7fca <__aeabi_ddiv+0x596>
    7fb6:	230f      	movs	r3, #15
    7fb8:	4003      	ands	r3, r0
    7fba:	2b04      	cmp	r3, #4
    7fbc:	d005      	beq.n	7fca <__aeabi_ddiv+0x596>
    7fbe:	0001      	movs	r1, r0
    7fc0:	1d08      	adds	r0, r1, #4
    7fc2:	4288      	cmp	r0, r1
    7fc4:	419b      	sbcs	r3, r3
    7fc6:	425b      	negs	r3, r3
    7fc8:	18d2      	adds	r2, r2, r3
    7fca:	0213      	lsls	r3, r2, #8
    7fcc:	d53a      	bpl.n	8044 <__aeabi_ddiv+0x610>
    7fce:	2301      	movs	r3, #1
    7fd0:	9a02      	ldr	r2, [sp, #8]
    7fd2:	2401      	movs	r4, #1
    7fd4:	401a      	ands	r2, r3
    7fd6:	2300      	movs	r3, #0
    7fd8:	4694      	mov	ip, r2
    7fda:	4698      	mov	r8, r3
    7fdc:	2200      	movs	r2, #0
    7fde:	e5f7      	b.n	7bd0 <__aeabi_ddiv+0x19c>
    7fe0:	2102      	movs	r1, #2
    7fe2:	4249      	negs	r1, r1
    7fe4:	468c      	mov	ip, r1
    7fe6:	9d03      	ldr	r5, [sp, #12]
    7fe8:	44e3      	add	fp, ip
    7fea:	46ac      	mov	ip, r5
    7fec:	44e2      	add	sl, ip
    7fee:	45aa      	cmp	sl, r5
    7ff0:	41ad      	sbcs	r5, r5
    7ff2:	426d      	negs	r5, r5
    7ff4:	4445      	add	r5, r8
    7ff6:	18ed      	adds	r5, r5, r3
    7ff8:	1a2d      	subs	r5, r5, r0
    7ffa:	e696      	b.n	7d2a <__aeabi_ddiv+0x2f6>
    7ffc:	1e8a      	subs	r2, r1, #2
    7ffe:	9903      	ldr	r1, [sp, #12]
    8000:	004d      	lsls	r5, r1, #1
    8002:	428d      	cmp	r5, r1
    8004:	4189      	sbcs	r1, r1
    8006:	4249      	negs	r1, r1
    8008:	4441      	add	r1, r8
    800a:	1876      	adds	r6, r6, r1
    800c:	9503      	str	r5, [sp, #12]
    800e:	e78f      	b.n	7f30 <__aeabi_ddiv+0x4fc>
    8010:	201f      	movs	r0, #31
    8012:	4240      	negs	r0, r0
    8014:	1ac3      	subs	r3, r0, r3
    8016:	4658      	mov	r0, fp
    8018:	40d8      	lsrs	r0, r3
    801a:	0003      	movs	r3, r0
    801c:	2a20      	cmp	r2, #32
    801e:	d028      	beq.n	8072 <__aeabi_ddiv+0x63e>
    8020:	2040      	movs	r0, #64	; 0x40
    8022:	465d      	mov	r5, fp
    8024:	1a82      	subs	r2, r0, r2
    8026:	4095      	lsls	r5, r2
    8028:	4329      	orrs	r1, r5
    802a:	1e4a      	subs	r2, r1, #1
    802c:	4191      	sbcs	r1, r2
    802e:	4319      	orrs	r1, r3
    8030:	2307      	movs	r3, #7
    8032:	2200      	movs	r2, #0
    8034:	400b      	ands	r3, r1
    8036:	d009      	beq.n	804c <__aeabi_ddiv+0x618>
    8038:	230f      	movs	r3, #15
    803a:	2200      	movs	r2, #0
    803c:	400b      	ands	r3, r1
    803e:	0008      	movs	r0, r1
    8040:	2b04      	cmp	r3, #4
    8042:	d1bd      	bne.n	7fc0 <__aeabi_ddiv+0x58c>
    8044:	0001      	movs	r1, r0
    8046:	0753      	lsls	r3, r2, #29
    8048:	0252      	lsls	r2, r2, #9
    804a:	0b12      	lsrs	r2, r2, #12
    804c:	08c9      	lsrs	r1, r1, #3
    804e:	4319      	orrs	r1, r3
    8050:	2301      	movs	r3, #1
    8052:	4688      	mov	r8, r1
    8054:	9902      	ldr	r1, [sp, #8]
    8056:	2400      	movs	r4, #0
    8058:	4019      	ands	r1, r3
    805a:	468c      	mov	ip, r1
    805c:	e5b8      	b.n	7bd0 <__aeabi_ddiv+0x19c>
    805e:	4552      	cmp	r2, sl
    8060:	d8be      	bhi.n	7fe0 <__aeabi_ddiv+0x5ac>
    8062:	468b      	mov	fp, r1
    8064:	2500      	movs	r5, #0
    8066:	e660      	b.n	7d2a <__aeabi_ddiv+0x2f6>
    8068:	9d03      	ldr	r5, [sp, #12]
    806a:	429d      	cmp	r5, r3
    806c:	d3c6      	bcc.n	7ffc <__aeabi_ddiv+0x5c8>
    806e:	0011      	movs	r1, r2
    8070:	e762      	b.n	7f38 <__aeabi_ddiv+0x504>
    8072:	2500      	movs	r5, #0
    8074:	e7d8      	b.n	8028 <__aeabi_ddiv+0x5f4>
    8076:	2280      	movs	r2, #128	; 0x80
    8078:	465b      	mov	r3, fp
    807a:	0312      	lsls	r2, r2, #12
    807c:	431a      	orrs	r2, r3
    807e:	9b01      	ldr	r3, [sp, #4]
    8080:	0312      	lsls	r2, r2, #12
    8082:	0b12      	lsrs	r2, r2, #12
    8084:	469c      	mov	ip, r3
    8086:	4688      	mov	r8, r1
    8088:	4c03      	ldr	r4, [pc, #12]	; (8098 <__aeabi_ddiv+0x664>)
    808a:	e5a1      	b.n	7bd0 <__aeabi_ddiv+0x19c>
    808c:	000003ff 	.word	0x000003ff
    8090:	feffffff 	.word	0xfeffffff
    8094:	000007fe 	.word	0x000007fe
    8098:	000007ff 	.word	0x000007ff

0000809c <__eqdf2>:
    809c:	b5f0      	push	{r4, r5, r6, r7, lr}
    809e:	464f      	mov	r7, r9
    80a0:	4646      	mov	r6, r8
    80a2:	46d6      	mov	lr, sl
    80a4:	005c      	lsls	r4, r3, #1
    80a6:	b5c0      	push	{r6, r7, lr}
    80a8:	031f      	lsls	r7, r3, #12
    80aa:	0fdb      	lsrs	r3, r3, #31
    80ac:	469a      	mov	sl, r3
    80ae:	4b17      	ldr	r3, [pc, #92]	; (810c <__eqdf2+0x70>)
    80b0:	030e      	lsls	r6, r1, #12
    80b2:	004d      	lsls	r5, r1, #1
    80b4:	4684      	mov	ip, r0
    80b6:	4680      	mov	r8, r0
    80b8:	0b36      	lsrs	r6, r6, #12
    80ba:	0d6d      	lsrs	r5, r5, #21
    80bc:	0fc9      	lsrs	r1, r1, #31
    80be:	4691      	mov	r9, r2
    80c0:	0b3f      	lsrs	r7, r7, #12
    80c2:	0d64      	lsrs	r4, r4, #21
    80c4:	2001      	movs	r0, #1
    80c6:	429d      	cmp	r5, r3
    80c8:	d008      	beq.n	80dc <__eqdf2+0x40>
    80ca:	429c      	cmp	r4, r3
    80cc:	d001      	beq.n	80d2 <__eqdf2+0x36>
    80ce:	42a5      	cmp	r5, r4
    80d0:	d00b      	beq.n	80ea <__eqdf2+0x4e>
    80d2:	bc1c      	pop	{r2, r3, r4}
    80d4:	4690      	mov	r8, r2
    80d6:	4699      	mov	r9, r3
    80d8:	46a2      	mov	sl, r4
    80da:	bdf0      	pop	{r4, r5, r6, r7, pc}
    80dc:	4663      	mov	r3, ip
    80de:	4333      	orrs	r3, r6
    80e0:	d1f7      	bne.n	80d2 <__eqdf2+0x36>
    80e2:	42ac      	cmp	r4, r5
    80e4:	d1f5      	bne.n	80d2 <__eqdf2+0x36>
    80e6:	433a      	orrs	r2, r7
    80e8:	d1f3      	bne.n	80d2 <__eqdf2+0x36>
    80ea:	2001      	movs	r0, #1
    80ec:	42be      	cmp	r6, r7
    80ee:	d1f0      	bne.n	80d2 <__eqdf2+0x36>
    80f0:	45c8      	cmp	r8, r9
    80f2:	d1ee      	bne.n	80d2 <__eqdf2+0x36>
    80f4:	4551      	cmp	r1, sl
    80f6:	d007      	beq.n	8108 <__eqdf2+0x6c>
    80f8:	2d00      	cmp	r5, #0
    80fa:	d1ea      	bne.n	80d2 <__eqdf2+0x36>
    80fc:	4663      	mov	r3, ip
    80fe:	431e      	orrs	r6, r3
    8100:	0030      	movs	r0, r6
    8102:	1e46      	subs	r6, r0, #1
    8104:	41b0      	sbcs	r0, r6
    8106:	e7e4      	b.n	80d2 <__eqdf2+0x36>
    8108:	2000      	movs	r0, #0
    810a:	e7e2      	b.n	80d2 <__eqdf2+0x36>
    810c:	000007ff 	.word	0x000007ff

00008110 <__gedf2>:
    8110:	b5f0      	push	{r4, r5, r6, r7, lr}
    8112:	4645      	mov	r5, r8
    8114:	46de      	mov	lr, fp
    8116:	4657      	mov	r7, sl
    8118:	464e      	mov	r6, r9
    811a:	b5e0      	push	{r5, r6, r7, lr}
    811c:	031f      	lsls	r7, r3, #12
    811e:	0b3d      	lsrs	r5, r7, #12
    8120:	4f2c      	ldr	r7, [pc, #176]	; (81d4 <__gedf2+0xc4>)
    8122:	030e      	lsls	r6, r1, #12
    8124:	004c      	lsls	r4, r1, #1
    8126:	46ab      	mov	fp, r5
    8128:	005d      	lsls	r5, r3, #1
    812a:	4684      	mov	ip, r0
    812c:	0b36      	lsrs	r6, r6, #12
    812e:	0d64      	lsrs	r4, r4, #21
    8130:	0fc9      	lsrs	r1, r1, #31
    8132:	4690      	mov	r8, r2
    8134:	0d6d      	lsrs	r5, r5, #21
    8136:	0fdb      	lsrs	r3, r3, #31
    8138:	42bc      	cmp	r4, r7
    813a:	d02a      	beq.n	8192 <__gedf2+0x82>
    813c:	4f25      	ldr	r7, [pc, #148]	; (81d4 <__gedf2+0xc4>)
    813e:	42bd      	cmp	r5, r7
    8140:	d02d      	beq.n	819e <__gedf2+0x8e>
    8142:	2c00      	cmp	r4, #0
    8144:	d10f      	bne.n	8166 <__gedf2+0x56>
    8146:	4330      	orrs	r0, r6
    8148:	0007      	movs	r7, r0
    814a:	4681      	mov	r9, r0
    814c:	4278      	negs	r0, r7
    814e:	4178      	adcs	r0, r7
    8150:	b2c0      	uxtb	r0, r0
    8152:	2d00      	cmp	r5, #0
    8154:	d117      	bne.n	8186 <__gedf2+0x76>
    8156:	465f      	mov	r7, fp
    8158:	433a      	orrs	r2, r7
    815a:	d114      	bne.n	8186 <__gedf2+0x76>
    815c:	464b      	mov	r3, r9
    815e:	2000      	movs	r0, #0
    8160:	2b00      	cmp	r3, #0
    8162:	d00a      	beq.n	817a <__gedf2+0x6a>
    8164:	e006      	b.n	8174 <__gedf2+0x64>
    8166:	2d00      	cmp	r5, #0
    8168:	d102      	bne.n	8170 <__gedf2+0x60>
    816a:	4658      	mov	r0, fp
    816c:	4302      	orrs	r2, r0
    816e:	d001      	beq.n	8174 <__gedf2+0x64>
    8170:	4299      	cmp	r1, r3
    8172:	d018      	beq.n	81a6 <__gedf2+0x96>
    8174:	4248      	negs	r0, r1
    8176:	2101      	movs	r1, #1
    8178:	4308      	orrs	r0, r1
    817a:	bc3c      	pop	{r2, r3, r4, r5}
    817c:	4690      	mov	r8, r2
    817e:	4699      	mov	r9, r3
    8180:	46a2      	mov	sl, r4
    8182:	46ab      	mov	fp, r5
    8184:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8186:	2800      	cmp	r0, #0
    8188:	d0f2      	beq.n	8170 <__gedf2+0x60>
    818a:	2001      	movs	r0, #1
    818c:	3b01      	subs	r3, #1
    818e:	4318      	orrs	r0, r3
    8190:	e7f3      	b.n	817a <__gedf2+0x6a>
    8192:	0037      	movs	r7, r6
    8194:	4307      	orrs	r7, r0
    8196:	d0d1      	beq.n	813c <__gedf2+0x2c>
    8198:	2002      	movs	r0, #2
    819a:	4240      	negs	r0, r0
    819c:	e7ed      	b.n	817a <__gedf2+0x6a>
    819e:	465f      	mov	r7, fp
    81a0:	4317      	orrs	r7, r2
    81a2:	d0ce      	beq.n	8142 <__gedf2+0x32>
    81a4:	e7f8      	b.n	8198 <__gedf2+0x88>
    81a6:	42ac      	cmp	r4, r5
    81a8:	dce4      	bgt.n	8174 <__gedf2+0x64>
    81aa:	da03      	bge.n	81b4 <__gedf2+0xa4>
    81ac:	1e48      	subs	r0, r1, #1
    81ae:	2101      	movs	r1, #1
    81b0:	4308      	orrs	r0, r1
    81b2:	e7e2      	b.n	817a <__gedf2+0x6a>
    81b4:	455e      	cmp	r6, fp
    81b6:	d8dd      	bhi.n	8174 <__gedf2+0x64>
    81b8:	d006      	beq.n	81c8 <__gedf2+0xb8>
    81ba:	2000      	movs	r0, #0
    81bc:	455e      	cmp	r6, fp
    81be:	d2dc      	bcs.n	817a <__gedf2+0x6a>
    81c0:	2301      	movs	r3, #1
    81c2:	1e48      	subs	r0, r1, #1
    81c4:	4318      	orrs	r0, r3
    81c6:	e7d8      	b.n	817a <__gedf2+0x6a>
    81c8:	45c4      	cmp	ip, r8
    81ca:	d8d3      	bhi.n	8174 <__gedf2+0x64>
    81cc:	2000      	movs	r0, #0
    81ce:	45c4      	cmp	ip, r8
    81d0:	d3f6      	bcc.n	81c0 <__gedf2+0xb0>
    81d2:	e7d2      	b.n	817a <__gedf2+0x6a>
    81d4:	000007ff 	.word	0x000007ff

000081d8 <__ledf2>:
    81d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    81da:	464e      	mov	r6, r9
    81dc:	4645      	mov	r5, r8
    81de:	46de      	mov	lr, fp
    81e0:	4657      	mov	r7, sl
    81e2:	005c      	lsls	r4, r3, #1
    81e4:	b5e0      	push	{r5, r6, r7, lr}
    81e6:	031f      	lsls	r7, r3, #12
    81e8:	0fdb      	lsrs	r3, r3, #31
    81ea:	4699      	mov	r9, r3
    81ec:	4b2a      	ldr	r3, [pc, #168]	; (8298 <__ledf2+0xc0>)
    81ee:	030e      	lsls	r6, r1, #12
    81f0:	004d      	lsls	r5, r1, #1
    81f2:	0fc9      	lsrs	r1, r1, #31
    81f4:	4684      	mov	ip, r0
    81f6:	0b36      	lsrs	r6, r6, #12
    81f8:	0d6d      	lsrs	r5, r5, #21
    81fa:	468b      	mov	fp, r1
    81fc:	4690      	mov	r8, r2
    81fe:	0b3f      	lsrs	r7, r7, #12
    8200:	0d64      	lsrs	r4, r4, #21
    8202:	429d      	cmp	r5, r3
    8204:	d020      	beq.n	8248 <__ledf2+0x70>
    8206:	4b24      	ldr	r3, [pc, #144]	; (8298 <__ledf2+0xc0>)
    8208:	429c      	cmp	r4, r3
    820a:	d022      	beq.n	8252 <__ledf2+0x7a>
    820c:	2d00      	cmp	r5, #0
    820e:	d112      	bne.n	8236 <__ledf2+0x5e>
    8210:	4330      	orrs	r0, r6
    8212:	4243      	negs	r3, r0
    8214:	4143      	adcs	r3, r0
    8216:	b2db      	uxtb	r3, r3
    8218:	2c00      	cmp	r4, #0
    821a:	d01f      	beq.n	825c <__ledf2+0x84>
    821c:	2b00      	cmp	r3, #0
    821e:	d00c      	beq.n	823a <__ledf2+0x62>
    8220:	464b      	mov	r3, r9
    8222:	2001      	movs	r0, #1
    8224:	3b01      	subs	r3, #1
    8226:	4303      	orrs	r3, r0
    8228:	0018      	movs	r0, r3
    822a:	bc3c      	pop	{r2, r3, r4, r5}
    822c:	4690      	mov	r8, r2
    822e:	4699      	mov	r9, r3
    8230:	46a2      	mov	sl, r4
    8232:	46ab      	mov	fp, r5
    8234:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8236:	2c00      	cmp	r4, #0
    8238:	d016      	beq.n	8268 <__ledf2+0x90>
    823a:	45cb      	cmp	fp, r9
    823c:	d017      	beq.n	826e <__ledf2+0x96>
    823e:	465b      	mov	r3, fp
    8240:	4259      	negs	r1, r3
    8242:	2301      	movs	r3, #1
    8244:	430b      	orrs	r3, r1
    8246:	e7ef      	b.n	8228 <__ledf2+0x50>
    8248:	0031      	movs	r1, r6
    824a:	2302      	movs	r3, #2
    824c:	4301      	orrs	r1, r0
    824e:	d1eb      	bne.n	8228 <__ledf2+0x50>
    8250:	e7d9      	b.n	8206 <__ledf2+0x2e>
    8252:	0039      	movs	r1, r7
    8254:	2302      	movs	r3, #2
    8256:	4311      	orrs	r1, r2
    8258:	d1e6      	bne.n	8228 <__ledf2+0x50>
    825a:	e7d7      	b.n	820c <__ledf2+0x34>
    825c:	433a      	orrs	r2, r7
    825e:	d1dd      	bne.n	821c <__ledf2+0x44>
    8260:	2300      	movs	r3, #0
    8262:	2800      	cmp	r0, #0
    8264:	d0e0      	beq.n	8228 <__ledf2+0x50>
    8266:	e7ea      	b.n	823e <__ledf2+0x66>
    8268:	433a      	orrs	r2, r7
    826a:	d1e6      	bne.n	823a <__ledf2+0x62>
    826c:	e7e7      	b.n	823e <__ledf2+0x66>
    826e:	42a5      	cmp	r5, r4
    8270:	dce5      	bgt.n	823e <__ledf2+0x66>
    8272:	db05      	blt.n	8280 <__ledf2+0xa8>
    8274:	42be      	cmp	r6, r7
    8276:	d8e2      	bhi.n	823e <__ledf2+0x66>
    8278:	d007      	beq.n	828a <__ledf2+0xb2>
    827a:	2300      	movs	r3, #0
    827c:	42be      	cmp	r6, r7
    827e:	d2d3      	bcs.n	8228 <__ledf2+0x50>
    8280:	4659      	mov	r1, fp
    8282:	2301      	movs	r3, #1
    8284:	3901      	subs	r1, #1
    8286:	430b      	orrs	r3, r1
    8288:	e7ce      	b.n	8228 <__ledf2+0x50>
    828a:	45c4      	cmp	ip, r8
    828c:	d8d7      	bhi.n	823e <__ledf2+0x66>
    828e:	2300      	movs	r3, #0
    8290:	45c4      	cmp	ip, r8
    8292:	d3f5      	bcc.n	8280 <__ledf2+0xa8>
    8294:	e7c8      	b.n	8228 <__ledf2+0x50>
    8296:	46c0      	nop			; (mov r8, r8)
    8298:	000007ff 	.word	0x000007ff

0000829c <__aeabi_dmul>:
    829c:	b5f0      	push	{r4, r5, r6, r7, lr}
    829e:	4657      	mov	r7, sl
    82a0:	4645      	mov	r5, r8
    82a2:	46de      	mov	lr, fp
    82a4:	464e      	mov	r6, r9
    82a6:	b5e0      	push	{r5, r6, r7, lr}
    82a8:	030c      	lsls	r4, r1, #12
    82aa:	4698      	mov	r8, r3
    82ac:	004e      	lsls	r6, r1, #1
    82ae:	0b23      	lsrs	r3, r4, #12
    82b0:	b087      	sub	sp, #28
    82b2:	0007      	movs	r7, r0
    82b4:	4692      	mov	sl, r2
    82b6:	469b      	mov	fp, r3
    82b8:	0d76      	lsrs	r6, r6, #21
    82ba:	0fcd      	lsrs	r5, r1, #31
    82bc:	2e00      	cmp	r6, #0
    82be:	d06b      	beq.n	8398 <__aeabi_dmul+0xfc>
    82c0:	4b6d      	ldr	r3, [pc, #436]	; (8478 <__aeabi_dmul+0x1dc>)
    82c2:	429e      	cmp	r6, r3
    82c4:	d035      	beq.n	8332 <__aeabi_dmul+0x96>
    82c6:	2480      	movs	r4, #128	; 0x80
    82c8:	465b      	mov	r3, fp
    82ca:	0f42      	lsrs	r2, r0, #29
    82cc:	0424      	lsls	r4, r4, #16
    82ce:	00db      	lsls	r3, r3, #3
    82d0:	4314      	orrs	r4, r2
    82d2:	431c      	orrs	r4, r3
    82d4:	00c3      	lsls	r3, r0, #3
    82d6:	4699      	mov	r9, r3
    82d8:	4b68      	ldr	r3, [pc, #416]	; (847c <__aeabi_dmul+0x1e0>)
    82da:	46a3      	mov	fp, r4
    82dc:	469c      	mov	ip, r3
    82de:	2300      	movs	r3, #0
    82e0:	2700      	movs	r7, #0
    82e2:	4466      	add	r6, ip
    82e4:	9302      	str	r3, [sp, #8]
    82e6:	4643      	mov	r3, r8
    82e8:	031c      	lsls	r4, r3, #12
    82ea:	005a      	lsls	r2, r3, #1
    82ec:	0fdb      	lsrs	r3, r3, #31
    82ee:	4650      	mov	r0, sl
    82f0:	0b24      	lsrs	r4, r4, #12
    82f2:	0d52      	lsrs	r2, r2, #21
    82f4:	4698      	mov	r8, r3
    82f6:	d100      	bne.n	82fa <__aeabi_dmul+0x5e>
    82f8:	e076      	b.n	83e8 <__aeabi_dmul+0x14c>
    82fa:	4b5f      	ldr	r3, [pc, #380]	; (8478 <__aeabi_dmul+0x1dc>)
    82fc:	429a      	cmp	r2, r3
    82fe:	d06d      	beq.n	83dc <__aeabi_dmul+0x140>
    8300:	2380      	movs	r3, #128	; 0x80
    8302:	0f41      	lsrs	r1, r0, #29
    8304:	041b      	lsls	r3, r3, #16
    8306:	430b      	orrs	r3, r1
    8308:	495c      	ldr	r1, [pc, #368]	; (847c <__aeabi_dmul+0x1e0>)
    830a:	00e4      	lsls	r4, r4, #3
    830c:	468c      	mov	ip, r1
    830e:	431c      	orrs	r4, r3
    8310:	00c3      	lsls	r3, r0, #3
    8312:	2000      	movs	r0, #0
    8314:	4462      	add	r2, ip
    8316:	4641      	mov	r1, r8
    8318:	18b6      	adds	r6, r6, r2
    831a:	4069      	eors	r1, r5
    831c:	1c72      	adds	r2, r6, #1
    831e:	9101      	str	r1, [sp, #4]
    8320:	4694      	mov	ip, r2
    8322:	4307      	orrs	r7, r0
    8324:	2f0f      	cmp	r7, #15
    8326:	d900      	bls.n	832a <__aeabi_dmul+0x8e>
    8328:	e0b0      	b.n	848c <__aeabi_dmul+0x1f0>
    832a:	4a55      	ldr	r2, [pc, #340]	; (8480 <__aeabi_dmul+0x1e4>)
    832c:	00bf      	lsls	r7, r7, #2
    832e:	59d2      	ldr	r2, [r2, r7]
    8330:	4697      	mov	pc, r2
    8332:	465b      	mov	r3, fp
    8334:	4303      	orrs	r3, r0
    8336:	4699      	mov	r9, r3
    8338:	d000      	beq.n	833c <__aeabi_dmul+0xa0>
    833a:	e087      	b.n	844c <__aeabi_dmul+0x1b0>
    833c:	2300      	movs	r3, #0
    833e:	469b      	mov	fp, r3
    8340:	3302      	adds	r3, #2
    8342:	2708      	movs	r7, #8
    8344:	9302      	str	r3, [sp, #8]
    8346:	e7ce      	b.n	82e6 <__aeabi_dmul+0x4a>
    8348:	4642      	mov	r2, r8
    834a:	9201      	str	r2, [sp, #4]
    834c:	2802      	cmp	r0, #2
    834e:	d067      	beq.n	8420 <__aeabi_dmul+0x184>
    8350:	2803      	cmp	r0, #3
    8352:	d100      	bne.n	8356 <__aeabi_dmul+0xba>
    8354:	e20e      	b.n	8774 <__aeabi_dmul+0x4d8>
    8356:	2801      	cmp	r0, #1
    8358:	d000      	beq.n	835c <__aeabi_dmul+0xc0>
    835a:	e162      	b.n	8622 <__aeabi_dmul+0x386>
    835c:	2300      	movs	r3, #0
    835e:	2400      	movs	r4, #0
    8360:	2200      	movs	r2, #0
    8362:	4699      	mov	r9, r3
    8364:	9901      	ldr	r1, [sp, #4]
    8366:	4001      	ands	r1, r0
    8368:	b2cd      	uxtb	r5, r1
    836a:	2100      	movs	r1, #0
    836c:	0312      	lsls	r2, r2, #12
    836e:	0d0b      	lsrs	r3, r1, #20
    8370:	0b12      	lsrs	r2, r2, #12
    8372:	051b      	lsls	r3, r3, #20
    8374:	4313      	orrs	r3, r2
    8376:	4a43      	ldr	r2, [pc, #268]	; (8484 <__aeabi_dmul+0x1e8>)
    8378:	0524      	lsls	r4, r4, #20
    837a:	4013      	ands	r3, r2
    837c:	431c      	orrs	r4, r3
    837e:	0064      	lsls	r4, r4, #1
    8380:	07ed      	lsls	r5, r5, #31
    8382:	0864      	lsrs	r4, r4, #1
    8384:	432c      	orrs	r4, r5
    8386:	4648      	mov	r0, r9
    8388:	0021      	movs	r1, r4
    838a:	b007      	add	sp, #28
    838c:	bc3c      	pop	{r2, r3, r4, r5}
    838e:	4690      	mov	r8, r2
    8390:	4699      	mov	r9, r3
    8392:	46a2      	mov	sl, r4
    8394:	46ab      	mov	fp, r5
    8396:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8398:	4303      	orrs	r3, r0
    839a:	4699      	mov	r9, r3
    839c:	d04f      	beq.n	843e <__aeabi_dmul+0x1a2>
    839e:	465b      	mov	r3, fp
    83a0:	2b00      	cmp	r3, #0
    83a2:	d100      	bne.n	83a6 <__aeabi_dmul+0x10a>
    83a4:	e189      	b.n	86ba <__aeabi_dmul+0x41e>
    83a6:	4658      	mov	r0, fp
    83a8:	f000 fd9a 	bl	8ee0 <__clzsi2>
    83ac:	0003      	movs	r3, r0
    83ae:	3b0b      	subs	r3, #11
    83b0:	2b1c      	cmp	r3, #28
    83b2:	dd00      	ble.n	83b6 <__aeabi_dmul+0x11a>
    83b4:	e17a      	b.n	86ac <__aeabi_dmul+0x410>
    83b6:	221d      	movs	r2, #29
    83b8:	1ad3      	subs	r3, r2, r3
    83ba:	003a      	movs	r2, r7
    83bc:	0001      	movs	r1, r0
    83be:	465c      	mov	r4, fp
    83c0:	40da      	lsrs	r2, r3
    83c2:	3908      	subs	r1, #8
    83c4:	408c      	lsls	r4, r1
    83c6:	0013      	movs	r3, r2
    83c8:	408f      	lsls	r7, r1
    83ca:	4323      	orrs	r3, r4
    83cc:	469b      	mov	fp, r3
    83ce:	46b9      	mov	r9, r7
    83d0:	2300      	movs	r3, #0
    83d2:	4e2d      	ldr	r6, [pc, #180]	; (8488 <__aeabi_dmul+0x1ec>)
    83d4:	2700      	movs	r7, #0
    83d6:	1a36      	subs	r6, r6, r0
    83d8:	9302      	str	r3, [sp, #8]
    83da:	e784      	b.n	82e6 <__aeabi_dmul+0x4a>
    83dc:	4653      	mov	r3, sl
    83de:	4323      	orrs	r3, r4
    83e0:	d12a      	bne.n	8438 <__aeabi_dmul+0x19c>
    83e2:	2400      	movs	r4, #0
    83e4:	2002      	movs	r0, #2
    83e6:	e796      	b.n	8316 <__aeabi_dmul+0x7a>
    83e8:	4653      	mov	r3, sl
    83ea:	4323      	orrs	r3, r4
    83ec:	d020      	beq.n	8430 <__aeabi_dmul+0x194>
    83ee:	2c00      	cmp	r4, #0
    83f0:	d100      	bne.n	83f4 <__aeabi_dmul+0x158>
    83f2:	e157      	b.n	86a4 <__aeabi_dmul+0x408>
    83f4:	0020      	movs	r0, r4
    83f6:	f000 fd73 	bl	8ee0 <__clzsi2>
    83fa:	0003      	movs	r3, r0
    83fc:	3b0b      	subs	r3, #11
    83fe:	2b1c      	cmp	r3, #28
    8400:	dd00      	ble.n	8404 <__aeabi_dmul+0x168>
    8402:	e149      	b.n	8698 <__aeabi_dmul+0x3fc>
    8404:	211d      	movs	r1, #29
    8406:	1acb      	subs	r3, r1, r3
    8408:	4651      	mov	r1, sl
    840a:	0002      	movs	r2, r0
    840c:	40d9      	lsrs	r1, r3
    840e:	4653      	mov	r3, sl
    8410:	3a08      	subs	r2, #8
    8412:	4094      	lsls	r4, r2
    8414:	4093      	lsls	r3, r2
    8416:	430c      	orrs	r4, r1
    8418:	4a1b      	ldr	r2, [pc, #108]	; (8488 <__aeabi_dmul+0x1ec>)
    841a:	1a12      	subs	r2, r2, r0
    841c:	2000      	movs	r0, #0
    841e:	e77a      	b.n	8316 <__aeabi_dmul+0x7a>
    8420:	2501      	movs	r5, #1
    8422:	9b01      	ldr	r3, [sp, #4]
    8424:	4c14      	ldr	r4, [pc, #80]	; (8478 <__aeabi_dmul+0x1dc>)
    8426:	401d      	ands	r5, r3
    8428:	2300      	movs	r3, #0
    842a:	2200      	movs	r2, #0
    842c:	4699      	mov	r9, r3
    842e:	e79c      	b.n	836a <__aeabi_dmul+0xce>
    8430:	2400      	movs	r4, #0
    8432:	2200      	movs	r2, #0
    8434:	2001      	movs	r0, #1
    8436:	e76e      	b.n	8316 <__aeabi_dmul+0x7a>
    8438:	4653      	mov	r3, sl
    843a:	2003      	movs	r0, #3
    843c:	e76b      	b.n	8316 <__aeabi_dmul+0x7a>
    843e:	2300      	movs	r3, #0
    8440:	469b      	mov	fp, r3
    8442:	3301      	adds	r3, #1
    8444:	2704      	movs	r7, #4
    8446:	2600      	movs	r6, #0
    8448:	9302      	str	r3, [sp, #8]
    844a:	e74c      	b.n	82e6 <__aeabi_dmul+0x4a>
    844c:	2303      	movs	r3, #3
    844e:	4681      	mov	r9, r0
    8450:	270c      	movs	r7, #12
    8452:	9302      	str	r3, [sp, #8]
    8454:	e747      	b.n	82e6 <__aeabi_dmul+0x4a>
    8456:	2280      	movs	r2, #128	; 0x80
    8458:	2300      	movs	r3, #0
    845a:	2500      	movs	r5, #0
    845c:	0312      	lsls	r2, r2, #12
    845e:	4699      	mov	r9, r3
    8460:	4c05      	ldr	r4, [pc, #20]	; (8478 <__aeabi_dmul+0x1dc>)
    8462:	e782      	b.n	836a <__aeabi_dmul+0xce>
    8464:	465c      	mov	r4, fp
    8466:	464b      	mov	r3, r9
    8468:	9802      	ldr	r0, [sp, #8]
    846a:	e76f      	b.n	834c <__aeabi_dmul+0xb0>
    846c:	465c      	mov	r4, fp
    846e:	464b      	mov	r3, r9
    8470:	9501      	str	r5, [sp, #4]
    8472:	9802      	ldr	r0, [sp, #8]
    8474:	e76a      	b.n	834c <__aeabi_dmul+0xb0>
    8476:	46c0      	nop			; (mov r8, r8)
    8478:	000007ff 	.word	0x000007ff
    847c:	fffffc01 	.word	0xfffffc01
    8480:	0000badc 	.word	0x0000badc
    8484:	800fffff 	.word	0x800fffff
    8488:	fffffc0d 	.word	0xfffffc0d
    848c:	464a      	mov	r2, r9
    848e:	4649      	mov	r1, r9
    8490:	0c17      	lsrs	r7, r2, #16
    8492:	0c1a      	lsrs	r2, r3, #16
    8494:	041b      	lsls	r3, r3, #16
    8496:	0c1b      	lsrs	r3, r3, #16
    8498:	0408      	lsls	r0, r1, #16
    849a:	0019      	movs	r1, r3
    849c:	0c00      	lsrs	r0, r0, #16
    849e:	4341      	muls	r1, r0
    84a0:	0015      	movs	r5, r2
    84a2:	4688      	mov	r8, r1
    84a4:	0019      	movs	r1, r3
    84a6:	437d      	muls	r5, r7
    84a8:	4379      	muls	r1, r7
    84aa:	9503      	str	r5, [sp, #12]
    84ac:	4689      	mov	r9, r1
    84ae:	0029      	movs	r1, r5
    84b0:	0015      	movs	r5, r2
    84b2:	4345      	muls	r5, r0
    84b4:	444d      	add	r5, r9
    84b6:	9502      	str	r5, [sp, #8]
    84b8:	4645      	mov	r5, r8
    84ba:	0c2d      	lsrs	r5, r5, #16
    84bc:	46aa      	mov	sl, r5
    84be:	9d02      	ldr	r5, [sp, #8]
    84c0:	4455      	add	r5, sl
    84c2:	45a9      	cmp	r9, r5
    84c4:	d906      	bls.n	84d4 <__aeabi_dmul+0x238>
    84c6:	468a      	mov	sl, r1
    84c8:	2180      	movs	r1, #128	; 0x80
    84ca:	0249      	lsls	r1, r1, #9
    84cc:	4689      	mov	r9, r1
    84ce:	44ca      	add	sl, r9
    84d0:	4651      	mov	r1, sl
    84d2:	9103      	str	r1, [sp, #12]
    84d4:	0c29      	lsrs	r1, r5, #16
    84d6:	9104      	str	r1, [sp, #16]
    84d8:	4641      	mov	r1, r8
    84da:	0409      	lsls	r1, r1, #16
    84dc:	042d      	lsls	r5, r5, #16
    84de:	0c09      	lsrs	r1, r1, #16
    84e0:	4688      	mov	r8, r1
    84e2:	0029      	movs	r1, r5
    84e4:	0c25      	lsrs	r5, r4, #16
    84e6:	0424      	lsls	r4, r4, #16
    84e8:	4441      	add	r1, r8
    84ea:	0c24      	lsrs	r4, r4, #16
    84ec:	9105      	str	r1, [sp, #20]
    84ee:	0021      	movs	r1, r4
    84f0:	4341      	muls	r1, r0
    84f2:	4688      	mov	r8, r1
    84f4:	0021      	movs	r1, r4
    84f6:	4379      	muls	r1, r7
    84f8:	468a      	mov	sl, r1
    84fa:	4368      	muls	r0, r5
    84fc:	4641      	mov	r1, r8
    84fe:	4450      	add	r0, sl
    8500:	4681      	mov	r9, r0
    8502:	0c08      	lsrs	r0, r1, #16
    8504:	4448      	add	r0, r9
    8506:	436f      	muls	r7, r5
    8508:	4582      	cmp	sl, r0
    850a:	d903      	bls.n	8514 <__aeabi_dmul+0x278>
    850c:	2180      	movs	r1, #128	; 0x80
    850e:	0249      	lsls	r1, r1, #9
    8510:	4689      	mov	r9, r1
    8512:	444f      	add	r7, r9
    8514:	0c01      	lsrs	r1, r0, #16
    8516:	4689      	mov	r9, r1
    8518:	0039      	movs	r1, r7
    851a:	4449      	add	r1, r9
    851c:	9102      	str	r1, [sp, #8]
    851e:	4641      	mov	r1, r8
    8520:	040f      	lsls	r7, r1, #16
    8522:	9904      	ldr	r1, [sp, #16]
    8524:	0c3f      	lsrs	r7, r7, #16
    8526:	4688      	mov	r8, r1
    8528:	0400      	lsls	r0, r0, #16
    852a:	19c0      	adds	r0, r0, r7
    852c:	4480      	add	r8, r0
    852e:	4641      	mov	r1, r8
    8530:	9104      	str	r1, [sp, #16]
    8532:	4659      	mov	r1, fp
    8534:	0c0f      	lsrs	r7, r1, #16
    8536:	0409      	lsls	r1, r1, #16
    8538:	0c09      	lsrs	r1, r1, #16
    853a:	4688      	mov	r8, r1
    853c:	4359      	muls	r1, r3
    853e:	468a      	mov	sl, r1
    8540:	0039      	movs	r1, r7
    8542:	4351      	muls	r1, r2
    8544:	4689      	mov	r9, r1
    8546:	4641      	mov	r1, r8
    8548:	434a      	muls	r2, r1
    854a:	4651      	mov	r1, sl
    854c:	0c09      	lsrs	r1, r1, #16
    854e:	468b      	mov	fp, r1
    8550:	437b      	muls	r3, r7
    8552:	18d2      	adds	r2, r2, r3
    8554:	445a      	add	r2, fp
    8556:	4293      	cmp	r3, r2
    8558:	d903      	bls.n	8562 <__aeabi_dmul+0x2c6>
    855a:	2380      	movs	r3, #128	; 0x80
    855c:	025b      	lsls	r3, r3, #9
    855e:	469b      	mov	fp, r3
    8560:	44d9      	add	r9, fp
    8562:	4651      	mov	r1, sl
    8564:	0409      	lsls	r1, r1, #16
    8566:	0c09      	lsrs	r1, r1, #16
    8568:	468a      	mov	sl, r1
    856a:	4641      	mov	r1, r8
    856c:	4361      	muls	r1, r4
    856e:	437c      	muls	r4, r7
    8570:	0c13      	lsrs	r3, r2, #16
    8572:	0412      	lsls	r2, r2, #16
    8574:	444b      	add	r3, r9
    8576:	4452      	add	r2, sl
    8578:	46a1      	mov	r9, r4
    857a:	468a      	mov	sl, r1
    857c:	003c      	movs	r4, r7
    857e:	4641      	mov	r1, r8
    8580:	436c      	muls	r4, r5
    8582:	434d      	muls	r5, r1
    8584:	4651      	mov	r1, sl
    8586:	444d      	add	r5, r9
    8588:	0c0f      	lsrs	r7, r1, #16
    858a:	197d      	adds	r5, r7, r5
    858c:	45a9      	cmp	r9, r5
    858e:	d903      	bls.n	8598 <__aeabi_dmul+0x2fc>
    8590:	2180      	movs	r1, #128	; 0x80
    8592:	0249      	lsls	r1, r1, #9
    8594:	4688      	mov	r8, r1
    8596:	4444      	add	r4, r8
    8598:	9f04      	ldr	r7, [sp, #16]
    859a:	9903      	ldr	r1, [sp, #12]
    859c:	46b8      	mov	r8, r7
    859e:	4441      	add	r1, r8
    85a0:	468b      	mov	fp, r1
    85a2:	4583      	cmp	fp, r0
    85a4:	4180      	sbcs	r0, r0
    85a6:	4241      	negs	r1, r0
    85a8:	4688      	mov	r8, r1
    85aa:	4651      	mov	r1, sl
    85ac:	0408      	lsls	r0, r1, #16
    85ae:	042f      	lsls	r7, r5, #16
    85b0:	0c00      	lsrs	r0, r0, #16
    85b2:	183f      	adds	r7, r7, r0
    85b4:	4658      	mov	r0, fp
    85b6:	9902      	ldr	r1, [sp, #8]
    85b8:	1810      	adds	r0, r2, r0
    85ba:	4689      	mov	r9, r1
    85bc:	4290      	cmp	r0, r2
    85be:	4192      	sbcs	r2, r2
    85c0:	444f      	add	r7, r9
    85c2:	46ba      	mov	sl, r7
    85c4:	4252      	negs	r2, r2
    85c6:	4699      	mov	r9, r3
    85c8:	4693      	mov	fp, r2
    85ca:	44c2      	add	sl, r8
    85cc:	44d1      	add	r9, sl
    85ce:	44cb      	add	fp, r9
    85d0:	428f      	cmp	r7, r1
    85d2:	41bf      	sbcs	r7, r7
    85d4:	45c2      	cmp	sl, r8
    85d6:	4189      	sbcs	r1, r1
    85d8:	4599      	cmp	r9, r3
    85da:	419b      	sbcs	r3, r3
    85dc:	4593      	cmp	fp, r2
    85de:	4192      	sbcs	r2, r2
    85e0:	427f      	negs	r7, r7
    85e2:	4249      	negs	r1, r1
    85e4:	0c2d      	lsrs	r5, r5, #16
    85e6:	4252      	negs	r2, r2
    85e8:	430f      	orrs	r7, r1
    85ea:	425b      	negs	r3, r3
    85ec:	4313      	orrs	r3, r2
    85ee:	197f      	adds	r7, r7, r5
    85f0:	18ff      	adds	r7, r7, r3
    85f2:	465b      	mov	r3, fp
    85f4:	193c      	adds	r4, r7, r4
    85f6:	0ddb      	lsrs	r3, r3, #23
    85f8:	9a05      	ldr	r2, [sp, #20]
    85fa:	0264      	lsls	r4, r4, #9
    85fc:	431c      	orrs	r4, r3
    85fe:	0243      	lsls	r3, r0, #9
    8600:	4313      	orrs	r3, r2
    8602:	1e5d      	subs	r5, r3, #1
    8604:	41ab      	sbcs	r3, r5
    8606:	465a      	mov	r2, fp
    8608:	0dc0      	lsrs	r0, r0, #23
    860a:	4303      	orrs	r3, r0
    860c:	0252      	lsls	r2, r2, #9
    860e:	4313      	orrs	r3, r2
    8610:	01e2      	lsls	r2, r4, #7
    8612:	d556      	bpl.n	86c2 <__aeabi_dmul+0x426>
    8614:	2001      	movs	r0, #1
    8616:	085a      	lsrs	r2, r3, #1
    8618:	4003      	ands	r3, r0
    861a:	4313      	orrs	r3, r2
    861c:	07e2      	lsls	r2, r4, #31
    861e:	4313      	orrs	r3, r2
    8620:	0864      	lsrs	r4, r4, #1
    8622:	485a      	ldr	r0, [pc, #360]	; (878c <__aeabi_dmul+0x4f0>)
    8624:	4460      	add	r0, ip
    8626:	2800      	cmp	r0, #0
    8628:	dd4d      	ble.n	86c6 <__aeabi_dmul+0x42a>
    862a:	075a      	lsls	r2, r3, #29
    862c:	d009      	beq.n	8642 <__aeabi_dmul+0x3a6>
    862e:	220f      	movs	r2, #15
    8630:	401a      	ands	r2, r3
    8632:	2a04      	cmp	r2, #4
    8634:	d005      	beq.n	8642 <__aeabi_dmul+0x3a6>
    8636:	1d1a      	adds	r2, r3, #4
    8638:	429a      	cmp	r2, r3
    863a:	419b      	sbcs	r3, r3
    863c:	425b      	negs	r3, r3
    863e:	18e4      	adds	r4, r4, r3
    8640:	0013      	movs	r3, r2
    8642:	01e2      	lsls	r2, r4, #7
    8644:	d504      	bpl.n	8650 <__aeabi_dmul+0x3b4>
    8646:	2080      	movs	r0, #128	; 0x80
    8648:	4a51      	ldr	r2, [pc, #324]	; (8790 <__aeabi_dmul+0x4f4>)
    864a:	00c0      	lsls	r0, r0, #3
    864c:	4014      	ands	r4, r2
    864e:	4460      	add	r0, ip
    8650:	4a50      	ldr	r2, [pc, #320]	; (8794 <__aeabi_dmul+0x4f8>)
    8652:	4290      	cmp	r0, r2
    8654:	dd00      	ble.n	8658 <__aeabi_dmul+0x3bc>
    8656:	e6e3      	b.n	8420 <__aeabi_dmul+0x184>
    8658:	2501      	movs	r5, #1
    865a:	08db      	lsrs	r3, r3, #3
    865c:	0762      	lsls	r2, r4, #29
    865e:	431a      	orrs	r2, r3
    8660:	0264      	lsls	r4, r4, #9
    8662:	9b01      	ldr	r3, [sp, #4]
    8664:	4691      	mov	r9, r2
    8666:	0b22      	lsrs	r2, r4, #12
    8668:	0544      	lsls	r4, r0, #21
    866a:	0d64      	lsrs	r4, r4, #21
    866c:	401d      	ands	r5, r3
    866e:	e67c      	b.n	836a <__aeabi_dmul+0xce>
    8670:	2280      	movs	r2, #128	; 0x80
    8672:	4659      	mov	r1, fp
    8674:	0312      	lsls	r2, r2, #12
    8676:	4211      	tst	r1, r2
    8678:	d008      	beq.n	868c <__aeabi_dmul+0x3f0>
    867a:	4214      	tst	r4, r2
    867c:	d106      	bne.n	868c <__aeabi_dmul+0x3f0>
    867e:	4322      	orrs	r2, r4
    8680:	0312      	lsls	r2, r2, #12
    8682:	0b12      	lsrs	r2, r2, #12
    8684:	4645      	mov	r5, r8
    8686:	4699      	mov	r9, r3
    8688:	4c43      	ldr	r4, [pc, #268]	; (8798 <__aeabi_dmul+0x4fc>)
    868a:	e66e      	b.n	836a <__aeabi_dmul+0xce>
    868c:	465b      	mov	r3, fp
    868e:	431a      	orrs	r2, r3
    8690:	0312      	lsls	r2, r2, #12
    8692:	0b12      	lsrs	r2, r2, #12
    8694:	4c40      	ldr	r4, [pc, #256]	; (8798 <__aeabi_dmul+0x4fc>)
    8696:	e668      	b.n	836a <__aeabi_dmul+0xce>
    8698:	0003      	movs	r3, r0
    869a:	4654      	mov	r4, sl
    869c:	3b28      	subs	r3, #40	; 0x28
    869e:	409c      	lsls	r4, r3
    86a0:	2300      	movs	r3, #0
    86a2:	e6b9      	b.n	8418 <__aeabi_dmul+0x17c>
    86a4:	f000 fc1c 	bl	8ee0 <__clzsi2>
    86a8:	3020      	adds	r0, #32
    86aa:	e6a6      	b.n	83fa <__aeabi_dmul+0x15e>
    86ac:	0003      	movs	r3, r0
    86ae:	3b28      	subs	r3, #40	; 0x28
    86b0:	409f      	lsls	r7, r3
    86b2:	2300      	movs	r3, #0
    86b4:	46bb      	mov	fp, r7
    86b6:	4699      	mov	r9, r3
    86b8:	e68a      	b.n	83d0 <__aeabi_dmul+0x134>
    86ba:	f000 fc11 	bl	8ee0 <__clzsi2>
    86be:	3020      	adds	r0, #32
    86c0:	e674      	b.n	83ac <__aeabi_dmul+0x110>
    86c2:	46b4      	mov	ip, r6
    86c4:	e7ad      	b.n	8622 <__aeabi_dmul+0x386>
    86c6:	2501      	movs	r5, #1
    86c8:	1a2a      	subs	r2, r5, r0
    86ca:	2a38      	cmp	r2, #56	; 0x38
    86cc:	dd06      	ble.n	86dc <__aeabi_dmul+0x440>
    86ce:	9b01      	ldr	r3, [sp, #4]
    86d0:	2400      	movs	r4, #0
    86d2:	401d      	ands	r5, r3
    86d4:	2300      	movs	r3, #0
    86d6:	2200      	movs	r2, #0
    86d8:	4699      	mov	r9, r3
    86da:	e646      	b.n	836a <__aeabi_dmul+0xce>
    86dc:	2a1f      	cmp	r2, #31
    86de:	dc21      	bgt.n	8724 <__aeabi_dmul+0x488>
    86e0:	2520      	movs	r5, #32
    86e2:	0020      	movs	r0, r4
    86e4:	1aad      	subs	r5, r5, r2
    86e6:	001e      	movs	r6, r3
    86e8:	40ab      	lsls	r3, r5
    86ea:	40a8      	lsls	r0, r5
    86ec:	40d6      	lsrs	r6, r2
    86ee:	1e5d      	subs	r5, r3, #1
    86f0:	41ab      	sbcs	r3, r5
    86f2:	4330      	orrs	r0, r6
    86f4:	4318      	orrs	r0, r3
    86f6:	40d4      	lsrs	r4, r2
    86f8:	0743      	lsls	r3, r0, #29
    86fa:	d009      	beq.n	8710 <__aeabi_dmul+0x474>
    86fc:	230f      	movs	r3, #15
    86fe:	4003      	ands	r3, r0
    8700:	2b04      	cmp	r3, #4
    8702:	d005      	beq.n	8710 <__aeabi_dmul+0x474>
    8704:	0003      	movs	r3, r0
    8706:	1d18      	adds	r0, r3, #4
    8708:	4298      	cmp	r0, r3
    870a:	419b      	sbcs	r3, r3
    870c:	425b      	negs	r3, r3
    870e:	18e4      	adds	r4, r4, r3
    8710:	0223      	lsls	r3, r4, #8
    8712:	d521      	bpl.n	8758 <__aeabi_dmul+0x4bc>
    8714:	2501      	movs	r5, #1
    8716:	9b01      	ldr	r3, [sp, #4]
    8718:	2401      	movs	r4, #1
    871a:	401d      	ands	r5, r3
    871c:	2300      	movs	r3, #0
    871e:	2200      	movs	r2, #0
    8720:	4699      	mov	r9, r3
    8722:	e622      	b.n	836a <__aeabi_dmul+0xce>
    8724:	251f      	movs	r5, #31
    8726:	0021      	movs	r1, r4
    8728:	426d      	negs	r5, r5
    872a:	1a28      	subs	r0, r5, r0
    872c:	40c1      	lsrs	r1, r0
    872e:	0008      	movs	r0, r1
    8730:	2a20      	cmp	r2, #32
    8732:	d01d      	beq.n	8770 <__aeabi_dmul+0x4d4>
    8734:	355f      	adds	r5, #95	; 0x5f
    8736:	1aaa      	subs	r2, r5, r2
    8738:	4094      	lsls	r4, r2
    873a:	4323      	orrs	r3, r4
    873c:	1e5c      	subs	r4, r3, #1
    873e:	41a3      	sbcs	r3, r4
    8740:	2507      	movs	r5, #7
    8742:	4303      	orrs	r3, r0
    8744:	401d      	ands	r5, r3
    8746:	2200      	movs	r2, #0
    8748:	2d00      	cmp	r5, #0
    874a:	d009      	beq.n	8760 <__aeabi_dmul+0x4c4>
    874c:	220f      	movs	r2, #15
    874e:	2400      	movs	r4, #0
    8750:	401a      	ands	r2, r3
    8752:	0018      	movs	r0, r3
    8754:	2a04      	cmp	r2, #4
    8756:	d1d6      	bne.n	8706 <__aeabi_dmul+0x46a>
    8758:	0003      	movs	r3, r0
    875a:	0765      	lsls	r5, r4, #29
    875c:	0264      	lsls	r4, r4, #9
    875e:	0b22      	lsrs	r2, r4, #12
    8760:	08db      	lsrs	r3, r3, #3
    8762:	432b      	orrs	r3, r5
    8764:	2501      	movs	r5, #1
    8766:	4699      	mov	r9, r3
    8768:	9b01      	ldr	r3, [sp, #4]
    876a:	2400      	movs	r4, #0
    876c:	401d      	ands	r5, r3
    876e:	e5fc      	b.n	836a <__aeabi_dmul+0xce>
    8770:	2400      	movs	r4, #0
    8772:	e7e2      	b.n	873a <__aeabi_dmul+0x49e>
    8774:	2280      	movs	r2, #128	; 0x80
    8776:	2501      	movs	r5, #1
    8778:	0312      	lsls	r2, r2, #12
    877a:	4322      	orrs	r2, r4
    877c:	9901      	ldr	r1, [sp, #4]
    877e:	0312      	lsls	r2, r2, #12
    8780:	0b12      	lsrs	r2, r2, #12
    8782:	400d      	ands	r5, r1
    8784:	4699      	mov	r9, r3
    8786:	4c04      	ldr	r4, [pc, #16]	; (8798 <__aeabi_dmul+0x4fc>)
    8788:	e5ef      	b.n	836a <__aeabi_dmul+0xce>
    878a:	46c0      	nop			; (mov r8, r8)
    878c:	000003ff 	.word	0x000003ff
    8790:	feffffff 	.word	0xfeffffff
    8794:	000007fe 	.word	0x000007fe
    8798:	000007ff 	.word	0x000007ff

0000879c <__aeabi_dsub>:
    879c:	b5f0      	push	{r4, r5, r6, r7, lr}
    879e:	4646      	mov	r6, r8
    87a0:	46d6      	mov	lr, sl
    87a2:	464f      	mov	r7, r9
    87a4:	030c      	lsls	r4, r1, #12
    87a6:	b5c0      	push	{r6, r7, lr}
    87a8:	0fcd      	lsrs	r5, r1, #31
    87aa:	004e      	lsls	r6, r1, #1
    87ac:	0a61      	lsrs	r1, r4, #9
    87ae:	0f44      	lsrs	r4, r0, #29
    87b0:	430c      	orrs	r4, r1
    87b2:	00c1      	lsls	r1, r0, #3
    87b4:	0058      	lsls	r0, r3, #1
    87b6:	0d40      	lsrs	r0, r0, #21
    87b8:	4684      	mov	ip, r0
    87ba:	468a      	mov	sl, r1
    87bc:	000f      	movs	r7, r1
    87be:	0319      	lsls	r1, r3, #12
    87c0:	0f50      	lsrs	r0, r2, #29
    87c2:	0a49      	lsrs	r1, r1, #9
    87c4:	4301      	orrs	r1, r0
    87c6:	48c6      	ldr	r0, [pc, #792]	; (8ae0 <__aeabi_dsub+0x344>)
    87c8:	0d76      	lsrs	r6, r6, #21
    87ca:	46a8      	mov	r8, r5
    87cc:	0fdb      	lsrs	r3, r3, #31
    87ce:	00d2      	lsls	r2, r2, #3
    87d0:	4584      	cmp	ip, r0
    87d2:	d100      	bne.n	87d6 <__aeabi_dsub+0x3a>
    87d4:	e0d8      	b.n	8988 <__aeabi_dsub+0x1ec>
    87d6:	2001      	movs	r0, #1
    87d8:	4043      	eors	r3, r0
    87da:	42ab      	cmp	r3, r5
    87dc:	d100      	bne.n	87e0 <__aeabi_dsub+0x44>
    87de:	e0a6      	b.n	892e <__aeabi_dsub+0x192>
    87e0:	4660      	mov	r0, ip
    87e2:	1a35      	subs	r5, r6, r0
    87e4:	2d00      	cmp	r5, #0
    87e6:	dc00      	bgt.n	87ea <__aeabi_dsub+0x4e>
    87e8:	e105      	b.n	89f6 <__aeabi_dsub+0x25a>
    87ea:	2800      	cmp	r0, #0
    87ec:	d110      	bne.n	8810 <__aeabi_dsub+0x74>
    87ee:	000b      	movs	r3, r1
    87f0:	4313      	orrs	r3, r2
    87f2:	d100      	bne.n	87f6 <__aeabi_dsub+0x5a>
    87f4:	e0d7      	b.n	89a6 <__aeabi_dsub+0x20a>
    87f6:	1e6b      	subs	r3, r5, #1
    87f8:	2b00      	cmp	r3, #0
    87fa:	d000      	beq.n	87fe <__aeabi_dsub+0x62>
    87fc:	e14b      	b.n	8a96 <__aeabi_dsub+0x2fa>
    87fe:	4653      	mov	r3, sl
    8800:	1a9f      	subs	r7, r3, r2
    8802:	45ba      	cmp	sl, r7
    8804:	4180      	sbcs	r0, r0
    8806:	1a64      	subs	r4, r4, r1
    8808:	4240      	negs	r0, r0
    880a:	1a24      	subs	r4, r4, r0
    880c:	2601      	movs	r6, #1
    880e:	e01e      	b.n	884e <__aeabi_dsub+0xb2>
    8810:	4bb3      	ldr	r3, [pc, #716]	; (8ae0 <__aeabi_dsub+0x344>)
    8812:	429e      	cmp	r6, r3
    8814:	d048      	beq.n	88a8 <__aeabi_dsub+0x10c>
    8816:	2380      	movs	r3, #128	; 0x80
    8818:	041b      	lsls	r3, r3, #16
    881a:	4319      	orrs	r1, r3
    881c:	2d38      	cmp	r5, #56	; 0x38
    881e:	dd00      	ble.n	8822 <__aeabi_dsub+0x86>
    8820:	e119      	b.n	8a56 <__aeabi_dsub+0x2ba>
    8822:	2d1f      	cmp	r5, #31
    8824:	dd00      	ble.n	8828 <__aeabi_dsub+0x8c>
    8826:	e14c      	b.n	8ac2 <__aeabi_dsub+0x326>
    8828:	2320      	movs	r3, #32
    882a:	000f      	movs	r7, r1
    882c:	1b5b      	subs	r3, r3, r5
    882e:	0010      	movs	r0, r2
    8830:	409a      	lsls	r2, r3
    8832:	409f      	lsls	r7, r3
    8834:	40e8      	lsrs	r0, r5
    8836:	1e53      	subs	r3, r2, #1
    8838:	419a      	sbcs	r2, r3
    883a:	40e9      	lsrs	r1, r5
    883c:	4307      	orrs	r7, r0
    883e:	4317      	orrs	r7, r2
    8840:	4653      	mov	r3, sl
    8842:	1bdf      	subs	r7, r3, r7
    8844:	1a61      	subs	r1, r4, r1
    8846:	45ba      	cmp	sl, r7
    8848:	41a4      	sbcs	r4, r4
    884a:	4264      	negs	r4, r4
    884c:	1b0c      	subs	r4, r1, r4
    884e:	0223      	lsls	r3, r4, #8
    8850:	d400      	bmi.n	8854 <__aeabi_dsub+0xb8>
    8852:	e0c5      	b.n	89e0 <__aeabi_dsub+0x244>
    8854:	0264      	lsls	r4, r4, #9
    8856:	0a65      	lsrs	r5, r4, #9
    8858:	2d00      	cmp	r5, #0
    885a:	d100      	bne.n	885e <__aeabi_dsub+0xc2>
    885c:	e0f6      	b.n	8a4c <__aeabi_dsub+0x2b0>
    885e:	0028      	movs	r0, r5
    8860:	f000 fb3e 	bl	8ee0 <__clzsi2>
    8864:	0003      	movs	r3, r0
    8866:	3b08      	subs	r3, #8
    8868:	2b1f      	cmp	r3, #31
    886a:	dd00      	ble.n	886e <__aeabi_dsub+0xd2>
    886c:	e0e9      	b.n	8a42 <__aeabi_dsub+0x2a6>
    886e:	2220      	movs	r2, #32
    8870:	003c      	movs	r4, r7
    8872:	1ad2      	subs	r2, r2, r3
    8874:	409d      	lsls	r5, r3
    8876:	40d4      	lsrs	r4, r2
    8878:	409f      	lsls	r7, r3
    887a:	4325      	orrs	r5, r4
    887c:	429e      	cmp	r6, r3
    887e:	dd00      	ble.n	8882 <__aeabi_dsub+0xe6>
    8880:	e0db      	b.n	8a3a <__aeabi_dsub+0x29e>
    8882:	1b9e      	subs	r6, r3, r6
    8884:	1c73      	adds	r3, r6, #1
    8886:	2b1f      	cmp	r3, #31
    8888:	dd00      	ble.n	888c <__aeabi_dsub+0xf0>
    888a:	e10a      	b.n	8aa2 <__aeabi_dsub+0x306>
    888c:	2220      	movs	r2, #32
    888e:	0038      	movs	r0, r7
    8890:	1ad2      	subs	r2, r2, r3
    8892:	0029      	movs	r1, r5
    8894:	4097      	lsls	r7, r2
    8896:	002c      	movs	r4, r5
    8898:	4091      	lsls	r1, r2
    889a:	40d8      	lsrs	r0, r3
    889c:	1e7a      	subs	r2, r7, #1
    889e:	4197      	sbcs	r7, r2
    88a0:	40dc      	lsrs	r4, r3
    88a2:	2600      	movs	r6, #0
    88a4:	4301      	orrs	r1, r0
    88a6:	430f      	orrs	r7, r1
    88a8:	077b      	lsls	r3, r7, #29
    88aa:	d009      	beq.n	88c0 <__aeabi_dsub+0x124>
    88ac:	230f      	movs	r3, #15
    88ae:	403b      	ands	r3, r7
    88b0:	2b04      	cmp	r3, #4
    88b2:	d005      	beq.n	88c0 <__aeabi_dsub+0x124>
    88b4:	1d3b      	adds	r3, r7, #4
    88b6:	42bb      	cmp	r3, r7
    88b8:	41bf      	sbcs	r7, r7
    88ba:	427f      	negs	r7, r7
    88bc:	19e4      	adds	r4, r4, r7
    88be:	001f      	movs	r7, r3
    88c0:	0223      	lsls	r3, r4, #8
    88c2:	d525      	bpl.n	8910 <__aeabi_dsub+0x174>
    88c4:	4b86      	ldr	r3, [pc, #536]	; (8ae0 <__aeabi_dsub+0x344>)
    88c6:	3601      	adds	r6, #1
    88c8:	429e      	cmp	r6, r3
    88ca:	d100      	bne.n	88ce <__aeabi_dsub+0x132>
    88cc:	e0af      	b.n	8a2e <__aeabi_dsub+0x292>
    88ce:	4b85      	ldr	r3, [pc, #532]	; (8ae4 <__aeabi_dsub+0x348>)
    88d0:	2501      	movs	r5, #1
    88d2:	401c      	ands	r4, r3
    88d4:	4643      	mov	r3, r8
    88d6:	0762      	lsls	r2, r4, #29
    88d8:	08ff      	lsrs	r7, r7, #3
    88da:	0264      	lsls	r4, r4, #9
    88dc:	0576      	lsls	r6, r6, #21
    88de:	4317      	orrs	r7, r2
    88e0:	0b24      	lsrs	r4, r4, #12
    88e2:	0d76      	lsrs	r6, r6, #21
    88e4:	401d      	ands	r5, r3
    88e6:	2100      	movs	r1, #0
    88e8:	0324      	lsls	r4, r4, #12
    88ea:	0b23      	lsrs	r3, r4, #12
    88ec:	0d0c      	lsrs	r4, r1, #20
    88ee:	4a7e      	ldr	r2, [pc, #504]	; (8ae8 <__aeabi_dsub+0x34c>)
    88f0:	0524      	lsls	r4, r4, #20
    88f2:	431c      	orrs	r4, r3
    88f4:	4014      	ands	r4, r2
    88f6:	0533      	lsls	r3, r6, #20
    88f8:	4323      	orrs	r3, r4
    88fa:	005b      	lsls	r3, r3, #1
    88fc:	07ed      	lsls	r5, r5, #31
    88fe:	085b      	lsrs	r3, r3, #1
    8900:	432b      	orrs	r3, r5
    8902:	0038      	movs	r0, r7
    8904:	0019      	movs	r1, r3
    8906:	bc1c      	pop	{r2, r3, r4}
    8908:	4690      	mov	r8, r2
    890a:	4699      	mov	r9, r3
    890c:	46a2      	mov	sl, r4
    890e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8910:	2501      	movs	r5, #1
    8912:	4643      	mov	r3, r8
    8914:	0762      	lsls	r2, r4, #29
    8916:	08ff      	lsrs	r7, r7, #3
    8918:	4317      	orrs	r7, r2
    891a:	08e4      	lsrs	r4, r4, #3
    891c:	401d      	ands	r5, r3
    891e:	4b70      	ldr	r3, [pc, #448]	; (8ae0 <__aeabi_dsub+0x344>)
    8920:	429e      	cmp	r6, r3
    8922:	d036      	beq.n	8992 <__aeabi_dsub+0x1f6>
    8924:	0324      	lsls	r4, r4, #12
    8926:	0576      	lsls	r6, r6, #21
    8928:	0b24      	lsrs	r4, r4, #12
    892a:	0d76      	lsrs	r6, r6, #21
    892c:	e7db      	b.n	88e6 <__aeabi_dsub+0x14a>
    892e:	4663      	mov	r3, ip
    8930:	1af3      	subs	r3, r6, r3
    8932:	2b00      	cmp	r3, #0
    8934:	dc00      	bgt.n	8938 <__aeabi_dsub+0x19c>
    8936:	e094      	b.n	8a62 <__aeabi_dsub+0x2c6>
    8938:	4660      	mov	r0, ip
    893a:	2800      	cmp	r0, #0
    893c:	d035      	beq.n	89aa <__aeabi_dsub+0x20e>
    893e:	4868      	ldr	r0, [pc, #416]	; (8ae0 <__aeabi_dsub+0x344>)
    8940:	4286      	cmp	r6, r0
    8942:	d0b1      	beq.n	88a8 <__aeabi_dsub+0x10c>
    8944:	2780      	movs	r7, #128	; 0x80
    8946:	043f      	lsls	r7, r7, #16
    8948:	4339      	orrs	r1, r7
    894a:	2b38      	cmp	r3, #56	; 0x38
    894c:	dc00      	bgt.n	8950 <__aeabi_dsub+0x1b4>
    894e:	e0fd      	b.n	8b4c <__aeabi_dsub+0x3b0>
    8950:	430a      	orrs	r2, r1
    8952:	0017      	movs	r7, r2
    8954:	2100      	movs	r1, #0
    8956:	1e7a      	subs	r2, r7, #1
    8958:	4197      	sbcs	r7, r2
    895a:	4457      	add	r7, sl
    895c:	4557      	cmp	r7, sl
    895e:	4180      	sbcs	r0, r0
    8960:	1909      	adds	r1, r1, r4
    8962:	4244      	negs	r4, r0
    8964:	190c      	adds	r4, r1, r4
    8966:	0223      	lsls	r3, r4, #8
    8968:	d53a      	bpl.n	89e0 <__aeabi_dsub+0x244>
    896a:	4b5d      	ldr	r3, [pc, #372]	; (8ae0 <__aeabi_dsub+0x344>)
    896c:	3601      	adds	r6, #1
    896e:	429e      	cmp	r6, r3
    8970:	d100      	bne.n	8974 <__aeabi_dsub+0x1d8>
    8972:	e14b      	b.n	8c0c <__aeabi_dsub+0x470>
    8974:	2201      	movs	r2, #1
    8976:	4b5b      	ldr	r3, [pc, #364]	; (8ae4 <__aeabi_dsub+0x348>)
    8978:	401c      	ands	r4, r3
    897a:	087b      	lsrs	r3, r7, #1
    897c:	4017      	ands	r7, r2
    897e:	431f      	orrs	r7, r3
    8980:	07e2      	lsls	r2, r4, #31
    8982:	4317      	orrs	r7, r2
    8984:	0864      	lsrs	r4, r4, #1
    8986:	e78f      	b.n	88a8 <__aeabi_dsub+0x10c>
    8988:	0008      	movs	r0, r1
    898a:	4310      	orrs	r0, r2
    898c:	d000      	beq.n	8990 <__aeabi_dsub+0x1f4>
    898e:	e724      	b.n	87da <__aeabi_dsub+0x3e>
    8990:	e721      	b.n	87d6 <__aeabi_dsub+0x3a>
    8992:	0023      	movs	r3, r4
    8994:	433b      	orrs	r3, r7
    8996:	d100      	bne.n	899a <__aeabi_dsub+0x1fe>
    8998:	e1b9      	b.n	8d0e <__aeabi_dsub+0x572>
    899a:	2280      	movs	r2, #128	; 0x80
    899c:	0312      	lsls	r2, r2, #12
    899e:	4314      	orrs	r4, r2
    89a0:	0324      	lsls	r4, r4, #12
    89a2:	0b24      	lsrs	r4, r4, #12
    89a4:	e79f      	b.n	88e6 <__aeabi_dsub+0x14a>
    89a6:	002e      	movs	r6, r5
    89a8:	e77e      	b.n	88a8 <__aeabi_dsub+0x10c>
    89aa:	0008      	movs	r0, r1
    89ac:	4310      	orrs	r0, r2
    89ae:	d100      	bne.n	89b2 <__aeabi_dsub+0x216>
    89b0:	e0ca      	b.n	8b48 <__aeabi_dsub+0x3ac>
    89b2:	1e58      	subs	r0, r3, #1
    89b4:	4684      	mov	ip, r0
    89b6:	2800      	cmp	r0, #0
    89b8:	d000      	beq.n	89bc <__aeabi_dsub+0x220>
    89ba:	e0e7      	b.n	8b8c <__aeabi_dsub+0x3f0>
    89bc:	4452      	add	r2, sl
    89be:	4552      	cmp	r2, sl
    89c0:	4180      	sbcs	r0, r0
    89c2:	1864      	adds	r4, r4, r1
    89c4:	4240      	negs	r0, r0
    89c6:	1824      	adds	r4, r4, r0
    89c8:	0017      	movs	r7, r2
    89ca:	2601      	movs	r6, #1
    89cc:	0223      	lsls	r3, r4, #8
    89ce:	d507      	bpl.n	89e0 <__aeabi_dsub+0x244>
    89d0:	2602      	movs	r6, #2
    89d2:	e7cf      	b.n	8974 <__aeabi_dsub+0x1d8>
    89d4:	4664      	mov	r4, ip
    89d6:	432c      	orrs	r4, r5
    89d8:	d100      	bne.n	89dc <__aeabi_dsub+0x240>
    89da:	e1b3      	b.n	8d44 <__aeabi_dsub+0x5a8>
    89dc:	002c      	movs	r4, r5
    89de:	4667      	mov	r7, ip
    89e0:	077b      	lsls	r3, r7, #29
    89e2:	d000      	beq.n	89e6 <__aeabi_dsub+0x24a>
    89e4:	e762      	b.n	88ac <__aeabi_dsub+0x110>
    89e6:	0763      	lsls	r3, r4, #29
    89e8:	08ff      	lsrs	r7, r7, #3
    89ea:	431f      	orrs	r7, r3
    89ec:	2501      	movs	r5, #1
    89ee:	4643      	mov	r3, r8
    89f0:	08e4      	lsrs	r4, r4, #3
    89f2:	401d      	ands	r5, r3
    89f4:	e793      	b.n	891e <__aeabi_dsub+0x182>
    89f6:	2d00      	cmp	r5, #0
    89f8:	d178      	bne.n	8aec <__aeabi_dsub+0x350>
    89fa:	1c75      	adds	r5, r6, #1
    89fc:	056d      	lsls	r5, r5, #21
    89fe:	0d6d      	lsrs	r5, r5, #21
    8a00:	2d01      	cmp	r5, #1
    8a02:	dc00      	bgt.n	8a06 <__aeabi_dsub+0x26a>
    8a04:	e0f2      	b.n	8bec <__aeabi_dsub+0x450>
    8a06:	4650      	mov	r0, sl
    8a08:	1a80      	subs	r0, r0, r2
    8a0a:	4582      	cmp	sl, r0
    8a0c:	41bf      	sbcs	r7, r7
    8a0e:	1a65      	subs	r5, r4, r1
    8a10:	427f      	negs	r7, r7
    8a12:	1bed      	subs	r5, r5, r7
    8a14:	4684      	mov	ip, r0
    8a16:	0228      	lsls	r0, r5, #8
    8a18:	d400      	bmi.n	8a1c <__aeabi_dsub+0x280>
    8a1a:	e08c      	b.n	8b36 <__aeabi_dsub+0x39a>
    8a1c:	4650      	mov	r0, sl
    8a1e:	1a17      	subs	r7, r2, r0
    8a20:	42ba      	cmp	r2, r7
    8a22:	4192      	sbcs	r2, r2
    8a24:	1b0c      	subs	r4, r1, r4
    8a26:	4255      	negs	r5, r2
    8a28:	1b65      	subs	r5, r4, r5
    8a2a:	4698      	mov	r8, r3
    8a2c:	e714      	b.n	8858 <__aeabi_dsub+0xbc>
    8a2e:	2501      	movs	r5, #1
    8a30:	4643      	mov	r3, r8
    8a32:	2400      	movs	r4, #0
    8a34:	401d      	ands	r5, r3
    8a36:	2700      	movs	r7, #0
    8a38:	e755      	b.n	88e6 <__aeabi_dsub+0x14a>
    8a3a:	4c2a      	ldr	r4, [pc, #168]	; (8ae4 <__aeabi_dsub+0x348>)
    8a3c:	1af6      	subs	r6, r6, r3
    8a3e:	402c      	ands	r4, r5
    8a40:	e732      	b.n	88a8 <__aeabi_dsub+0x10c>
    8a42:	003d      	movs	r5, r7
    8a44:	3828      	subs	r0, #40	; 0x28
    8a46:	4085      	lsls	r5, r0
    8a48:	2700      	movs	r7, #0
    8a4a:	e717      	b.n	887c <__aeabi_dsub+0xe0>
    8a4c:	0038      	movs	r0, r7
    8a4e:	f000 fa47 	bl	8ee0 <__clzsi2>
    8a52:	3020      	adds	r0, #32
    8a54:	e706      	b.n	8864 <__aeabi_dsub+0xc8>
    8a56:	430a      	orrs	r2, r1
    8a58:	0017      	movs	r7, r2
    8a5a:	2100      	movs	r1, #0
    8a5c:	1e7a      	subs	r2, r7, #1
    8a5e:	4197      	sbcs	r7, r2
    8a60:	e6ee      	b.n	8840 <__aeabi_dsub+0xa4>
    8a62:	2b00      	cmp	r3, #0
    8a64:	d000      	beq.n	8a68 <__aeabi_dsub+0x2cc>
    8a66:	e0e5      	b.n	8c34 <__aeabi_dsub+0x498>
    8a68:	1c73      	adds	r3, r6, #1
    8a6a:	469c      	mov	ip, r3
    8a6c:	055b      	lsls	r3, r3, #21
    8a6e:	0d5b      	lsrs	r3, r3, #21
    8a70:	2b01      	cmp	r3, #1
    8a72:	dc00      	bgt.n	8a76 <__aeabi_dsub+0x2da>
    8a74:	e09f      	b.n	8bb6 <__aeabi_dsub+0x41a>
    8a76:	4b1a      	ldr	r3, [pc, #104]	; (8ae0 <__aeabi_dsub+0x344>)
    8a78:	459c      	cmp	ip, r3
    8a7a:	d100      	bne.n	8a7e <__aeabi_dsub+0x2e2>
    8a7c:	e0c5      	b.n	8c0a <__aeabi_dsub+0x46e>
    8a7e:	4452      	add	r2, sl
    8a80:	4552      	cmp	r2, sl
    8a82:	4180      	sbcs	r0, r0
    8a84:	1864      	adds	r4, r4, r1
    8a86:	4240      	negs	r0, r0
    8a88:	1824      	adds	r4, r4, r0
    8a8a:	07e7      	lsls	r7, r4, #31
    8a8c:	0852      	lsrs	r2, r2, #1
    8a8e:	4317      	orrs	r7, r2
    8a90:	0864      	lsrs	r4, r4, #1
    8a92:	4666      	mov	r6, ip
    8a94:	e708      	b.n	88a8 <__aeabi_dsub+0x10c>
    8a96:	4812      	ldr	r0, [pc, #72]	; (8ae0 <__aeabi_dsub+0x344>)
    8a98:	4285      	cmp	r5, r0
    8a9a:	d100      	bne.n	8a9e <__aeabi_dsub+0x302>
    8a9c:	e085      	b.n	8baa <__aeabi_dsub+0x40e>
    8a9e:	001d      	movs	r5, r3
    8aa0:	e6bc      	b.n	881c <__aeabi_dsub+0x80>
    8aa2:	0029      	movs	r1, r5
    8aa4:	3e1f      	subs	r6, #31
    8aa6:	40f1      	lsrs	r1, r6
    8aa8:	2b20      	cmp	r3, #32
    8aaa:	d100      	bne.n	8aae <__aeabi_dsub+0x312>
    8aac:	e07f      	b.n	8bae <__aeabi_dsub+0x412>
    8aae:	2240      	movs	r2, #64	; 0x40
    8ab0:	1ad3      	subs	r3, r2, r3
    8ab2:	409d      	lsls	r5, r3
    8ab4:	432f      	orrs	r7, r5
    8ab6:	1e7d      	subs	r5, r7, #1
    8ab8:	41af      	sbcs	r7, r5
    8aba:	2400      	movs	r4, #0
    8abc:	430f      	orrs	r7, r1
    8abe:	2600      	movs	r6, #0
    8ac0:	e78e      	b.n	89e0 <__aeabi_dsub+0x244>
    8ac2:	002b      	movs	r3, r5
    8ac4:	000f      	movs	r7, r1
    8ac6:	3b20      	subs	r3, #32
    8ac8:	40df      	lsrs	r7, r3
    8aca:	2d20      	cmp	r5, #32
    8acc:	d071      	beq.n	8bb2 <__aeabi_dsub+0x416>
    8ace:	2340      	movs	r3, #64	; 0x40
    8ad0:	1b5d      	subs	r5, r3, r5
    8ad2:	40a9      	lsls	r1, r5
    8ad4:	430a      	orrs	r2, r1
    8ad6:	1e51      	subs	r1, r2, #1
    8ad8:	418a      	sbcs	r2, r1
    8ada:	2100      	movs	r1, #0
    8adc:	4317      	orrs	r7, r2
    8ade:	e6af      	b.n	8840 <__aeabi_dsub+0xa4>
    8ae0:	000007ff 	.word	0x000007ff
    8ae4:	ff7fffff 	.word	0xff7fffff
    8ae8:	800fffff 	.word	0x800fffff
    8aec:	2e00      	cmp	r6, #0
    8aee:	d03e      	beq.n	8b6e <__aeabi_dsub+0x3d2>
    8af0:	4eb3      	ldr	r6, [pc, #716]	; (8dc0 <__aeabi_dsub+0x624>)
    8af2:	45b4      	cmp	ip, r6
    8af4:	d045      	beq.n	8b82 <__aeabi_dsub+0x3e6>
    8af6:	2680      	movs	r6, #128	; 0x80
    8af8:	0436      	lsls	r6, r6, #16
    8afa:	426d      	negs	r5, r5
    8afc:	4334      	orrs	r4, r6
    8afe:	2d38      	cmp	r5, #56	; 0x38
    8b00:	dd00      	ble.n	8b04 <__aeabi_dsub+0x368>
    8b02:	e0a8      	b.n	8c56 <__aeabi_dsub+0x4ba>
    8b04:	2d1f      	cmp	r5, #31
    8b06:	dd00      	ble.n	8b0a <__aeabi_dsub+0x36e>
    8b08:	e11f      	b.n	8d4a <__aeabi_dsub+0x5ae>
    8b0a:	2620      	movs	r6, #32
    8b0c:	0027      	movs	r7, r4
    8b0e:	4650      	mov	r0, sl
    8b10:	1b76      	subs	r6, r6, r5
    8b12:	40b7      	lsls	r7, r6
    8b14:	40e8      	lsrs	r0, r5
    8b16:	4307      	orrs	r7, r0
    8b18:	4650      	mov	r0, sl
    8b1a:	40b0      	lsls	r0, r6
    8b1c:	1e46      	subs	r6, r0, #1
    8b1e:	41b0      	sbcs	r0, r6
    8b20:	40ec      	lsrs	r4, r5
    8b22:	4338      	orrs	r0, r7
    8b24:	1a17      	subs	r7, r2, r0
    8b26:	42ba      	cmp	r2, r7
    8b28:	4192      	sbcs	r2, r2
    8b2a:	1b0c      	subs	r4, r1, r4
    8b2c:	4252      	negs	r2, r2
    8b2e:	1aa4      	subs	r4, r4, r2
    8b30:	4666      	mov	r6, ip
    8b32:	4698      	mov	r8, r3
    8b34:	e68b      	b.n	884e <__aeabi_dsub+0xb2>
    8b36:	4664      	mov	r4, ip
    8b38:	4667      	mov	r7, ip
    8b3a:	432c      	orrs	r4, r5
    8b3c:	d000      	beq.n	8b40 <__aeabi_dsub+0x3a4>
    8b3e:	e68b      	b.n	8858 <__aeabi_dsub+0xbc>
    8b40:	2500      	movs	r5, #0
    8b42:	2600      	movs	r6, #0
    8b44:	2700      	movs	r7, #0
    8b46:	e6ea      	b.n	891e <__aeabi_dsub+0x182>
    8b48:	001e      	movs	r6, r3
    8b4a:	e6ad      	b.n	88a8 <__aeabi_dsub+0x10c>
    8b4c:	2b1f      	cmp	r3, #31
    8b4e:	dc60      	bgt.n	8c12 <__aeabi_dsub+0x476>
    8b50:	2720      	movs	r7, #32
    8b52:	1af8      	subs	r0, r7, r3
    8b54:	000f      	movs	r7, r1
    8b56:	4684      	mov	ip, r0
    8b58:	4087      	lsls	r7, r0
    8b5a:	0010      	movs	r0, r2
    8b5c:	40d8      	lsrs	r0, r3
    8b5e:	4307      	orrs	r7, r0
    8b60:	4660      	mov	r0, ip
    8b62:	4082      	lsls	r2, r0
    8b64:	1e50      	subs	r0, r2, #1
    8b66:	4182      	sbcs	r2, r0
    8b68:	40d9      	lsrs	r1, r3
    8b6a:	4317      	orrs	r7, r2
    8b6c:	e6f5      	b.n	895a <__aeabi_dsub+0x1be>
    8b6e:	0026      	movs	r6, r4
    8b70:	4650      	mov	r0, sl
    8b72:	4306      	orrs	r6, r0
    8b74:	d005      	beq.n	8b82 <__aeabi_dsub+0x3e6>
    8b76:	43ed      	mvns	r5, r5
    8b78:	2d00      	cmp	r5, #0
    8b7a:	d0d3      	beq.n	8b24 <__aeabi_dsub+0x388>
    8b7c:	4e90      	ldr	r6, [pc, #576]	; (8dc0 <__aeabi_dsub+0x624>)
    8b7e:	45b4      	cmp	ip, r6
    8b80:	d1bd      	bne.n	8afe <__aeabi_dsub+0x362>
    8b82:	000c      	movs	r4, r1
    8b84:	0017      	movs	r7, r2
    8b86:	4666      	mov	r6, ip
    8b88:	4698      	mov	r8, r3
    8b8a:	e68d      	b.n	88a8 <__aeabi_dsub+0x10c>
    8b8c:	488c      	ldr	r0, [pc, #560]	; (8dc0 <__aeabi_dsub+0x624>)
    8b8e:	4283      	cmp	r3, r0
    8b90:	d00b      	beq.n	8baa <__aeabi_dsub+0x40e>
    8b92:	4663      	mov	r3, ip
    8b94:	e6d9      	b.n	894a <__aeabi_dsub+0x1ae>
    8b96:	2d00      	cmp	r5, #0
    8b98:	d000      	beq.n	8b9c <__aeabi_dsub+0x400>
    8b9a:	e096      	b.n	8cca <__aeabi_dsub+0x52e>
    8b9c:	0008      	movs	r0, r1
    8b9e:	4310      	orrs	r0, r2
    8ba0:	d100      	bne.n	8ba4 <__aeabi_dsub+0x408>
    8ba2:	e0e2      	b.n	8d6a <__aeabi_dsub+0x5ce>
    8ba4:	000c      	movs	r4, r1
    8ba6:	0017      	movs	r7, r2
    8ba8:	4698      	mov	r8, r3
    8baa:	4e85      	ldr	r6, [pc, #532]	; (8dc0 <__aeabi_dsub+0x624>)
    8bac:	e67c      	b.n	88a8 <__aeabi_dsub+0x10c>
    8bae:	2500      	movs	r5, #0
    8bb0:	e780      	b.n	8ab4 <__aeabi_dsub+0x318>
    8bb2:	2100      	movs	r1, #0
    8bb4:	e78e      	b.n	8ad4 <__aeabi_dsub+0x338>
    8bb6:	0023      	movs	r3, r4
    8bb8:	4650      	mov	r0, sl
    8bba:	4303      	orrs	r3, r0
    8bbc:	2e00      	cmp	r6, #0
    8bbe:	d000      	beq.n	8bc2 <__aeabi_dsub+0x426>
    8bc0:	e0a8      	b.n	8d14 <__aeabi_dsub+0x578>
    8bc2:	2b00      	cmp	r3, #0
    8bc4:	d100      	bne.n	8bc8 <__aeabi_dsub+0x42c>
    8bc6:	e0de      	b.n	8d86 <__aeabi_dsub+0x5ea>
    8bc8:	000b      	movs	r3, r1
    8bca:	4313      	orrs	r3, r2
    8bcc:	d100      	bne.n	8bd0 <__aeabi_dsub+0x434>
    8bce:	e66b      	b.n	88a8 <__aeabi_dsub+0x10c>
    8bd0:	4452      	add	r2, sl
    8bd2:	4552      	cmp	r2, sl
    8bd4:	4180      	sbcs	r0, r0
    8bd6:	1864      	adds	r4, r4, r1
    8bd8:	4240      	negs	r0, r0
    8bda:	1824      	adds	r4, r4, r0
    8bdc:	0017      	movs	r7, r2
    8bde:	0223      	lsls	r3, r4, #8
    8be0:	d400      	bmi.n	8be4 <__aeabi_dsub+0x448>
    8be2:	e6fd      	b.n	89e0 <__aeabi_dsub+0x244>
    8be4:	4b77      	ldr	r3, [pc, #476]	; (8dc4 <__aeabi_dsub+0x628>)
    8be6:	4666      	mov	r6, ip
    8be8:	401c      	ands	r4, r3
    8bea:	e65d      	b.n	88a8 <__aeabi_dsub+0x10c>
    8bec:	0025      	movs	r5, r4
    8bee:	4650      	mov	r0, sl
    8bf0:	4305      	orrs	r5, r0
    8bf2:	2e00      	cmp	r6, #0
    8bf4:	d1cf      	bne.n	8b96 <__aeabi_dsub+0x3fa>
    8bf6:	2d00      	cmp	r5, #0
    8bf8:	d14f      	bne.n	8c9a <__aeabi_dsub+0x4fe>
    8bfa:	000c      	movs	r4, r1
    8bfc:	4314      	orrs	r4, r2
    8bfe:	d100      	bne.n	8c02 <__aeabi_dsub+0x466>
    8c00:	e0a0      	b.n	8d44 <__aeabi_dsub+0x5a8>
    8c02:	000c      	movs	r4, r1
    8c04:	0017      	movs	r7, r2
    8c06:	4698      	mov	r8, r3
    8c08:	e64e      	b.n	88a8 <__aeabi_dsub+0x10c>
    8c0a:	4666      	mov	r6, ip
    8c0c:	2400      	movs	r4, #0
    8c0e:	2700      	movs	r7, #0
    8c10:	e685      	b.n	891e <__aeabi_dsub+0x182>
    8c12:	001f      	movs	r7, r3
    8c14:	0008      	movs	r0, r1
    8c16:	3f20      	subs	r7, #32
    8c18:	40f8      	lsrs	r0, r7
    8c1a:	0007      	movs	r7, r0
    8c1c:	2b20      	cmp	r3, #32
    8c1e:	d100      	bne.n	8c22 <__aeabi_dsub+0x486>
    8c20:	e08e      	b.n	8d40 <__aeabi_dsub+0x5a4>
    8c22:	2040      	movs	r0, #64	; 0x40
    8c24:	1ac3      	subs	r3, r0, r3
    8c26:	4099      	lsls	r1, r3
    8c28:	430a      	orrs	r2, r1
    8c2a:	1e51      	subs	r1, r2, #1
    8c2c:	418a      	sbcs	r2, r1
    8c2e:	2100      	movs	r1, #0
    8c30:	4317      	orrs	r7, r2
    8c32:	e692      	b.n	895a <__aeabi_dsub+0x1be>
    8c34:	2e00      	cmp	r6, #0
    8c36:	d114      	bne.n	8c62 <__aeabi_dsub+0x4c6>
    8c38:	0026      	movs	r6, r4
    8c3a:	4650      	mov	r0, sl
    8c3c:	4306      	orrs	r6, r0
    8c3e:	d062      	beq.n	8d06 <__aeabi_dsub+0x56a>
    8c40:	43db      	mvns	r3, r3
    8c42:	2b00      	cmp	r3, #0
    8c44:	d15c      	bne.n	8d00 <__aeabi_dsub+0x564>
    8c46:	1887      	adds	r7, r0, r2
    8c48:	4297      	cmp	r7, r2
    8c4a:	4192      	sbcs	r2, r2
    8c4c:	1864      	adds	r4, r4, r1
    8c4e:	4252      	negs	r2, r2
    8c50:	18a4      	adds	r4, r4, r2
    8c52:	4666      	mov	r6, ip
    8c54:	e687      	b.n	8966 <__aeabi_dsub+0x1ca>
    8c56:	4650      	mov	r0, sl
    8c58:	4320      	orrs	r0, r4
    8c5a:	1e44      	subs	r4, r0, #1
    8c5c:	41a0      	sbcs	r0, r4
    8c5e:	2400      	movs	r4, #0
    8c60:	e760      	b.n	8b24 <__aeabi_dsub+0x388>
    8c62:	4e57      	ldr	r6, [pc, #348]	; (8dc0 <__aeabi_dsub+0x624>)
    8c64:	45b4      	cmp	ip, r6
    8c66:	d04e      	beq.n	8d06 <__aeabi_dsub+0x56a>
    8c68:	2680      	movs	r6, #128	; 0x80
    8c6a:	0436      	lsls	r6, r6, #16
    8c6c:	425b      	negs	r3, r3
    8c6e:	4334      	orrs	r4, r6
    8c70:	2b38      	cmp	r3, #56	; 0x38
    8c72:	dd00      	ble.n	8c76 <__aeabi_dsub+0x4da>
    8c74:	e07f      	b.n	8d76 <__aeabi_dsub+0x5da>
    8c76:	2b1f      	cmp	r3, #31
    8c78:	dd00      	ble.n	8c7c <__aeabi_dsub+0x4e0>
    8c7a:	e08b      	b.n	8d94 <__aeabi_dsub+0x5f8>
    8c7c:	2620      	movs	r6, #32
    8c7e:	0027      	movs	r7, r4
    8c80:	4650      	mov	r0, sl
    8c82:	1af6      	subs	r6, r6, r3
    8c84:	40b7      	lsls	r7, r6
    8c86:	40d8      	lsrs	r0, r3
    8c88:	4307      	orrs	r7, r0
    8c8a:	4650      	mov	r0, sl
    8c8c:	40b0      	lsls	r0, r6
    8c8e:	1e46      	subs	r6, r0, #1
    8c90:	41b0      	sbcs	r0, r6
    8c92:	4307      	orrs	r7, r0
    8c94:	40dc      	lsrs	r4, r3
    8c96:	18bf      	adds	r7, r7, r2
    8c98:	e7d6      	b.n	8c48 <__aeabi_dsub+0x4ac>
    8c9a:	000d      	movs	r5, r1
    8c9c:	4315      	orrs	r5, r2
    8c9e:	d100      	bne.n	8ca2 <__aeabi_dsub+0x506>
    8ca0:	e602      	b.n	88a8 <__aeabi_dsub+0x10c>
    8ca2:	4650      	mov	r0, sl
    8ca4:	1a80      	subs	r0, r0, r2
    8ca6:	4582      	cmp	sl, r0
    8ca8:	41bf      	sbcs	r7, r7
    8caa:	1a65      	subs	r5, r4, r1
    8cac:	427f      	negs	r7, r7
    8cae:	1bed      	subs	r5, r5, r7
    8cb0:	4684      	mov	ip, r0
    8cb2:	0228      	lsls	r0, r5, #8
    8cb4:	d400      	bmi.n	8cb8 <__aeabi_dsub+0x51c>
    8cb6:	e68d      	b.n	89d4 <__aeabi_dsub+0x238>
    8cb8:	4650      	mov	r0, sl
    8cba:	1a17      	subs	r7, r2, r0
    8cbc:	42ba      	cmp	r2, r7
    8cbe:	4192      	sbcs	r2, r2
    8cc0:	1b0c      	subs	r4, r1, r4
    8cc2:	4252      	negs	r2, r2
    8cc4:	1aa4      	subs	r4, r4, r2
    8cc6:	4698      	mov	r8, r3
    8cc8:	e5ee      	b.n	88a8 <__aeabi_dsub+0x10c>
    8cca:	000d      	movs	r5, r1
    8ccc:	4315      	orrs	r5, r2
    8cce:	d100      	bne.n	8cd2 <__aeabi_dsub+0x536>
    8cd0:	e76b      	b.n	8baa <__aeabi_dsub+0x40e>
    8cd2:	4650      	mov	r0, sl
    8cd4:	0767      	lsls	r7, r4, #29
    8cd6:	08c0      	lsrs	r0, r0, #3
    8cd8:	4307      	orrs	r7, r0
    8cda:	2080      	movs	r0, #128	; 0x80
    8cdc:	08e4      	lsrs	r4, r4, #3
    8cde:	0300      	lsls	r0, r0, #12
    8ce0:	4204      	tst	r4, r0
    8ce2:	d007      	beq.n	8cf4 <__aeabi_dsub+0x558>
    8ce4:	08cd      	lsrs	r5, r1, #3
    8ce6:	4205      	tst	r5, r0
    8ce8:	d104      	bne.n	8cf4 <__aeabi_dsub+0x558>
    8cea:	002c      	movs	r4, r5
    8cec:	4698      	mov	r8, r3
    8cee:	08d7      	lsrs	r7, r2, #3
    8cf0:	0749      	lsls	r1, r1, #29
    8cf2:	430f      	orrs	r7, r1
    8cf4:	0f7b      	lsrs	r3, r7, #29
    8cf6:	00e4      	lsls	r4, r4, #3
    8cf8:	431c      	orrs	r4, r3
    8cfa:	00ff      	lsls	r7, r7, #3
    8cfc:	4e30      	ldr	r6, [pc, #192]	; (8dc0 <__aeabi_dsub+0x624>)
    8cfe:	e5d3      	b.n	88a8 <__aeabi_dsub+0x10c>
    8d00:	4e2f      	ldr	r6, [pc, #188]	; (8dc0 <__aeabi_dsub+0x624>)
    8d02:	45b4      	cmp	ip, r6
    8d04:	d1b4      	bne.n	8c70 <__aeabi_dsub+0x4d4>
    8d06:	000c      	movs	r4, r1
    8d08:	0017      	movs	r7, r2
    8d0a:	4666      	mov	r6, ip
    8d0c:	e5cc      	b.n	88a8 <__aeabi_dsub+0x10c>
    8d0e:	2700      	movs	r7, #0
    8d10:	2400      	movs	r4, #0
    8d12:	e5e8      	b.n	88e6 <__aeabi_dsub+0x14a>
    8d14:	2b00      	cmp	r3, #0
    8d16:	d039      	beq.n	8d8c <__aeabi_dsub+0x5f0>
    8d18:	000b      	movs	r3, r1
    8d1a:	4313      	orrs	r3, r2
    8d1c:	d100      	bne.n	8d20 <__aeabi_dsub+0x584>
    8d1e:	e744      	b.n	8baa <__aeabi_dsub+0x40e>
    8d20:	08c0      	lsrs	r0, r0, #3
    8d22:	0767      	lsls	r7, r4, #29
    8d24:	4307      	orrs	r7, r0
    8d26:	2080      	movs	r0, #128	; 0x80
    8d28:	08e4      	lsrs	r4, r4, #3
    8d2a:	0300      	lsls	r0, r0, #12
    8d2c:	4204      	tst	r4, r0
    8d2e:	d0e1      	beq.n	8cf4 <__aeabi_dsub+0x558>
    8d30:	08cb      	lsrs	r3, r1, #3
    8d32:	4203      	tst	r3, r0
    8d34:	d1de      	bne.n	8cf4 <__aeabi_dsub+0x558>
    8d36:	08d7      	lsrs	r7, r2, #3
    8d38:	0749      	lsls	r1, r1, #29
    8d3a:	430f      	orrs	r7, r1
    8d3c:	001c      	movs	r4, r3
    8d3e:	e7d9      	b.n	8cf4 <__aeabi_dsub+0x558>
    8d40:	2100      	movs	r1, #0
    8d42:	e771      	b.n	8c28 <__aeabi_dsub+0x48c>
    8d44:	2500      	movs	r5, #0
    8d46:	2700      	movs	r7, #0
    8d48:	e5e9      	b.n	891e <__aeabi_dsub+0x182>
    8d4a:	002e      	movs	r6, r5
    8d4c:	0027      	movs	r7, r4
    8d4e:	3e20      	subs	r6, #32
    8d50:	40f7      	lsrs	r7, r6
    8d52:	2d20      	cmp	r5, #32
    8d54:	d02f      	beq.n	8db6 <__aeabi_dsub+0x61a>
    8d56:	2640      	movs	r6, #64	; 0x40
    8d58:	1b75      	subs	r5, r6, r5
    8d5a:	40ac      	lsls	r4, r5
    8d5c:	4650      	mov	r0, sl
    8d5e:	4320      	orrs	r0, r4
    8d60:	1e44      	subs	r4, r0, #1
    8d62:	41a0      	sbcs	r0, r4
    8d64:	2400      	movs	r4, #0
    8d66:	4338      	orrs	r0, r7
    8d68:	e6dc      	b.n	8b24 <__aeabi_dsub+0x388>
    8d6a:	2480      	movs	r4, #128	; 0x80
    8d6c:	2500      	movs	r5, #0
    8d6e:	0324      	lsls	r4, r4, #12
    8d70:	4e13      	ldr	r6, [pc, #76]	; (8dc0 <__aeabi_dsub+0x624>)
    8d72:	2700      	movs	r7, #0
    8d74:	e5d3      	b.n	891e <__aeabi_dsub+0x182>
    8d76:	4650      	mov	r0, sl
    8d78:	4320      	orrs	r0, r4
    8d7a:	0007      	movs	r7, r0
    8d7c:	1e78      	subs	r0, r7, #1
    8d7e:	4187      	sbcs	r7, r0
    8d80:	2400      	movs	r4, #0
    8d82:	18bf      	adds	r7, r7, r2
    8d84:	e760      	b.n	8c48 <__aeabi_dsub+0x4ac>
    8d86:	000c      	movs	r4, r1
    8d88:	0017      	movs	r7, r2
    8d8a:	e58d      	b.n	88a8 <__aeabi_dsub+0x10c>
    8d8c:	000c      	movs	r4, r1
    8d8e:	0017      	movs	r7, r2
    8d90:	4e0b      	ldr	r6, [pc, #44]	; (8dc0 <__aeabi_dsub+0x624>)
    8d92:	e589      	b.n	88a8 <__aeabi_dsub+0x10c>
    8d94:	001e      	movs	r6, r3
    8d96:	0027      	movs	r7, r4
    8d98:	3e20      	subs	r6, #32
    8d9a:	40f7      	lsrs	r7, r6
    8d9c:	2b20      	cmp	r3, #32
    8d9e:	d00c      	beq.n	8dba <__aeabi_dsub+0x61e>
    8da0:	2640      	movs	r6, #64	; 0x40
    8da2:	1af3      	subs	r3, r6, r3
    8da4:	409c      	lsls	r4, r3
    8da6:	4650      	mov	r0, sl
    8da8:	4320      	orrs	r0, r4
    8daa:	1e44      	subs	r4, r0, #1
    8dac:	41a0      	sbcs	r0, r4
    8dae:	4307      	orrs	r7, r0
    8db0:	2400      	movs	r4, #0
    8db2:	18bf      	adds	r7, r7, r2
    8db4:	e748      	b.n	8c48 <__aeabi_dsub+0x4ac>
    8db6:	2400      	movs	r4, #0
    8db8:	e7d0      	b.n	8d5c <__aeabi_dsub+0x5c0>
    8dba:	2400      	movs	r4, #0
    8dbc:	e7f3      	b.n	8da6 <__aeabi_dsub+0x60a>
    8dbe:	46c0      	nop			; (mov r8, r8)
    8dc0:	000007ff 	.word	0x000007ff
    8dc4:	ff7fffff 	.word	0xff7fffff

00008dc8 <__aeabi_dcmpun>:
    8dc8:	b570      	push	{r4, r5, r6, lr}
    8dca:	4e0e      	ldr	r6, [pc, #56]	; (8e04 <__aeabi_dcmpun+0x3c>)
    8dcc:	030d      	lsls	r5, r1, #12
    8dce:	031c      	lsls	r4, r3, #12
    8dd0:	0049      	lsls	r1, r1, #1
    8dd2:	005b      	lsls	r3, r3, #1
    8dd4:	0b2d      	lsrs	r5, r5, #12
    8dd6:	0d49      	lsrs	r1, r1, #21
    8dd8:	0b24      	lsrs	r4, r4, #12
    8dda:	0d5b      	lsrs	r3, r3, #21
    8ddc:	42b1      	cmp	r1, r6
    8dde:	d004      	beq.n	8dea <__aeabi_dcmpun+0x22>
    8de0:	4908      	ldr	r1, [pc, #32]	; (8e04 <__aeabi_dcmpun+0x3c>)
    8de2:	2000      	movs	r0, #0
    8de4:	428b      	cmp	r3, r1
    8de6:	d008      	beq.n	8dfa <__aeabi_dcmpun+0x32>
    8de8:	bd70      	pop	{r4, r5, r6, pc}
    8dea:	4305      	orrs	r5, r0
    8dec:	2001      	movs	r0, #1
    8dee:	2d00      	cmp	r5, #0
    8df0:	d1fa      	bne.n	8de8 <__aeabi_dcmpun+0x20>
    8df2:	4904      	ldr	r1, [pc, #16]	; (8e04 <__aeabi_dcmpun+0x3c>)
    8df4:	2000      	movs	r0, #0
    8df6:	428b      	cmp	r3, r1
    8df8:	d1f6      	bne.n	8de8 <__aeabi_dcmpun+0x20>
    8dfa:	4314      	orrs	r4, r2
    8dfc:	0020      	movs	r0, r4
    8dfe:	1e44      	subs	r4, r0, #1
    8e00:	41a0      	sbcs	r0, r4
    8e02:	e7f1      	b.n	8de8 <__aeabi_dcmpun+0x20>
    8e04:	000007ff 	.word	0x000007ff

00008e08 <__aeabi_d2iz>:
    8e08:	b530      	push	{r4, r5, lr}
    8e0a:	4d13      	ldr	r5, [pc, #76]	; (8e58 <__aeabi_d2iz+0x50>)
    8e0c:	030a      	lsls	r2, r1, #12
    8e0e:	004b      	lsls	r3, r1, #1
    8e10:	0b12      	lsrs	r2, r2, #12
    8e12:	0d5b      	lsrs	r3, r3, #21
    8e14:	0fc9      	lsrs	r1, r1, #31
    8e16:	2400      	movs	r4, #0
    8e18:	42ab      	cmp	r3, r5
    8e1a:	dd10      	ble.n	8e3e <__aeabi_d2iz+0x36>
    8e1c:	4c0f      	ldr	r4, [pc, #60]	; (8e5c <__aeabi_d2iz+0x54>)
    8e1e:	42a3      	cmp	r3, r4
    8e20:	dc0f      	bgt.n	8e42 <__aeabi_d2iz+0x3a>
    8e22:	2480      	movs	r4, #128	; 0x80
    8e24:	4d0e      	ldr	r5, [pc, #56]	; (8e60 <__aeabi_d2iz+0x58>)
    8e26:	0364      	lsls	r4, r4, #13
    8e28:	4322      	orrs	r2, r4
    8e2a:	1aed      	subs	r5, r5, r3
    8e2c:	2d1f      	cmp	r5, #31
    8e2e:	dd0b      	ble.n	8e48 <__aeabi_d2iz+0x40>
    8e30:	480c      	ldr	r0, [pc, #48]	; (8e64 <__aeabi_d2iz+0x5c>)
    8e32:	1ac3      	subs	r3, r0, r3
    8e34:	40da      	lsrs	r2, r3
    8e36:	4254      	negs	r4, r2
    8e38:	2900      	cmp	r1, #0
    8e3a:	d100      	bne.n	8e3e <__aeabi_d2iz+0x36>
    8e3c:	0014      	movs	r4, r2
    8e3e:	0020      	movs	r0, r4
    8e40:	bd30      	pop	{r4, r5, pc}
    8e42:	4b09      	ldr	r3, [pc, #36]	; (8e68 <__aeabi_d2iz+0x60>)
    8e44:	18cc      	adds	r4, r1, r3
    8e46:	e7fa      	b.n	8e3e <__aeabi_d2iz+0x36>
    8e48:	4c08      	ldr	r4, [pc, #32]	; (8e6c <__aeabi_d2iz+0x64>)
    8e4a:	40e8      	lsrs	r0, r5
    8e4c:	46a4      	mov	ip, r4
    8e4e:	4463      	add	r3, ip
    8e50:	409a      	lsls	r2, r3
    8e52:	4302      	orrs	r2, r0
    8e54:	e7ef      	b.n	8e36 <__aeabi_d2iz+0x2e>
    8e56:	46c0      	nop			; (mov r8, r8)
    8e58:	000003fe 	.word	0x000003fe
    8e5c:	0000041d 	.word	0x0000041d
    8e60:	00000433 	.word	0x00000433
    8e64:	00000413 	.word	0x00000413
    8e68:	7fffffff 	.word	0x7fffffff
    8e6c:	fffffbed 	.word	0xfffffbed

00008e70 <__aeabi_ui2d>:
    8e70:	b510      	push	{r4, lr}
    8e72:	1e04      	subs	r4, r0, #0
    8e74:	d028      	beq.n	8ec8 <__aeabi_ui2d+0x58>
    8e76:	f000 f833 	bl	8ee0 <__clzsi2>
    8e7a:	4b15      	ldr	r3, [pc, #84]	; (8ed0 <__aeabi_ui2d+0x60>)
    8e7c:	4a15      	ldr	r2, [pc, #84]	; (8ed4 <__aeabi_ui2d+0x64>)
    8e7e:	1a1b      	subs	r3, r3, r0
    8e80:	1ad2      	subs	r2, r2, r3
    8e82:	2a1f      	cmp	r2, #31
    8e84:	dd15      	ble.n	8eb2 <__aeabi_ui2d+0x42>
    8e86:	4a14      	ldr	r2, [pc, #80]	; (8ed8 <__aeabi_ui2d+0x68>)
    8e88:	1ad2      	subs	r2, r2, r3
    8e8a:	4094      	lsls	r4, r2
    8e8c:	2200      	movs	r2, #0
    8e8e:	0324      	lsls	r4, r4, #12
    8e90:	055b      	lsls	r3, r3, #21
    8e92:	0b24      	lsrs	r4, r4, #12
    8e94:	0d5b      	lsrs	r3, r3, #21
    8e96:	2100      	movs	r1, #0
    8e98:	0010      	movs	r0, r2
    8e9a:	0324      	lsls	r4, r4, #12
    8e9c:	0d0a      	lsrs	r2, r1, #20
    8e9e:	0b24      	lsrs	r4, r4, #12
    8ea0:	0512      	lsls	r2, r2, #20
    8ea2:	4322      	orrs	r2, r4
    8ea4:	4c0d      	ldr	r4, [pc, #52]	; (8edc <__aeabi_ui2d+0x6c>)
    8ea6:	051b      	lsls	r3, r3, #20
    8ea8:	4022      	ands	r2, r4
    8eaa:	4313      	orrs	r3, r2
    8eac:	005b      	lsls	r3, r3, #1
    8eae:	0859      	lsrs	r1, r3, #1
    8eb0:	bd10      	pop	{r4, pc}
    8eb2:	0021      	movs	r1, r4
    8eb4:	4091      	lsls	r1, r2
    8eb6:	000a      	movs	r2, r1
    8eb8:	210b      	movs	r1, #11
    8eba:	1a08      	subs	r0, r1, r0
    8ebc:	40c4      	lsrs	r4, r0
    8ebe:	055b      	lsls	r3, r3, #21
    8ec0:	0324      	lsls	r4, r4, #12
    8ec2:	0b24      	lsrs	r4, r4, #12
    8ec4:	0d5b      	lsrs	r3, r3, #21
    8ec6:	e7e6      	b.n	8e96 <__aeabi_ui2d+0x26>
    8ec8:	2300      	movs	r3, #0
    8eca:	2400      	movs	r4, #0
    8ecc:	2200      	movs	r2, #0
    8ece:	e7e2      	b.n	8e96 <__aeabi_ui2d+0x26>
    8ed0:	0000041e 	.word	0x0000041e
    8ed4:	00000433 	.word	0x00000433
    8ed8:	00000413 	.word	0x00000413
    8edc:	800fffff 	.word	0x800fffff

00008ee0 <__clzsi2>:
    8ee0:	211c      	movs	r1, #28
    8ee2:	2301      	movs	r3, #1
    8ee4:	041b      	lsls	r3, r3, #16
    8ee6:	4298      	cmp	r0, r3
    8ee8:	d301      	bcc.n	8eee <__clzsi2+0xe>
    8eea:	0c00      	lsrs	r0, r0, #16
    8eec:	3910      	subs	r1, #16
    8eee:	0a1b      	lsrs	r3, r3, #8
    8ef0:	4298      	cmp	r0, r3
    8ef2:	d301      	bcc.n	8ef8 <__clzsi2+0x18>
    8ef4:	0a00      	lsrs	r0, r0, #8
    8ef6:	3908      	subs	r1, #8
    8ef8:	091b      	lsrs	r3, r3, #4
    8efa:	4298      	cmp	r0, r3
    8efc:	d301      	bcc.n	8f02 <__clzsi2+0x22>
    8efe:	0900      	lsrs	r0, r0, #4
    8f00:	3904      	subs	r1, #4
    8f02:	a202      	add	r2, pc, #8	; (adr r2, 8f0c <__clzsi2+0x2c>)
    8f04:	5c10      	ldrb	r0, [r2, r0]
    8f06:	1840      	adds	r0, r0, r1
    8f08:	4770      	bx	lr
    8f0a:	46c0      	nop			; (mov r8, r8)
    8f0c:	02020304 	.word	0x02020304
    8f10:	01010101 	.word	0x01010101
	...

00008f1c <__cxa_atexit>:
    8f1c:	b570      	push	{r4, r5, r6, lr}
    8f1e:	4c05      	ldr	r4, [pc, #20]	; (8f34 <__cxa_atexit+0x18>)
    8f20:	0005      	movs	r5, r0
    8f22:	0013      	movs	r3, r2
    8f24:	1e20      	subs	r0, r4, #0
    8f26:	d004      	beq.n	8f32 <__cxa_atexit+0x16>
    8f28:	000a      	movs	r2, r1
    8f2a:	2002      	movs	r0, #2
    8f2c:	0029      	movs	r1, r5
    8f2e:	e000      	b.n	8f32 <__cxa_atexit+0x16>
    8f30:	bf00      	nop
    8f32:	bd70      	pop	{r4, r5, r6, pc}
    8f34:	00000000 	.word	0x00000000

00008f38 <__libc_init_array>:
    8f38:	b570      	push	{r4, r5, r6, lr}
    8f3a:	2600      	movs	r6, #0
    8f3c:	4d0c      	ldr	r5, [pc, #48]	; (8f70 <__libc_init_array+0x38>)
    8f3e:	4c0d      	ldr	r4, [pc, #52]	; (8f74 <__libc_init_array+0x3c>)
    8f40:	1b64      	subs	r4, r4, r5
    8f42:	10a4      	asrs	r4, r4, #2
    8f44:	42a6      	cmp	r6, r4
    8f46:	d109      	bne.n	8f5c <__libc_init_array+0x24>
    8f48:	2600      	movs	r6, #0
    8f4a:	f002 f9db 	bl	b304 <_init>
    8f4e:	4d0a      	ldr	r5, [pc, #40]	; (8f78 <__libc_init_array+0x40>)
    8f50:	4c0a      	ldr	r4, [pc, #40]	; (8f7c <__libc_init_array+0x44>)
    8f52:	1b64      	subs	r4, r4, r5
    8f54:	10a4      	asrs	r4, r4, #2
    8f56:	42a6      	cmp	r6, r4
    8f58:	d105      	bne.n	8f66 <__libc_init_array+0x2e>
    8f5a:	bd70      	pop	{r4, r5, r6, pc}
    8f5c:	00b3      	lsls	r3, r6, #2
    8f5e:	58eb      	ldr	r3, [r5, r3]
    8f60:	4798      	blx	r3
    8f62:	3601      	adds	r6, #1
    8f64:	e7ee      	b.n	8f44 <__libc_init_array+0xc>
    8f66:	00b3      	lsls	r3, r6, #2
    8f68:	58eb      	ldr	r3, [r5, r3]
    8f6a:	4798      	blx	r3
    8f6c:	3601      	adds	r6, #1
    8f6e:	e7f2      	b.n	8f56 <__libc_init_array+0x1e>
    8f70:	20000260 	.word	0x20000260
    8f74:	20000260 	.word	0x20000260
    8f78:	20000260 	.word	0x20000260
    8f7c:	20000290 	.word	0x20000290

00008f80 <__locale_ctype_ptr_l>:
    8f80:	30ec      	adds	r0, #236	; 0xec
    8f82:	6800      	ldr	r0, [r0, #0]
    8f84:	4770      	bx	lr
	...

00008f88 <malloc>:
    8f88:	b510      	push	{r4, lr}
    8f8a:	4b03      	ldr	r3, [pc, #12]	; (8f98 <malloc+0x10>)
    8f8c:	0001      	movs	r1, r0
    8f8e:	6818      	ldr	r0, [r3, #0]
    8f90:	f000 f89c 	bl	90cc <_malloc_r>
    8f94:	bd10      	pop	{r4, pc}
    8f96:	46c0      	nop			; (mov r8, r8)
    8f98:	20000090 	.word	0x20000090

00008f9c <free>:
    8f9c:	b510      	push	{r4, lr}
    8f9e:	4b03      	ldr	r3, [pc, #12]	; (8fac <free+0x10>)
    8fa0:	0001      	movs	r1, r0
    8fa2:	6818      	ldr	r0, [r3, #0]
    8fa4:	f000 f848 	bl	9038 <_free_r>
    8fa8:	bd10      	pop	{r4, pc}
    8faa:	46c0      	nop			; (mov r8, r8)
    8fac:	20000090 	.word	0x20000090

00008fb0 <__ascii_mbtowc>:
    8fb0:	b082      	sub	sp, #8
    8fb2:	2900      	cmp	r1, #0
    8fb4:	d100      	bne.n	8fb8 <__ascii_mbtowc+0x8>
    8fb6:	a901      	add	r1, sp, #4
    8fb8:	1e10      	subs	r0, r2, #0
    8fba:	d006      	beq.n	8fca <__ascii_mbtowc+0x1a>
    8fbc:	2b00      	cmp	r3, #0
    8fbe:	d006      	beq.n	8fce <__ascii_mbtowc+0x1e>
    8fc0:	7813      	ldrb	r3, [r2, #0]
    8fc2:	600b      	str	r3, [r1, #0]
    8fc4:	7810      	ldrb	r0, [r2, #0]
    8fc6:	1e43      	subs	r3, r0, #1
    8fc8:	4198      	sbcs	r0, r3
    8fca:	b002      	add	sp, #8
    8fcc:	4770      	bx	lr
    8fce:	2002      	movs	r0, #2
    8fd0:	4240      	negs	r0, r0
    8fd2:	e7fa      	b.n	8fca <__ascii_mbtowc+0x1a>

00008fd4 <memcmp>:
    8fd4:	b530      	push	{r4, r5, lr}
    8fd6:	2400      	movs	r4, #0
    8fd8:	42a2      	cmp	r2, r4
    8fda:	d101      	bne.n	8fe0 <memcmp+0xc>
    8fdc:	2000      	movs	r0, #0
    8fde:	e005      	b.n	8fec <memcmp+0x18>
    8fe0:	5d03      	ldrb	r3, [r0, r4]
    8fe2:	1c65      	adds	r5, r4, #1
    8fe4:	5d0c      	ldrb	r4, [r1, r4]
    8fe6:	42a3      	cmp	r3, r4
    8fe8:	d001      	beq.n	8fee <memcmp+0x1a>
    8fea:	1b18      	subs	r0, r3, r4
    8fec:	bd30      	pop	{r4, r5, pc}
    8fee:	002c      	movs	r4, r5
    8ff0:	e7f2      	b.n	8fd8 <memcmp+0x4>

00008ff2 <memcpy>:
    8ff2:	2300      	movs	r3, #0
    8ff4:	b510      	push	{r4, lr}
    8ff6:	429a      	cmp	r2, r3
    8ff8:	d100      	bne.n	8ffc <memcpy+0xa>
    8ffa:	bd10      	pop	{r4, pc}
    8ffc:	5ccc      	ldrb	r4, [r1, r3]
    8ffe:	54c4      	strb	r4, [r0, r3]
    9000:	3301      	adds	r3, #1
    9002:	e7f8      	b.n	8ff6 <memcpy+0x4>

00009004 <memmove>:
    9004:	b510      	push	{r4, lr}
    9006:	4288      	cmp	r0, r1
    9008:	d902      	bls.n	9010 <memmove+0xc>
    900a:	188b      	adds	r3, r1, r2
    900c:	4298      	cmp	r0, r3
    900e:	d308      	bcc.n	9022 <memmove+0x1e>
    9010:	2300      	movs	r3, #0
    9012:	429a      	cmp	r2, r3
    9014:	d007      	beq.n	9026 <memmove+0x22>
    9016:	5ccc      	ldrb	r4, [r1, r3]
    9018:	54c4      	strb	r4, [r0, r3]
    901a:	3301      	adds	r3, #1
    901c:	e7f9      	b.n	9012 <memmove+0xe>
    901e:	5c8b      	ldrb	r3, [r1, r2]
    9020:	5483      	strb	r3, [r0, r2]
    9022:	3a01      	subs	r2, #1
    9024:	d2fb      	bcs.n	901e <memmove+0x1a>
    9026:	bd10      	pop	{r4, pc}

00009028 <memset>:
    9028:	0003      	movs	r3, r0
    902a:	1882      	adds	r2, r0, r2
    902c:	4293      	cmp	r3, r2
    902e:	d100      	bne.n	9032 <memset+0xa>
    9030:	4770      	bx	lr
    9032:	7019      	strb	r1, [r3, #0]
    9034:	3301      	adds	r3, #1
    9036:	e7f9      	b.n	902c <memset+0x4>

00009038 <_free_r>:
    9038:	b570      	push	{r4, r5, r6, lr}
    903a:	0005      	movs	r5, r0
    903c:	2900      	cmp	r1, #0
    903e:	d010      	beq.n	9062 <_free_r+0x2a>
    9040:	1f0c      	subs	r4, r1, #4
    9042:	6823      	ldr	r3, [r4, #0]
    9044:	2b00      	cmp	r3, #0
    9046:	da00      	bge.n	904a <_free_r+0x12>
    9048:	18e4      	adds	r4, r4, r3
    904a:	0028      	movs	r0, r5
    904c:	f001 fc83 	bl	a956 <__malloc_lock>
    9050:	4a1d      	ldr	r2, [pc, #116]	; (90c8 <_free_r+0x90>)
    9052:	6813      	ldr	r3, [r2, #0]
    9054:	2b00      	cmp	r3, #0
    9056:	d105      	bne.n	9064 <_free_r+0x2c>
    9058:	6063      	str	r3, [r4, #4]
    905a:	6014      	str	r4, [r2, #0]
    905c:	0028      	movs	r0, r5
    905e:	f001 fc7b 	bl	a958 <__malloc_unlock>
    9062:	bd70      	pop	{r4, r5, r6, pc}
    9064:	42a3      	cmp	r3, r4
    9066:	d909      	bls.n	907c <_free_r+0x44>
    9068:	6821      	ldr	r1, [r4, #0]
    906a:	1860      	adds	r0, r4, r1
    906c:	4283      	cmp	r3, r0
    906e:	d1f3      	bne.n	9058 <_free_r+0x20>
    9070:	6818      	ldr	r0, [r3, #0]
    9072:	685b      	ldr	r3, [r3, #4]
    9074:	1841      	adds	r1, r0, r1
    9076:	6021      	str	r1, [r4, #0]
    9078:	e7ee      	b.n	9058 <_free_r+0x20>
    907a:	0013      	movs	r3, r2
    907c:	685a      	ldr	r2, [r3, #4]
    907e:	2a00      	cmp	r2, #0
    9080:	d001      	beq.n	9086 <_free_r+0x4e>
    9082:	42a2      	cmp	r2, r4
    9084:	d9f9      	bls.n	907a <_free_r+0x42>
    9086:	6819      	ldr	r1, [r3, #0]
    9088:	1858      	adds	r0, r3, r1
    908a:	42a0      	cmp	r0, r4
    908c:	d10b      	bne.n	90a6 <_free_r+0x6e>
    908e:	6820      	ldr	r0, [r4, #0]
    9090:	1809      	adds	r1, r1, r0
    9092:	1858      	adds	r0, r3, r1
    9094:	6019      	str	r1, [r3, #0]
    9096:	4282      	cmp	r2, r0
    9098:	d1e0      	bne.n	905c <_free_r+0x24>
    909a:	6810      	ldr	r0, [r2, #0]
    909c:	6852      	ldr	r2, [r2, #4]
    909e:	1841      	adds	r1, r0, r1
    90a0:	6019      	str	r1, [r3, #0]
    90a2:	605a      	str	r2, [r3, #4]
    90a4:	e7da      	b.n	905c <_free_r+0x24>
    90a6:	42a0      	cmp	r0, r4
    90a8:	d902      	bls.n	90b0 <_free_r+0x78>
    90aa:	230c      	movs	r3, #12
    90ac:	602b      	str	r3, [r5, #0]
    90ae:	e7d5      	b.n	905c <_free_r+0x24>
    90b0:	6821      	ldr	r1, [r4, #0]
    90b2:	1860      	adds	r0, r4, r1
    90b4:	4282      	cmp	r2, r0
    90b6:	d103      	bne.n	90c0 <_free_r+0x88>
    90b8:	6810      	ldr	r0, [r2, #0]
    90ba:	6852      	ldr	r2, [r2, #4]
    90bc:	1841      	adds	r1, r0, r1
    90be:	6021      	str	r1, [r4, #0]
    90c0:	6062      	str	r2, [r4, #4]
    90c2:	605c      	str	r4, [r3, #4]
    90c4:	e7ca      	b.n	905c <_free_r+0x24>
    90c6:	46c0      	nop			; (mov r8, r8)
    90c8:	20001080 	.word	0x20001080

000090cc <_malloc_r>:
    90cc:	2303      	movs	r3, #3
    90ce:	b570      	push	{r4, r5, r6, lr}
    90d0:	1ccd      	adds	r5, r1, #3
    90d2:	439d      	bics	r5, r3
    90d4:	3508      	adds	r5, #8
    90d6:	0006      	movs	r6, r0
    90d8:	2d0c      	cmp	r5, #12
    90da:	d21e      	bcs.n	911a <_malloc_r+0x4e>
    90dc:	250c      	movs	r5, #12
    90de:	42a9      	cmp	r1, r5
    90e0:	d81d      	bhi.n	911e <_malloc_r+0x52>
    90e2:	0030      	movs	r0, r6
    90e4:	f001 fc37 	bl	a956 <__malloc_lock>
    90e8:	4a25      	ldr	r2, [pc, #148]	; (9180 <_malloc_r+0xb4>)
    90ea:	6814      	ldr	r4, [r2, #0]
    90ec:	0021      	movs	r1, r4
    90ee:	2900      	cmp	r1, #0
    90f0:	d119      	bne.n	9126 <_malloc_r+0x5a>
    90f2:	4c24      	ldr	r4, [pc, #144]	; (9184 <_malloc_r+0xb8>)
    90f4:	6823      	ldr	r3, [r4, #0]
    90f6:	2b00      	cmp	r3, #0
    90f8:	d103      	bne.n	9102 <_malloc_r+0x36>
    90fa:	0030      	movs	r0, r6
    90fc:	f000 fcbe 	bl	9a7c <_sbrk_r>
    9100:	6020      	str	r0, [r4, #0]
    9102:	0029      	movs	r1, r5
    9104:	0030      	movs	r0, r6
    9106:	f000 fcb9 	bl	9a7c <_sbrk_r>
    910a:	1c43      	adds	r3, r0, #1
    910c:	d12c      	bne.n	9168 <_malloc_r+0x9c>
    910e:	230c      	movs	r3, #12
    9110:	0030      	movs	r0, r6
    9112:	6033      	str	r3, [r6, #0]
    9114:	f001 fc20 	bl	a958 <__malloc_unlock>
    9118:	e003      	b.n	9122 <_malloc_r+0x56>
    911a:	2d00      	cmp	r5, #0
    911c:	dadf      	bge.n	90de <_malloc_r+0x12>
    911e:	230c      	movs	r3, #12
    9120:	6033      	str	r3, [r6, #0]
    9122:	2000      	movs	r0, #0
    9124:	bd70      	pop	{r4, r5, r6, pc}
    9126:	680b      	ldr	r3, [r1, #0]
    9128:	1b5b      	subs	r3, r3, r5
    912a:	d41a      	bmi.n	9162 <_malloc_r+0x96>
    912c:	2b0b      	cmp	r3, #11
    912e:	d903      	bls.n	9138 <_malloc_r+0x6c>
    9130:	600b      	str	r3, [r1, #0]
    9132:	18cc      	adds	r4, r1, r3
    9134:	6025      	str	r5, [r4, #0]
    9136:	e003      	b.n	9140 <_malloc_r+0x74>
    9138:	428c      	cmp	r4, r1
    913a:	d10e      	bne.n	915a <_malloc_r+0x8e>
    913c:	6863      	ldr	r3, [r4, #4]
    913e:	6013      	str	r3, [r2, #0]
    9140:	0030      	movs	r0, r6
    9142:	f001 fc09 	bl	a958 <__malloc_unlock>
    9146:	0020      	movs	r0, r4
    9148:	2207      	movs	r2, #7
    914a:	300b      	adds	r0, #11
    914c:	1d23      	adds	r3, r4, #4
    914e:	4390      	bics	r0, r2
    9150:	1ac3      	subs	r3, r0, r3
    9152:	d0e7      	beq.n	9124 <_malloc_r+0x58>
    9154:	425a      	negs	r2, r3
    9156:	50e2      	str	r2, [r4, r3]
    9158:	e7e4      	b.n	9124 <_malloc_r+0x58>
    915a:	684b      	ldr	r3, [r1, #4]
    915c:	6063      	str	r3, [r4, #4]
    915e:	000c      	movs	r4, r1
    9160:	e7ee      	b.n	9140 <_malloc_r+0x74>
    9162:	000c      	movs	r4, r1
    9164:	6849      	ldr	r1, [r1, #4]
    9166:	e7c2      	b.n	90ee <_malloc_r+0x22>
    9168:	2303      	movs	r3, #3
    916a:	1cc4      	adds	r4, r0, #3
    916c:	439c      	bics	r4, r3
    916e:	42a0      	cmp	r0, r4
    9170:	d0e0      	beq.n	9134 <_malloc_r+0x68>
    9172:	1a21      	subs	r1, r4, r0
    9174:	0030      	movs	r0, r6
    9176:	f000 fc81 	bl	9a7c <_sbrk_r>
    917a:	1c43      	adds	r3, r0, #1
    917c:	d1da      	bne.n	9134 <_malloc_r+0x68>
    917e:	e7c6      	b.n	910e <_malloc_r+0x42>
    9180:	20001080 	.word	0x20001080
    9184:	20001084 	.word	0x20001084

00009188 <__cvt>:
    9188:	b5f0      	push	{r4, r5, r6, r7, lr}
    918a:	b08b      	sub	sp, #44	; 0x2c
    918c:	0014      	movs	r4, r2
    918e:	1e1d      	subs	r5, r3, #0
    9190:	9912      	ldr	r1, [sp, #72]	; 0x48
    9192:	da53      	bge.n	923c <__cvt+0xb4>
    9194:	2480      	movs	r4, #128	; 0x80
    9196:	0624      	lsls	r4, r4, #24
    9198:	191b      	adds	r3, r3, r4
    919a:	001d      	movs	r5, r3
    919c:	0014      	movs	r4, r2
    919e:	232d      	movs	r3, #45	; 0x2d
    91a0:	700b      	strb	r3, [r1, #0]
    91a2:	2320      	movs	r3, #32
    91a4:	9e14      	ldr	r6, [sp, #80]	; 0x50
    91a6:	2203      	movs	r2, #3
    91a8:	439e      	bics	r6, r3
    91aa:	2e46      	cmp	r6, #70	; 0x46
    91ac:	d007      	beq.n	91be <__cvt+0x36>
    91ae:	0033      	movs	r3, r6
    91b0:	3b45      	subs	r3, #69	; 0x45
    91b2:	4259      	negs	r1, r3
    91b4:	414b      	adcs	r3, r1
    91b6:	9910      	ldr	r1, [sp, #64]	; 0x40
    91b8:	3a01      	subs	r2, #1
    91ba:	18cb      	adds	r3, r1, r3
    91bc:	9310      	str	r3, [sp, #64]	; 0x40
    91be:	ab09      	add	r3, sp, #36	; 0x24
    91c0:	9304      	str	r3, [sp, #16]
    91c2:	ab08      	add	r3, sp, #32
    91c4:	9303      	str	r3, [sp, #12]
    91c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    91c8:	9200      	str	r2, [sp, #0]
    91ca:	9302      	str	r3, [sp, #8]
    91cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
    91ce:	0022      	movs	r2, r4
    91d0:	9301      	str	r3, [sp, #4]
    91d2:	002b      	movs	r3, r5
    91d4:	f000 fdc0 	bl	9d58 <_dtoa_r>
    91d8:	0007      	movs	r7, r0
    91da:	2e47      	cmp	r6, #71	; 0x47
    91dc:	d102      	bne.n	91e4 <__cvt+0x5c>
    91de:	9b11      	ldr	r3, [sp, #68]	; 0x44
    91e0:	07db      	lsls	r3, r3, #31
    91e2:	d524      	bpl.n	922e <__cvt+0xa6>
    91e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    91e6:	18fb      	adds	r3, r7, r3
    91e8:	9307      	str	r3, [sp, #28]
    91ea:	2e46      	cmp	r6, #70	; 0x46
    91ec:	d114      	bne.n	9218 <__cvt+0x90>
    91ee:	783b      	ldrb	r3, [r7, #0]
    91f0:	2b30      	cmp	r3, #48	; 0x30
    91f2:	d10c      	bne.n	920e <__cvt+0x86>
    91f4:	2200      	movs	r2, #0
    91f6:	2300      	movs	r3, #0
    91f8:	0020      	movs	r0, r4
    91fa:	0029      	movs	r1, r5
    91fc:	f7fe f8dc 	bl	73b8 <__aeabi_dcmpeq>
    9200:	2800      	cmp	r0, #0
    9202:	d104      	bne.n	920e <__cvt+0x86>
    9204:	2301      	movs	r3, #1
    9206:	9a10      	ldr	r2, [sp, #64]	; 0x40
    9208:	1a9b      	subs	r3, r3, r2
    920a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    920c:	6013      	str	r3, [r2, #0]
    920e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    9210:	9a07      	ldr	r2, [sp, #28]
    9212:	681b      	ldr	r3, [r3, #0]
    9214:	18d3      	adds	r3, r2, r3
    9216:	9307      	str	r3, [sp, #28]
    9218:	2200      	movs	r2, #0
    921a:	2300      	movs	r3, #0
    921c:	0020      	movs	r0, r4
    921e:	0029      	movs	r1, r5
    9220:	f7fe f8ca 	bl	73b8 <__aeabi_dcmpeq>
    9224:	2230      	movs	r2, #48	; 0x30
    9226:	2800      	cmp	r0, #0
    9228:	d00d      	beq.n	9246 <__cvt+0xbe>
    922a:	9b07      	ldr	r3, [sp, #28]
    922c:	9309      	str	r3, [sp, #36]	; 0x24
    922e:	0038      	movs	r0, r7
    9230:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9232:	9a15      	ldr	r2, [sp, #84]	; 0x54
    9234:	1bdb      	subs	r3, r3, r7
    9236:	6013      	str	r3, [r2, #0]
    9238:	b00b      	add	sp, #44	; 0x2c
    923a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    923c:	2300      	movs	r3, #0
    923e:	e7af      	b.n	91a0 <__cvt+0x18>
    9240:	1c59      	adds	r1, r3, #1
    9242:	9109      	str	r1, [sp, #36]	; 0x24
    9244:	701a      	strb	r2, [r3, #0]
    9246:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9248:	9907      	ldr	r1, [sp, #28]
    924a:	4299      	cmp	r1, r3
    924c:	d8f8      	bhi.n	9240 <__cvt+0xb8>
    924e:	e7ee      	b.n	922e <__cvt+0xa6>

00009250 <__exponent>:
    9250:	b5f0      	push	{r4, r5, r6, r7, lr}
    9252:	232b      	movs	r3, #43	; 0x2b
    9254:	b085      	sub	sp, #20
    9256:	0007      	movs	r7, r0
    9258:	000c      	movs	r4, r1
    925a:	7002      	strb	r2, [r0, #0]
    925c:	1c86      	adds	r6, r0, #2
    925e:	2900      	cmp	r1, #0
    9260:	da01      	bge.n	9266 <__exponent+0x16>
    9262:	232d      	movs	r3, #45	; 0x2d
    9264:	424c      	negs	r4, r1
    9266:	707b      	strb	r3, [r7, #1]
    9268:	2c09      	cmp	r4, #9
    926a:	dd23      	ble.n	92b4 <__exponent+0x64>
    926c:	ab02      	add	r3, sp, #8
    926e:	1ddd      	adds	r5, r3, #7
    9270:	1e6b      	subs	r3, r5, #1
    9272:	0020      	movs	r0, r4
    9274:	210a      	movs	r1, #10
    9276:	9301      	str	r3, [sp, #4]
    9278:	f7fe f888 	bl	738c <__aeabi_idivmod>
    927c:	1e6b      	subs	r3, r5, #1
    927e:	3130      	adds	r1, #48	; 0x30
    9280:	7019      	strb	r1, [r3, #0]
    9282:	0020      	movs	r0, r4
    9284:	210a      	movs	r1, #10
    9286:	f7fd ff9b 	bl	71c0 <__divsi3>
    928a:	0004      	movs	r4, r0
    928c:	2809      	cmp	r0, #9
    928e:	dc0a      	bgt.n	92a6 <__exponent+0x56>
    9290:	3d02      	subs	r5, #2
    9292:	3430      	adds	r4, #48	; 0x30
    9294:	702c      	strb	r4, [r5, #0]
    9296:	ab02      	add	r3, sp, #8
    9298:	3307      	adds	r3, #7
    929a:	0030      	movs	r0, r6
    929c:	42ab      	cmp	r3, r5
    929e:	d804      	bhi.n	92aa <__exponent+0x5a>
    92a0:	1bc0      	subs	r0, r0, r7
    92a2:	b005      	add	sp, #20
    92a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    92a6:	9d01      	ldr	r5, [sp, #4]
    92a8:	e7e2      	b.n	9270 <__exponent+0x20>
    92aa:	782b      	ldrb	r3, [r5, #0]
    92ac:	3501      	adds	r5, #1
    92ae:	7033      	strb	r3, [r6, #0]
    92b0:	3601      	adds	r6, #1
    92b2:	e7f0      	b.n	9296 <__exponent+0x46>
    92b4:	2330      	movs	r3, #48	; 0x30
    92b6:	18e4      	adds	r4, r4, r3
    92b8:	7033      	strb	r3, [r6, #0]
    92ba:	1cb0      	adds	r0, r6, #2
    92bc:	7074      	strb	r4, [r6, #1]
    92be:	e7ef      	b.n	92a0 <__exponent+0x50>

000092c0 <_printf_float>:
    92c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    92c2:	b095      	sub	sp, #84	; 0x54
    92c4:	000c      	movs	r4, r1
    92c6:	920a      	str	r2, [sp, #40]	; 0x28
    92c8:	930b      	str	r3, [sp, #44]	; 0x2c
    92ca:	9d1a      	ldr	r5, [sp, #104]	; 0x68
    92cc:	9009      	str	r0, [sp, #36]	; 0x24
    92ce:	f001 fb2b 	bl	a928 <_localeconv_r>
    92d2:	6803      	ldr	r3, [r0, #0]
    92d4:	0018      	movs	r0, r3
    92d6:	930d      	str	r3, [sp, #52]	; 0x34
    92d8:	f000 fc0c 	bl	9af4 <strlen>
    92dc:	2300      	movs	r3, #0
    92de:	9312      	str	r3, [sp, #72]	; 0x48
    92e0:	6823      	ldr	r3, [r4, #0]
    92e2:	900e      	str	r0, [sp, #56]	; 0x38
    92e4:	930c      	str	r3, [sp, #48]	; 0x30
    92e6:	990c      	ldr	r1, [sp, #48]	; 0x30
    92e8:	7e27      	ldrb	r7, [r4, #24]
    92ea:	682b      	ldr	r3, [r5, #0]
    92ec:	2207      	movs	r2, #7
    92ee:	05c9      	lsls	r1, r1, #23
    92f0:	d547      	bpl.n	9382 <_printf_float+0xc2>
    92f2:	189b      	adds	r3, r3, r2
    92f4:	4393      	bics	r3, r2
    92f6:	001a      	movs	r2, r3
    92f8:	3208      	adds	r2, #8
    92fa:	602a      	str	r2, [r5, #0]
    92fc:	681a      	ldr	r2, [r3, #0]
    92fe:	685b      	ldr	r3, [r3, #4]
    9300:	64a2      	str	r2, [r4, #72]	; 0x48
    9302:	64e3      	str	r3, [r4, #76]	; 0x4c
    9304:	2201      	movs	r2, #1
    9306:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
    9308:	6ca6      	ldr	r6, [r4, #72]	; 0x48
    930a:	006b      	lsls	r3, r5, #1
    930c:	085b      	lsrs	r3, r3, #1
    930e:	930f      	str	r3, [sp, #60]	; 0x3c
    9310:	4252      	negs	r2, r2
    9312:	4ba7      	ldr	r3, [pc, #668]	; (95b0 <_printf_float+0x2f0>)
    9314:	0030      	movs	r0, r6
    9316:	990f      	ldr	r1, [sp, #60]	; 0x3c
    9318:	f7ff fd56 	bl	8dc8 <__aeabi_dcmpun>
    931c:	2800      	cmp	r0, #0
    931e:	d000      	beq.n	9322 <_printf_float+0x62>
    9320:	e206      	b.n	9730 <_printf_float+0x470>
    9322:	2201      	movs	r2, #1
    9324:	4ba2      	ldr	r3, [pc, #648]	; (95b0 <_printf_float+0x2f0>)
    9326:	4252      	negs	r2, r2
    9328:	0030      	movs	r0, r6
    932a:	990f      	ldr	r1, [sp, #60]	; 0x3c
    932c:	f7fe f854 	bl	73d8 <__aeabi_dcmple>
    9330:	2800      	cmp	r0, #0
    9332:	d000      	beq.n	9336 <_printf_float+0x76>
    9334:	e1fc      	b.n	9730 <_printf_float+0x470>
    9336:	2200      	movs	r2, #0
    9338:	2300      	movs	r3, #0
    933a:	0030      	movs	r0, r6
    933c:	0029      	movs	r1, r5
    933e:	f7fe f841 	bl	73c4 <__aeabi_dcmplt>
    9342:	2800      	cmp	r0, #0
    9344:	d003      	beq.n	934e <_printf_float+0x8e>
    9346:	0023      	movs	r3, r4
    9348:	222d      	movs	r2, #45	; 0x2d
    934a:	3343      	adds	r3, #67	; 0x43
    934c:	701a      	strb	r2, [r3, #0]
    934e:	4d99      	ldr	r5, [pc, #612]	; (95b4 <_printf_float+0x2f4>)
    9350:	2f47      	cmp	r7, #71	; 0x47
    9352:	d800      	bhi.n	9356 <_printf_float+0x96>
    9354:	4d98      	ldr	r5, [pc, #608]	; (95b8 <_printf_float+0x2f8>)
    9356:	2303      	movs	r3, #3
    9358:	2600      	movs	r6, #0
    935a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    935c:	6123      	str	r3, [r4, #16]
    935e:	3301      	adds	r3, #1
    9360:	439a      	bics	r2, r3
    9362:	6022      	str	r2, [r4, #0]
    9364:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9366:	aa13      	add	r2, sp, #76	; 0x4c
    9368:	9300      	str	r3, [sp, #0]
    936a:	0021      	movs	r1, r4
    936c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    936e:	9809      	ldr	r0, [sp, #36]	; 0x24
    9370:	f000 f9f2 	bl	9758 <_printf_common>
    9374:	1c43      	adds	r3, r0, #1
    9376:	d000      	beq.n	937a <_printf_float+0xba>
    9378:	e09c      	b.n	94b4 <_printf_float+0x1f4>
    937a:	2001      	movs	r0, #1
    937c:	4240      	negs	r0, r0
    937e:	b015      	add	sp, #84	; 0x54
    9380:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9382:	3307      	adds	r3, #7
    9384:	e7b6      	b.n	92f4 <_printf_float+0x34>
    9386:	2380      	movs	r3, #128	; 0x80
    9388:	6862      	ldr	r2, [r4, #4]
    938a:	00db      	lsls	r3, r3, #3
    938c:	1c51      	adds	r1, r2, #1
    938e:	d145      	bne.n	941c <_printf_float+0x15c>
    9390:	3207      	adds	r2, #7
    9392:	6062      	str	r2, [r4, #4]
    9394:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    9396:	2100      	movs	r1, #0
    9398:	4313      	orrs	r3, r2
    939a:	aa12      	add	r2, sp, #72	; 0x48
    939c:	9205      	str	r2, [sp, #20]
    939e:	aa11      	add	r2, sp, #68	; 0x44
    93a0:	9203      	str	r2, [sp, #12]
    93a2:	2223      	movs	r2, #35	; 0x23
    93a4:	6023      	str	r3, [r4, #0]
    93a6:	9106      	str	r1, [sp, #24]
    93a8:	9301      	str	r3, [sp, #4]
    93aa:	a908      	add	r1, sp, #32
    93ac:	6863      	ldr	r3, [r4, #4]
    93ae:	1852      	adds	r2, r2, r1
    93b0:	9202      	str	r2, [sp, #8]
    93b2:	9300      	str	r3, [sp, #0]
    93b4:	0032      	movs	r2, r6
    93b6:	002b      	movs	r3, r5
    93b8:	9704      	str	r7, [sp, #16]
    93ba:	9809      	ldr	r0, [sp, #36]	; 0x24
    93bc:	f7ff fee4 	bl	9188 <__cvt>
    93c0:	2320      	movs	r3, #32
    93c2:	003a      	movs	r2, r7
    93c4:	0005      	movs	r5, r0
    93c6:	439a      	bics	r2, r3
    93c8:	2a47      	cmp	r2, #71	; 0x47
    93ca:	d107      	bne.n	93dc <_printf_float+0x11c>
    93cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
    93ce:	1cda      	adds	r2, r3, #3
    93d0:	db02      	blt.n	93d8 <_printf_float+0x118>
    93d2:	6862      	ldr	r2, [r4, #4]
    93d4:	4293      	cmp	r3, r2
    93d6:	dd5b      	ble.n	9490 <_printf_float+0x1d0>
    93d8:	3f02      	subs	r7, #2
    93da:	b2ff      	uxtb	r7, r7
    93dc:	9911      	ldr	r1, [sp, #68]	; 0x44
    93de:	2f65      	cmp	r7, #101	; 0x65
    93e0:	d83b      	bhi.n	945a <_printf_float+0x19a>
    93e2:	0020      	movs	r0, r4
    93e4:	3901      	subs	r1, #1
    93e6:	003a      	movs	r2, r7
    93e8:	3050      	adds	r0, #80	; 0x50
    93ea:	9111      	str	r1, [sp, #68]	; 0x44
    93ec:	f7ff ff30 	bl	9250 <__exponent>
    93f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
    93f2:	0006      	movs	r6, r0
    93f4:	1883      	adds	r3, r0, r2
    93f6:	6123      	str	r3, [r4, #16]
    93f8:	2a01      	cmp	r2, #1
    93fa:	dc02      	bgt.n	9402 <_printf_float+0x142>
    93fc:	6822      	ldr	r2, [r4, #0]
    93fe:	07d2      	lsls	r2, r2, #31
    9400:	d501      	bpl.n	9406 <_printf_float+0x146>
    9402:	3301      	adds	r3, #1
    9404:	6123      	str	r3, [r4, #16]
    9406:	2323      	movs	r3, #35	; 0x23
    9408:	aa08      	add	r2, sp, #32
    940a:	189b      	adds	r3, r3, r2
    940c:	781b      	ldrb	r3, [r3, #0]
    940e:	2b00      	cmp	r3, #0
    9410:	d0a8      	beq.n	9364 <_printf_float+0xa4>
    9412:	0023      	movs	r3, r4
    9414:	222d      	movs	r2, #45	; 0x2d
    9416:	3343      	adds	r3, #67	; 0x43
    9418:	701a      	strb	r2, [r3, #0]
    941a:	e7a3      	b.n	9364 <_printf_float+0xa4>
    941c:	2f67      	cmp	r7, #103	; 0x67
    941e:	d001      	beq.n	9424 <_printf_float+0x164>
    9420:	2f47      	cmp	r7, #71	; 0x47
    9422:	d1b7      	bne.n	9394 <_printf_float+0xd4>
    9424:	2a00      	cmp	r2, #0
    9426:	d016      	beq.n	9456 <_printf_float+0x196>
    9428:	990c      	ldr	r1, [sp, #48]	; 0x30
    942a:	a808      	add	r0, sp, #32
    942c:	430b      	orrs	r3, r1
    942e:	2100      	movs	r1, #0
    9430:	9106      	str	r1, [sp, #24]
    9432:	a912      	add	r1, sp, #72	; 0x48
    9434:	9105      	str	r1, [sp, #20]
    9436:	a911      	add	r1, sp, #68	; 0x44
    9438:	9103      	str	r1, [sp, #12]
    943a:	2123      	movs	r1, #35	; 0x23
    943c:	1809      	adds	r1, r1, r0
    943e:	6023      	str	r3, [r4, #0]
    9440:	9301      	str	r3, [sp, #4]
    9442:	9200      	str	r2, [sp, #0]
    9444:	002b      	movs	r3, r5
    9446:	9704      	str	r7, [sp, #16]
    9448:	9102      	str	r1, [sp, #8]
    944a:	0032      	movs	r2, r6
    944c:	9809      	ldr	r0, [sp, #36]	; 0x24
    944e:	f7ff fe9b 	bl	9188 <__cvt>
    9452:	0005      	movs	r5, r0
    9454:	e7ba      	b.n	93cc <_printf_float+0x10c>
    9456:	2201      	movs	r2, #1
    9458:	e79b      	b.n	9392 <_printf_float+0xd2>
    945a:	2f66      	cmp	r7, #102	; 0x66
    945c:	d119      	bne.n	9492 <_printf_float+0x1d2>
    945e:	6863      	ldr	r3, [r4, #4]
    9460:	2900      	cmp	r1, #0
    9462:	dd0c      	ble.n	947e <_printf_float+0x1be>
    9464:	6121      	str	r1, [r4, #16]
    9466:	2b00      	cmp	r3, #0
    9468:	d102      	bne.n	9470 <_printf_float+0x1b0>
    946a:	6822      	ldr	r2, [r4, #0]
    946c:	07d2      	lsls	r2, r2, #31
    946e:	d502      	bpl.n	9476 <_printf_float+0x1b6>
    9470:	3301      	adds	r3, #1
    9472:	185b      	adds	r3, r3, r1
    9474:	6123      	str	r3, [r4, #16]
    9476:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9478:	2600      	movs	r6, #0
    947a:	65a3      	str	r3, [r4, #88]	; 0x58
    947c:	e7c3      	b.n	9406 <_printf_float+0x146>
    947e:	2b00      	cmp	r3, #0
    9480:	d103      	bne.n	948a <_printf_float+0x1ca>
    9482:	2201      	movs	r2, #1
    9484:	6821      	ldr	r1, [r4, #0]
    9486:	4211      	tst	r1, r2
    9488:	d000      	beq.n	948c <_printf_float+0x1cc>
    948a:	1c9a      	adds	r2, r3, #2
    948c:	6122      	str	r2, [r4, #16]
    948e:	e7f2      	b.n	9476 <_printf_float+0x1b6>
    9490:	2767      	movs	r7, #103	; 0x67
    9492:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9494:	9812      	ldr	r0, [sp, #72]	; 0x48
    9496:	4283      	cmp	r3, r0
    9498:	db05      	blt.n	94a6 <_printf_float+0x1e6>
    949a:	6822      	ldr	r2, [r4, #0]
    949c:	6123      	str	r3, [r4, #16]
    949e:	07d2      	lsls	r2, r2, #31
    94a0:	d5e9      	bpl.n	9476 <_printf_float+0x1b6>
    94a2:	3301      	adds	r3, #1
    94a4:	e7e6      	b.n	9474 <_printf_float+0x1b4>
    94a6:	2201      	movs	r2, #1
    94a8:	2b00      	cmp	r3, #0
    94aa:	dc01      	bgt.n	94b0 <_printf_float+0x1f0>
    94ac:	1892      	adds	r2, r2, r2
    94ae:	1ad2      	subs	r2, r2, r3
    94b0:	1812      	adds	r2, r2, r0
    94b2:	e7eb      	b.n	948c <_printf_float+0x1cc>
    94b4:	6822      	ldr	r2, [r4, #0]
    94b6:	0553      	lsls	r3, r2, #21
    94b8:	d408      	bmi.n	94cc <_printf_float+0x20c>
    94ba:	6923      	ldr	r3, [r4, #16]
    94bc:	002a      	movs	r2, r5
    94be:	990a      	ldr	r1, [sp, #40]	; 0x28
    94c0:	9809      	ldr	r0, [sp, #36]	; 0x24
    94c2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    94c4:	47a8      	blx	r5
    94c6:	1c43      	adds	r3, r0, #1
    94c8:	d129      	bne.n	951e <_printf_float+0x25e>
    94ca:	e756      	b.n	937a <_printf_float+0xba>
    94cc:	2f65      	cmp	r7, #101	; 0x65
    94ce:	d800      	bhi.n	94d2 <_printf_float+0x212>
    94d0:	e0dc      	b.n	968c <_printf_float+0x3cc>
    94d2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    94d4:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    94d6:	2200      	movs	r2, #0
    94d8:	2300      	movs	r3, #0
    94da:	f7fd ff6d 	bl	73b8 <__aeabi_dcmpeq>
    94de:	2800      	cmp	r0, #0
    94e0:	d035      	beq.n	954e <_printf_float+0x28e>
    94e2:	2301      	movs	r3, #1
    94e4:	4a35      	ldr	r2, [pc, #212]	; (95bc <_printf_float+0x2fc>)
    94e6:	990a      	ldr	r1, [sp, #40]	; 0x28
    94e8:	9809      	ldr	r0, [sp, #36]	; 0x24
    94ea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    94ec:	47a8      	blx	r5
    94ee:	1c43      	adds	r3, r0, #1
    94f0:	d100      	bne.n	94f4 <_printf_float+0x234>
    94f2:	e742      	b.n	937a <_printf_float+0xba>
    94f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
    94f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    94f8:	4293      	cmp	r3, r2
    94fa:	db02      	blt.n	9502 <_printf_float+0x242>
    94fc:	6823      	ldr	r3, [r4, #0]
    94fe:	07db      	lsls	r3, r3, #31
    9500:	d50d      	bpl.n	951e <_printf_float+0x25e>
    9502:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    9504:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    9506:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    9508:	990a      	ldr	r1, [sp, #40]	; 0x28
    950a:	9809      	ldr	r0, [sp, #36]	; 0x24
    950c:	47a8      	blx	r5
    950e:	2500      	movs	r5, #0
    9510:	1c43      	adds	r3, r0, #1
    9512:	d100      	bne.n	9516 <_printf_float+0x256>
    9514:	e731      	b.n	937a <_printf_float+0xba>
    9516:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9518:	3b01      	subs	r3, #1
    951a:	429d      	cmp	r5, r3
    951c:	db0b      	blt.n	9536 <_printf_float+0x276>
    951e:	6823      	ldr	r3, [r4, #0]
    9520:	2500      	movs	r5, #0
    9522:	079b      	lsls	r3, r3, #30
    9524:	d500      	bpl.n	9528 <_printf_float+0x268>
    9526:	e0fd      	b.n	9724 <_printf_float+0x464>
    9528:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    952a:	68e0      	ldr	r0, [r4, #12]
    952c:	4298      	cmp	r0, r3
    952e:	db00      	blt.n	9532 <_printf_float+0x272>
    9530:	e725      	b.n	937e <_printf_float+0xbe>
    9532:	0018      	movs	r0, r3
    9534:	e723      	b.n	937e <_printf_float+0xbe>
    9536:	0022      	movs	r2, r4
    9538:	2301      	movs	r3, #1
    953a:	321a      	adds	r2, #26
    953c:	990a      	ldr	r1, [sp, #40]	; 0x28
    953e:	9809      	ldr	r0, [sp, #36]	; 0x24
    9540:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    9542:	47b0      	blx	r6
    9544:	1c43      	adds	r3, r0, #1
    9546:	d100      	bne.n	954a <_printf_float+0x28a>
    9548:	e717      	b.n	937a <_printf_float+0xba>
    954a:	3501      	adds	r5, #1
    954c:	e7e3      	b.n	9516 <_printf_float+0x256>
    954e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9550:	2b00      	cmp	r3, #0
    9552:	dc35      	bgt.n	95c0 <_printf_float+0x300>
    9554:	2301      	movs	r3, #1
    9556:	4a19      	ldr	r2, [pc, #100]	; (95bc <_printf_float+0x2fc>)
    9558:	990a      	ldr	r1, [sp, #40]	; 0x28
    955a:	9809      	ldr	r0, [sp, #36]	; 0x24
    955c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    955e:	47b0      	blx	r6
    9560:	1c43      	adds	r3, r0, #1
    9562:	d100      	bne.n	9566 <_printf_float+0x2a6>
    9564:	e709      	b.n	937a <_printf_float+0xba>
    9566:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9568:	2b00      	cmp	r3, #0
    956a:	d105      	bne.n	9578 <_printf_float+0x2b8>
    956c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    956e:	2b00      	cmp	r3, #0
    9570:	d102      	bne.n	9578 <_printf_float+0x2b8>
    9572:	6823      	ldr	r3, [r4, #0]
    9574:	07db      	lsls	r3, r3, #31
    9576:	d5d2      	bpl.n	951e <_printf_float+0x25e>
    9578:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    957a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    957c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    957e:	990a      	ldr	r1, [sp, #40]	; 0x28
    9580:	9809      	ldr	r0, [sp, #36]	; 0x24
    9582:	47b0      	blx	r6
    9584:	2600      	movs	r6, #0
    9586:	1c43      	adds	r3, r0, #1
    9588:	d100      	bne.n	958c <_printf_float+0x2cc>
    958a:	e6f6      	b.n	937a <_printf_float+0xba>
    958c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    958e:	425b      	negs	r3, r3
    9590:	429e      	cmp	r6, r3
    9592:	db01      	blt.n	9598 <_printf_float+0x2d8>
    9594:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9596:	e791      	b.n	94bc <_printf_float+0x1fc>
    9598:	0022      	movs	r2, r4
    959a:	2301      	movs	r3, #1
    959c:	321a      	adds	r2, #26
    959e:	990a      	ldr	r1, [sp, #40]	; 0x28
    95a0:	9809      	ldr	r0, [sp, #36]	; 0x24
    95a2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    95a4:	47b8      	blx	r7
    95a6:	1c43      	adds	r3, r0, #1
    95a8:	d100      	bne.n	95ac <_printf_float+0x2ec>
    95aa:	e6e6      	b.n	937a <_printf_float+0xba>
    95ac:	3601      	adds	r6, #1
    95ae:	e7ed      	b.n	958c <_printf_float+0x2cc>
    95b0:	7fefffff 	.word	0x7fefffff
    95b4:	0000bb2a 	.word	0x0000bb2a
    95b8:	0000bb26 	.word	0x0000bb26
    95bc:	0000b477 	.word	0x0000b477
    95c0:	6da3      	ldr	r3, [r4, #88]	; 0x58
    95c2:	9e12      	ldr	r6, [sp, #72]	; 0x48
    95c4:	429e      	cmp	r6, r3
    95c6:	dd00      	ble.n	95ca <_printf_float+0x30a>
    95c8:	001e      	movs	r6, r3
    95ca:	2e00      	cmp	r6, #0
    95cc:	dc35      	bgt.n	963a <_printf_float+0x37a>
    95ce:	2300      	movs	r3, #0
    95d0:	930c      	str	r3, [sp, #48]	; 0x30
    95d2:	43f3      	mvns	r3, r6
    95d4:	17db      	asrs	r3, r3, #31
    95d6:	930f      	str	r3, [sp, #60]	; 0x3c
    95d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    95da:	6da7      	ldr	r7, [r4, #88]	; 0x58
    95dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    95de:	4033      	ands	r3, r6
    95e0:	1afb      	subs	r3, r7, r3
    95e2:	429a      	cmp	r2, r3
    95e4:	db32      	blt.n	964c <_printf_float+0x38c>
    95e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    95e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
    95ea:	4293      	cmp	r3, r2
    95ec:	db3c      	blt.n	9668 <_printf_float+0x3a8>
    95ee:	6823      	ldr	r3, [r4, #0]
    95f0:	07db      	lsls	r3, r3, #31
    95f2:	d439      	bmi.n	9668 <_printf_float+0x3a8>
    95f4:	9e12      	ldr	r6, [sp, #72]	; 0x48
    95f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
    95f8:	1bf3      	subs	r3, r6, r7
    95fa:	1ab6      	subs	r6, r6, r2
    95fc:	429e      	cmp	r6, r3
    95fe:	dd00      	ble.n	9602 <_printf_float+0x342>
    9600:	001e      	movs	r6, r3
    9602:	2e00      	cmp	r6, #0
    9604:	dc39      	bgt.n	967a <_printf_float+0x3ba>
    9606:	43f7      	mvns	r7, r6
    9608:	2500      	movs	r5, #0
    960a:	17fb      	asrs	r3, r7, #31
    960c:	930c      	str	r3, [sp, #48]	; 0x30
    960e:	9a11      	ldr	r2, [sp, #68]	; 0x44
    9610:	9b12      	ldr	r3, [sp, #72]	; 0x48
    9612:	990c      	ldr	r1, [sp, #48]	; 0x30
    9614:	1a9b      	subs	r3, r3, r2
    9616:	0032      	movs	r2, r6
    9618:	400a      	ands	r2, r1
    961a:	1a9b      	subs	r3, r3, r2
    961c:	429d      	cmp	r5, r3
    961e:	db00      	blt.n	9622 <_printf_float+0x362>
    9620:	e77d      	b.n	951e <_printf_float+0x25e>
    9622:	0022      	movs	r2, r4
    9624:	2301      	movs	r3, #1
    9626:	321a      	adds	r2, #26
    9628:	990a      	ldr	r1, [sp, #40]	; 0x28
    962a:	9809      	ldr	r0, [sp, #36]	; 0x24
    962c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    962e:	47b8      	blx	r7
    9630:	1c43      	adds	r3, r0, #1
    9632:	d100      	bne.n	9636 <_printf_float+0x376>
    9634:	e6a1      	b.n	937a <_printf_float+0xba>
    9636:	3501      	adds	r5, #1
    9638:	e7e9      	b.n	960e <_printf_float+0x34e>
    963a:	0033      	movs	r3, r6
    963c:	002a      	movs	r2, r5
    963e:	990a      	ldr	r1, [sp, #40]	; 0x28
    9640:	9809      	ldr	r0, [sp, #36]	; 0x24
    9642:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    9644:	47b8      	blx	r7
    9646:	1c43      	adds	r3, r0, #1
    9648:	d1c1      	bne.n	95ce <_printf_float+0x30e>
    964a:	e696      	b.n	937a <_printf_float+0xba>
    964c:	0022      	movs	r2, r4
    964e:	2301      	movs	r3, #1
    9650:	321a      	adds	r2, #26
    9652:	990a      	ldr	r1, [sp, #40]	; 0x28
    9654:	9809      	ldr	r0, [sp, #36]	; 0x24
    9656:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    9658:	47b8      	blx	r7
    965a:	1c43      	adds	r3, r0, #1
    965c:	d100      	bne.n	9660 <_printf_float+0x3a0>
    965e:	e68c      	b.n	937a <_printf_float+0xba>
    9660:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9662:	3301      	adds	r3, #1
    9664:	930c      	str	r3, [sp, #48]	; 0x30
    9666:	e7b7      	b.n	95d8 <_printf_float+0x318>
    9668:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    966a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    966c:	990a      	ldr	r1, [sp, #40]	; 0x28
    966e:	9809      	ldr	r0, [sp, #36]	; 0x24
    9670:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    9672:	47b0      	blx	r6
    9674:	1c43      	adds	r3, r0, #1
    9676:	d1bd      	bne.n	95f4 <_printf_float+0x334>
    9678:	e67f      	b.n	937a <_printf_float+0xba>
    967a:	19ea      	adds	r2, r5, r7
    967c:	0033      	movs	r3, r6
    967e:	990a      	ldr	r1, [sp, #40]	; 0x28
    9680:	9809      	ldr	r0, [sp, #36]	; 0x24
    9682:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    9684:	47a8      	blx	r5
    9686:	1c43      	adds	r3, r0, #1
    9688:	d1bd      	bne.n	9606 <_printf_float+0x346>
    968a:	e676      	b.n	937a <_printf_float+0xba>
    968c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    968e:	2b01      	cmp	r3, #1
    9690:	dc02      	bgt.n	9698 <_printf_float+0x3d8>
    9692:	2301      	movs	r3, #1
    9694:	421a      	tst	r2, r3
    9696:	d038      	beq.n	970a <_printf_float+0x44a>
    9698:	2301      	movs	r3, #1
    969a:	002a      	movs	r2, r5
    969c:	990a      	ldr	r1, [sp, #40]	; 0x28
    969e:	9809      	ldr	r0, [sp, #36]	; 0x24
    96a0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    96a2:	47b8      	blx	r7
    96a4:	1c43      	adds	r3, r0, #1
    96a6:	d100      	bne.n	96aa <_printf_float+0x3ea>
    96a8:	e667      	b.n	937a <_printf_float+0xba>
    96aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    96ac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    96ae:	990a      	ldr	r1, [sp, #40]	; 0x28
    96b0:	9809      	ldr	r0, [sp, #36]	; 0x24
    96b2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    96b4:	47b8      	blx	r7
    96b6:	1c43      	adds	r3, r0, #1
    96b8:	d100      	bne.n	96bc <_printf_float+0x3fc>
    96ba:	e65e      	b.n	937a <_printf_float+0xba>
    96bc:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    96be:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    96c0:	2200      	movs	r2, #0
    96c2:	2300      	movs	r3, #0
    96c4:	f7fd fe78 	bl	73b8 <__aeabi_dcmpeq>
    96c8:	2800      	cmp	r0, #0
    96ca:	d008      	beq.n	96de <_printf_float+0x41e>
    96cc:	2500      	movs	r5, #0
    96ce:	9b12      	ldr	r3, [sp, #72]	; 0x48
    96d0:	3b01      	subs	r3, #1
    96d2:	429d      	cmp	r5, r3
    96d4:	db0d      	blt.n	96f2 <_printf_float+0x432>
    96d6:	0022      	movs	r2, r4
    96d8:	0033      	movs	r3, r6
    96da:	3250      	adds	r2, #80	; 0x50
    96dc:	e6ef      	b.n	94be <_printf_float+0x1fe>
    96de:	9b12      	ldr	r3, [sp, #72]	; 0x48
    96e0:	1c6a      	adds	r2, r5, #1
    96e2:	3b01      	subs	r3, #1
    96e4:	990a      	ldr	r1, [sp, #40]	; 0x28
    96e6:	9809      	ldr	r0, [sp, #36]	; 0x24
    96e8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    96ea:	47a8      	blx	r5
    96ec:	1c43      	adds	r3, r0, #1
    96ee:	d1f2      	bne.n	96d6 <_printf_float+0x416>
    96f0:	e643      	b.n	937a <_printf_float+0xba>
    96f2:	0022      	movs	r2, r4
    96f4:	2301      	movs	r3, #1
    96f6:	321a      	adds	r2, #26
    96f8:	990a      	ldr	r1, [sp, #40]	; 0x28
    96fa:	9809      	ldr	r0, [sp, #36]	; 0x24
    96fc:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    96fe:	47b8      	blx	r7
    9700:	1c43      	adds	r3, r0, #1
    9702:	d100      	bne.n	9706 <_printf_float+0x446>
    9704:	e639      	b.n	937a <_printf_float+0xba>
    9706:	3501      	adds	r5, #1
    9708:	e7e1      	b.n	96ce <_printf_float+0x40e>
    970a:	002a      	movs	r2, r5
    970c:	e7ea      	b.n	96e4 <_printf_float+0x424>
    970e:	0022      	movs	r2, r4
    9710:	2301      	movs	r3, #1
    9712:	3219      	adds	r2, #25
    9714:	990a      	ldr	r1, [sp, #40]	; 0x28
    9716:	9809      	ldr	r0, [sp, #36]	; 0x24
    9718:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    971a:	47b0      	blx	r6
    971c:	1c43      	adds	r3, r0, #1
    971e:	d100      	bne.n	9722 <_printf_float+0x462>
    9720:	e62b      	b.n	937a <_printf_float+0xba>
    9722:	3501      	adds	r5, #1
    9724:	68e3      	ldr	r3, [r4, #12]
    9726:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    9728:	1a9b      	subs	r3, r3, r2
    972a:	429d      	cmp	r5, r3
    972c:	dbef      	blt.n	970e <_printf_float+0x44e>
    972e:	e6fb      	b.n	9528 <_printf_float+0x268>
    9730:	0032      	movs	r2, r6
    9732:	002b      	movs	r3, r5
    9734:	0030      	movs	r0, r6
    9736:	0029      	movs	r1, r5
    9738:	f7ff fb46 	bl	8dc8 <__aeabi_dcmpun>
    973c:	2800      	cmp	r0, #0
    973e:	d100      	bne.n	9742 <_printf_float+0x482>
    9740:	e621      	b.n	9386 <_printf_float+0xc6>
    9742:	4d03      	ldr	r5, [pc, #12]	; (9750 <_printf_float+0x490>)
    9744:	2f47      	cmp	r7, #71	; 0x47
    9746:	d900      	bls.n	974a <_printf_float+0x48a>
    9748:	e605      	b.n	9356 <_printf_float+0x96>
    974a:	4d02      	ldr	r5, [pc, #8]	; (9754 <_printf_float+0x494>)
    974c:	e603      	b.n	9356 <_printf_float+0x96>
    974e:	46c0      	nop			; (mov r8, r8)
    9750:	0000bb32 	.word	0x0000bb32
    9754:	0000bb2e 	.word	0x0000bb2e

00009758 <_printf_common>:
    9758:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    975a:	0015      	movs	r5, r2
    975c:	9301      	str	r3, [sp, #4]
    975e:	688a      	ldr	r2, [r1, #8]
    9760:	690b      	ldr	r3, [r1, #16]
    9762:	9000      	str	r0, [sp, #0]
    9764:	000c      	movs	r4, r1
    9766:	4293      	cmp	r3, r2
    9768:	da00      	bge.n	976c <_printf_common+0x14>
    976a:	0013      	movs	r3, r2
    976c:	0022      	movs	r2, r4
    976e:	602b      	str	r3, [r5, #0]
    9770:	3243      	adds	r2, #67	; 0x43
    9772:	7812      	ldrb	r2, [r2, #0]
    9774:	2a00      	cmp	r2, #0
    9776:	d001      	beq.n	977c <_printf_common+0x24>
    9778:	3301      	adds	r3, #1
    977a:	602b      	str	r3, [r5, #0]
    977c:	6823      	ldr	r3, [r4, #0]
    977e:	069b      	lsls	r3, r3, #26
    9780:	d502      	bpl.n	9788 <_printf_common+0x30>
    9782:	682b      	ldr	r3, [r5, #0]
    9784:	3302      	adds	r3, #2
    9786:	602b      	str	r3, [r5, #0]
    9788:	2706      	movs	r7, #6
    978a:	6823      	ldr	r3, [r4, #0]
    978c:	401f      	ands	r7, r3
    978e:	d027      	beq.n	97e0 <_printf_common+0x88>
    9790:	0023      	movs	r3, r4
    9792:	3343      	adds	r3, #67	; 0x43
    9794:	781b      	ldrb	r3, [r3, #0]
    9796:	1e5a      	subs	r2, r3, #1
    9798:	4193      	sbcs	r3, r2
    979a:	6822      	ldr	r2, [r4, #0]
    979c:	0692      	lsls	r2, r2, #26
    979e:	d430      	bmi.n	9802 <_printf_common+0xaa>
    97a0:	0022      	movs	r2, r4
    97a2:	9901      	ldr	r1, [sp, #4]
    97a4:	3243      	adds	r2, #67	; 0x43
    97a6:	9800      	ldr	r0, [sp, #0]
    97a8:	9e08      	ldr	r6, [sp, #32]
    97aa:	47b0      	blx	r6
    97ac:	1c43      	adds	r3, r0, #1
    97ae:	d025      	beq.n	97fc <_printf_common+0xa4>
    97b0:	2306      	movs	r3, #6
    97b2:	6820      	ldr	r0, [r4, #0]
    97b4:	682a      	ldr	r2, [r5, #0]
    97b6:	68e1      	ldr	r1, [r4, #12]
    97b8:	4003      	ands	r3, r0
    97ba:	2500      	movs	r5, #0
    97bc:	2b04      	cmp	r3, #4
    97be:	d103      	bne.n	97c8 <_printf_common+0x70>
    97c0:	1a8d      	subs	r5, r1, r2
    97c2:	43eb      	mvns	r3, r5
    97c4:	17db      	asrs	r3, r3, #31
    97c6:	401d      	ands	r5, r3
    97c8:	68a3      	ldr	r3, [r4, #8]
    97ca:	6922      	ldr	r2, [r4, #16]
    97cc:	4293      	cmp	r3, r2
    97ce:	dd01      	ble.n	97d4 <_printf_common+0x7c>
    97d0:	1a9b      	subs	r3, r3, r2
    97d2:	18ed      	adds	r5, r5, r3
    97d4:	2700      	movs	r7, #0
    97d6:	42bd      	cmp	r5, r7
    97d8:	d120      	bne.n	981c <_printf_common+0xc4>
    97da:	2000      	movs	r0, #0
    97dc:	e010      	b.n	9800 <_printf_common+0xa8>
    97de:	3701      	adds	r7, #1
    97e0:	68e3      	ldr	r3, [r4, #12]
    97e2:	682a      	ldr	r2, [r5, #0]
    97e4:	1a9b      	subs	r3, r3, r2
    97e6:	429f      	cmp	r7, r3
    97e8:	dad2      	bge.n	9790 <_printf_common+0x38>
    97ea:	0022      	movs	r2, r4
    97ec:	2301      	movs	r3, #1
    97ee:	3219      	adds	r2, #25
    97f0:	9901      	ldr	r1, [sp, #4]
    97f2:	9800      	ldr	r0, [sp, #0]
    97f4:	9e08      	ldr	r6, [sp, #32]
    97f6:	47b0      	blx	r6
    97f8:	1c43      	adds	r3, r0, #1
    97fa:	d1f0      	bne.n	97de <_printf_common+0x86>
    97fc:	2001      	movs	r0, #1
    97fe:	4240      	negs	r0, r0
    9800:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    9802:	2030      	movs	r0, #48	; 0x30
    9804:	18e1      	adds	r1, r4, r3
    9806:	3143      	adds	r1, #67	; 0x43
    9808:	7008      	strb	r0, [r1, #0]
    980a:	0021      	movs	r1, r4
    980c:	1c5a      	adds	r2, r3, #1
    980e:	3145      	adds	r1, #69	; 0x45
    9810:	7809      	ldrb	r1, [r1, #0]
    9812:	18a2      	adds	r2, r4, r2
    9814:	3243      	adds	r2, #67	; 0x43
    9816:	3302      	adds	r3, #2
    9818:	7011      	strb	r1, [r2, #0]
    981a:	e7c1      	b.n	97a0 <_printf_common+0x48>
    981c:	0022      	movs	r2, r4
    981e:	2301      	movs	r3, #1
    9820:	321a      	adds	r2, #26
    9822:	9901      	ldr	r1, [sp, #4]
    9824:	9800      	ldr	r0, [sp, #0]
    9826:	9e08      	ldr	r6, [sp, #32]
    9828:	47b0      	blx	r6
    982a:	1c43      	adds	r3, r0, #1
    982c:	d0e6      	beq.n	97fc <_printf_common+0xa4>
    982e:	3701      	adds	r7, #1
    9830:	e7d1      	b.n	97d6 <_printf_common+0x7e>
	...

00009834 <_printf_i>:
    9834:	b5f0      	push	{r4, r5, r6, r7, lr}
    9836:	b08b      	sub	sp, #44	; 0x2c
    9838:	9206      	str	r2, [sp, #24]
    983a:	000a      	movs	r2, r1
    983c:	3243      	adds	r2, #67	; 0x43
    983e:	9307      	str	r3, [sp, #28]
    9840:	9005      	str	r0, [sp, #20]
    9842:	9204      	str	r2, [sp, #16]
    9844:	7e0a      	ldrb	r2, [r1, #24]
    9846:	000c      	movs	r4, r1
    9848:	9b10      	ldr	r3, [sp, #64]	; 0x40
    984a:	2a6e      	cmp	r2, #110	; 0x6e
    984c:	d100      	bne.n	9850 <_printf_i+0x1c>
    984e:	e08f      	b.n	9970 <_printf_i+0x13c>
    9850:	d817      	bhi.n	9882 <_printf_i+0x4e>
    9852:	2a63      	cmp	r2, #99	; 0x63
    9854:	d02c      	beq.n	98b0 <_printf_i+0x7c>
    9856:	d808      	bhi.n	986a <_printf_i+0x36>
    9858:	2a00      	cmp	r2, #0
    985a:	d100      	bne.n	985e <_printf_i+0x2a>
    985c:	e099      	b.n	9992 <_printf_i+0x15e>
    985e:	2a58      	cmp	r2, #88	; 0x58
    9860:	d054      	beq.n	990c <_printf_i+0xd8>
    9862:	0026      	movs	r6, r4
    9864:	3642      	adds	r6, #66	; 0x42
    9866:	7032      	strb	r2, [r6, #0]
    9868:	e029      	b.n	98be <_printf_i+0x8a>
    986a:	2a64      	cmp	r2, #100	; 0x64
    986c:	d001      	beq.n	9872 <_printf_i+0x3e>
    986e:	2a69      	cmp	r2, #105	; 0x69
    9870:	d1f7      	bne.n	9862 <_printf_i+0x2e>
    9872:	6821      	ldr	r1, [r4, #0]
    9874:	681a      	ldr	r2, [r3, #0]
    9876:	0608      	lsls	r0, r1, #24
    9878:	d523      	bpl.n	98c2 <_printf_i+0x8e>
    987a:	1d11      	adds	r1, r2, #4
    987c:	6019      	str	r1, [r3, #0]
    987e:	6815      	ldr	r5, [r2, #0]
    9880:	e025      	b.n	98ce <_printf_i+0x9a>
    9882:	2a73      	cmp	r2, #115	; 0x73
    9884:	d100      	bne.n	9888 <_printf_i+0x54>
    9886:	e088      	b.n	999a <_printf_i+0x166>
    9888:	d808      	bhi.n	989c <_printf_i+0x68>
    988a:	2a6f      	cmp	r2, #111	; 0x6f
    988c:	d029      	beq.n	98e2 <_printf_i+0xae>
    988e:	2a70      	cmp	r2, #112	; 0x70
    9890:	d1e7      	bne.n	9862 <_printf_i+0x2e>
    9892:	2220      	movs	r2, #32
    9894:	6809      	ldr	r1, [r1, #0]
    9896:	430a      	orrs	r2, r1
    9898:	6022      	str	r2, [r4, #0]
    989a:	e003      	b.n	98a4 <_printf_i+0x70>
    989c:	2a75      	cmp	r2, #117	; 0x75
    989e:	d020      	beq.n	98e2 <_printf_i+0xae>
    98a0:	2a78      	cmp	r2, #120	; 0x78
    98a2:	d1de      	bne.n	9862 <_printf_i+0x2e>
    98a4:	0022      	movs	r2, r4
    98a6:	2178      	movs	r1, #120	; 0x78
    98a8:	3245      	adds	r2, #69	; 0x45
    98aa:	7011      	strb	r1, [r2, #0]
    98ac:	4a6c      	ldr	r2, [pc, #432]	; (9a60 <_printf_i+0x22c>)
    98ae:	e030      	b.n	9912 <_printf_i+0xde>
    98b0:	000e      	movs	r6, r1
    98b2:	681a      	ldr	r2, [r3, #0]
    98b4:	3642      	adds	r6, #66	; 0x42
    98b6:	1d11      	adds	r1, r2, #4
    98b8:	6019      	str	r1, [r3, #0]
    98ba:	6813      	ldr	r3, [r2, #0]
    98bc:	7033      	strb	r3, [r6, #0]
    98be:	2301      	movs	r3, #1
    98c0:	e079      	b.n	99b6 <_printf_i+0x182>
    98c2:	0649      	lsls	r1, r1, #25
    98c4:	d5d9      	bpl.n	987a <_printf_i+0x46>
    98c6:	1d11      	adds	r1, r2, #4
    98c8:	6019      	str	r1, [r3, #0]
    98ca:	2300      	movs	r3, #0
    98cc:	5ed5      	ldrsh	r5, [r2, r3]
    98ce:	2d00      	cmp	r5, #0
    98d0:	da03      	bge.n	98da <_printf_i+0xa6>
    98d2:	232d      	movs	r3, #45	; 0x2d
    98d4:	9a04      	ldr	r2, [sp, #16]
    98d6:	426d      	negs	r5, r5
    98d8:	7013      	strb	r3, [r2, #0]
    98da:	4b62      	ldr	r3, [pc, #392]	; (9a64 <_printf_i+0x230>)
    98dc:	270a      	movs	r7, #10
    98de:	9303      	str	r3, [sp, #12]
    98e0:	e02f      	b.n	9942 <_printf_i+0x10e>
    98e2:	6820      	ldr	r0, [r4, #0]
    98e4:	6819      	ldr	r1, [r3, #0]
    98e6:	0605      	lsls	r5, r0, #24
    98e8:	d503      	bpl.n	98f2 <_printf_i+0xbe>
    98ea:	1d08      	adds	r0, r1, #4
    98ec:	6018      	str	r0, [r3, #0]
    98ee:	680d      	ldr	r5, [r1, #0]
    98f0:	e005      	b.n	98fe <_printf_i+0xca>
    98f2:	0640      	lsls	r0, r0, #25
    98f4:	d5f9      	bpl.n	98ea <_printf_i+0xb6>
    98f6:	680d      	ldr	r5, [r1, #0]
    98f8:	1d08      	adds	r0, r1, #4
    98fa:	6018      	str	r0, [r3, #0]
    98fc:	b2ad      	uxth	r5, r5
    98fe:	4b59      	ldr	r3, [pc, #356]	; (9a64 <_printf_i+0x230>)
    9900:	2708      	movs	r7, #8
    9902:	9303      	str	r3, [sp, #12]
    9904:	2a6f      	cmp	r2, #111	; 0x6f
    9906:	d018      	beq.n	993a <_printf_i+0x106>
    9908:	270a      	movs	r7, #10
    990a:	e016      	b.n	993a <_printf_i+0x106>
    990c:	3145      	adds	r1, #69	; 0x45
    990e:	700a      	strb	r2, [r1, #0]
    9910:	4a54      	ldr	r2, [pc, #336]	; (9a64 <_printf_i+0x230>)
    9912:	9203      	str	r2, [sp, #12]
    9914:	681a      	ldr	r2, [r3, #0]
    9916:	6821      	ldr	r1, [r4, #0]
    9918:	1d10      	adds	r0, r2, #4
    991a:	6018      	str	r0, [r3, #0]
    991c:	6815      	ldr	r5, [r2, #0]
    991e:	0608      	lsls	r0, r1, #24
    9920:	d522      	bpl.n	9968 <_printf_i+0x134>
    9922:	07cb      	lsls	r3, r1, #31
    9924:	d502      	bpl.n	992c <_printf_i+0xf8>
    9926:	2320      	movs	r3, #32
    9928:	4319      	orrs	r1, r3
    992a:	6021      	str	r1, [r4, #0]
    992c:	2710      	movs	r7, #16
    992e:	2d00      	cmp	r5, #0
    9930:	d103      	bne.n	993a <_printf_i+0x106>
    9932:	2320      	movs	r3, #32
    9934:	6822      	ldr	r2, [r4, #0]
    9936:	439a      	bics	r2, r3
    9938:	6022      	str	r2, [r4, #0]
    993a:	0023      	movs	r3, r4
    993c:	2200      	movs	r2, #0
    993e:	3343      	adds	r3, #67	; 0x43
    9940:	701a      	strb	r2, [r3, #0]
    9942:	6863      	ldr	r3, [r4, #4]
    9944:	60a3      	str	r3, [r4, #8]
    9946:	2b00      	cmp	r3, #0
    9948:	db5c      	blt.n	9a04 <_printf_i+0x1d0>
    994a:	2204      	movs	r2, #4
    994c:	6821      	ldr	r1, [r4, #0]
    994e:	4391      	bics	r1, r2
    9950:	6021      	str	r1, [r4, #0]
    9952:	2d00      	cmp	r5, #0
    9954:	d158      	bne.n	9a08 <_printf_i+0x1d4>
    9956:	9e04      	ldr	r6, [sp, #16]
    9958:	2b00      	cmp	r3, #0
    995a:	d064      	beq.n	9a26 <_printf_i+0x1f2>
    995c:	0026      	movs	r6, r4
    995e:	9b03      	ldr	r3, [sp, #12]
    9960:	3642      	adds	r6, #66	; 0x42
    9962:	781b      	ldrb	r3, [r3, #0]
    9964:	7033      	strb	r3, [r6, #0]
    9966:	e05e      	b.n	9a26 <_printf_i+0x1f2>
    9968:	0648      	lsls	r0, r1, #25
    996a:	d5da      	bpl.n	9922 <_printf_i+0xee>
    996c:	b2ad      	uxth	r5, r5
    996e:	e7d8      	b.n	9922 <_printf_i+0xee>
    9970:	6809      	ldr	r1, [r1, #0]
    9972:	681a      	ldr	r2, [r3, #0]
    9974:	0608      	lsls	r0, r1, #24
    9976:	d505      	bpl.n	9984 <_printf_i+0x150>
    9978:	1d11      	adds	r1, r2, #4
    997a:	6019      	str	r1, [r3, #0]
    997c:	6813      	ldr	r3, [r2, #0]
    997e:	6962      	ldr	r2, [r4, #20]
    9980:	601a      	str	r2, [r3, #0]
    9982:	e006      	b.n	9992 <_printf_i+0x15e>
    9984:	0649      	lsls	r1, r1, #25
    9986:	d5f7      	bpl.n	9978 <_printf_i+0x144>
    9988:	1d11      	adds	r1, r2, #4
    998a:	6019      	str	r1, [r3, #0]
    998c:	6813      	ldr	r3, [r2, #0]
    998e:	8aa2      	ldrh	r2, [r4, #20]
    9990:	801a      	strh	r2, [r3, #0]
    9992:	2300      	movs	r3, #0
    9994:	9e04      	ldr	r6, [sp, #16]
    9996:	6123      	str	r3, [r4, #16]
    9998:	e054      	b.n	9a44 <_printf_i+0x210>
    999a:	681a      	ldr	r2, [r3, #0]
    999c:	1d11      	adds	r1, r2, #4
    999e:	6019      	str	r1, [r3, #0]
    99a0:	6816      	ldr	r6, [r2, #0]
    99a2:	2100      	movs	r1, #0
    99a4:	6862      	ldr	r2, [r4, #4]
    99a6:	0030      	movs	r0, r6
    99a8:	f000 ffca 	bl	a940 <memchr>
    99ac:	2800      	cmp	r0, #0
    99ae:	d001      	beq.n	99b4 <_printf_i+0x180>
    99b0:	1b80      	subs	r0, r0, r6
    99b2:	6060      	str	r0, [r4, #4]
    99b4:	6863      	ldr	r3, [r4, #4]
    99b6:	6123      	str	r3, [r4, #16]
    99b8:	2300      	movs	r3, #0
    99ba:	9a04      	ldr	r2, [sp, #16]
    99bc:	7013      	strb	r3, [r2, #0]
    99be:	e041      	b.n	9a44 <_printf_i+0x210>
    99c0:	6923      	ldr	r3, [r4, #16]
    99c2:	0032      	movs	r2, r6
    99c4:	9906      	ldr	r1, [sp, #24]
    99c6:	9805      	ldr	r0, [sp, #20]
    99c8:	9d07      	ldr	r5, [sp, #28]
    99ca:	47a8      	blx	r5
    99cc:	1c43      	adds	r3, r0, #1
    99ce:	d043      	beq.n	9a58 <_printf_i+0x224>
    99d0:	6823      	ldr	r3, [r4, #0]
    99d2:	2500      	movs	r5, #0
    99d4:	079b      	lsls	r3, r3, #30
    99d6:	d40f      	bmi.n	99f8 <_printf_i+0x1c4>
    99d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    99da:	68e0      	ldr	r0, [r4, #12]
    99dc:	4298      	cmp	r0, r3
    99de:	da3d      	bge.n	9a5c <_printf_i+0x228>
    99e0:	0018      	movs	r0, r3
    99e2:	e03b      	b.n	9a5c <_printf_i+0x228>
    99e4:	0022      	movs	r2, r4
    99e6:	2301      	movs	r3, #1
    99e8:	3219      	adds	r2, #25
    99ea:	9906      	ldr	r1, [sp, #24]
    99ec:	9805      	ldr	r0, [sp, #20]
    99ee:	9e07      	ldr	r6, [sp, #28]
    99f0:	47b0      	blx	r6
    99f2:	1c43      	adds	r3, r0, #1
    99f4:	d030      	beq.n	9a58 <_printf_i+0x224>
    99f6:	3501      	adds	r5, #1
    99f8:	68e3      	ldr	r3, [r4, #12]
    99fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
    99fc:	1a9b      	subs	r3, r3, r2
    99fe:	429d      	cmp	r5, r3
    9a00:	dbf0      	blt.n	99e4 <_printf_i+0x1b0>
    9a02:	e7e9      	b.n	99d8 <_printf_i+0x1a4>
    9a04:	2d00      	cmp	r5, #0
    9a06:	d0a9      	beq.n	995c <_printf_i+0x128>
    9a08:	9e04      	ldr	r6, [sp, #16]
    9a0a:	0028      	movs	r0, r5
    9a0c:	0039      	movs	r1, r7
    9a0e:	f7fd fbd3 	bl	71b8 <__aeabi_uidivmod>
    9a12:	9b03      	ldr	r3, [sp, #12]
    9a14:	3e01      	subs	r6, #1
    9a16:	5c5b      	ldrb	r3, [r3, r1]
    9a18:	0028      	movs	r0, r5
    9a1a:	7033      	strb	r3, [r6, #0]
    9a1c:	0039      	movs	r1, r7
    9a1e:	f7fd fb45 	bl	70ac <__udivsi3>
    9a22:	1e05      	subs	r5, r0, #0
    9a24:	d1f1      	bne.n	9a0a <_printf_i+0x1d6>
    9a26:	2f08      	cmp	r7, #8
    9a28:	d109      	bne.n	9a3e <_printf_i+0x20a>
    9a2a:	6823      	ldr	r3, [r4, #0]
    9a2c:	07db      	lsls	r3, r3, #31
    9a2e:	d506      	bpl.n	9a3e <_printf_i+0x20a>
    9a30:	6863      	ldr	r3, [r4, #4]
    9a32:	6922      	ldr	r2, [r4, #16]
    9a34:	4293      	cmp	r3, r2
    9a36:	dc02      	bgt.n	9a3e <_printf_i+0x20a>
    9a38:	2330      	movs	r3, #48	; 0x30
    9a3a:	3e01      	subs	r6, #1
    9a3c:	7033      	strb	r3, [r6, #0]
    9a3e:	9b04      	ldr	r3, [sp, #16]
    9a40:	1b9b      	subs	r3, r3, r6
    9a42:	6123      	str	r3, [r4, #16]
    9a44:	9b07      	ldr	r3, [sp, #28]
    9a46:	aa09      	add	r2, sp, #36	; 0x24
    9a48:	9300      	str	r3, [sp, #0]
    9a4a:	0021      	movs	r1, r4
    9a4c:	9b06      	ldr	r3, [sp, #24]
    9a4e:	9805      	ldr	r0, [sp, #20]
    9a50:	f7ff fe82 	bl	9758 <_printf_common>
    9a54:	1c43      	adds	r3, r0, #1
    9a56:	d1b3      	bne.n	99c0 <_printf_i+0x18c>
    9a58:	2001      	movs	r0, #1
    9a5a:	4240      	negs	r0, r0
    9a5c:	b00b      	add	sp, #44	; 0x2c
    9a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9a60:	0000bb47 	.word	0x0000bb47
    9a64:	0000bb36 	.word	0x0000bb36

00009a68 <realloc>:
    9a68:	b510      	push	{r4, lr}
    9a6a:	4b03      	ldr	r3, [pc, #12]	; (9a78 <realloc+0x10>)
    9a6c:	000a      	movs	r2, r1
    9a6e:	0001      	movs	r1, r0
    9a70:	6818      	ldr	r0, [r3, #0]
    9a72:	f001 fa63 	bl	af3c <_realloc_r>
    9a76:	bd10      	pop	{r4, pc}
    9a78:	20000090 	.word	0x20000090

00009a7c <_sbrk_r>:
    9a7c:	2300      	movs	r3, #0
    9a7e:	b570      	push	{r4, r5, r6, lr}
    9a80:	4c06      	ldr	r4, [pc, #24]	; (9a9c <_sbrk_r+0x20>)
    9a82:	0005      	movs	r5, r0
    9a84:	0008      	movs	r0, r1
    9a86:	6023      	str	r3, [r4, #0]
    9a88:	f001 fc2e 	bl	b2e8 <_sbrk>
    9a8c:	1c43      	adds	r3, r0, #1
    9a8e:	d103      	bne.n	9a98 <_sbrk_r+0x1c>
    9a90:	6823      	ldr	r3, [r4, #0]
    9a92:	2b00      	cmp	r3, #0
    9a94:	d000      	beq.n	9a98 <_sbrk_r+0x1c>
    9a96:	602b      	str	r3, [r5, #0]
    9a98:	bd70      	pop	{r4, r5, r6, pc}
    9a9a:	46c0      	nop			; (mov r8, r8)
    9a9c:	2000108c 	.word	0x2000108c

00009aa0 <siprintf>:
    9aa0:	b40e      	push	{r1, r2, r3}
    9aa2:	b510      	push	{r4, lr}
    9aa4:	b09d      	sub	sp, #116	; 0x74
    9aa6:	a902      	add	r1, sp, #8
    9aa8:	9002      	str	r0, [sp, #8]
    9aaa:	6108      	str	r0, [r1, #16]
    9aac:	480b      	ldr	r0, [pc, #44]	; (9adc <siprintf+0x3c>)
    9aae:	2482      	movs	r4, #130	; 0x82
    9ab0:	6088      	str	r0, [r1, #8]
    9ab2:	6148      	str	r0, [r1, #20]
    9ab4:	2001      	movs	r0, #1
    9ab6:	4240      	negs	r0, r0
    9ab8:	ab1f      	add	r3, sp, #124	; 0x7c
    9aba:	81c8      	strh	r0, [r1, #14]
    9abc:	4808      	ldr	r0, [pc, #32]	; (9ae0 <siprintf+0x40>)
    9abe:	cb04      	ldmia	r3!, {r2}
    9ac0:	00a4      	lsls	r4, r4, #2
    9ac2:	6800      	ldr	r0, [r0, #0]
    9ac4:	9301      	str	r3, [sp, #4]
    9ac6:	818c      	strh	r4, [r1, #12]
    9ac8:	f001 fac0 	bl	b04c <_svfiprintf_r>
    9acc:	2300      	movs	r3, #0
    9ace:	9a02      	ldr	r2, [sp, #8]
    9ad0:	7013      	strb	r3, [r2, #0]
    9ad2:	b01d      	add	sp, #116	; 0x74
    9ad4:	bc10      	pop	{r4}
    9ad6:	bc08      	pop	{r3}
    9ad8:	b003      	add	sp, #12
    9ada:	4718      	bx	r3
    9adc:	7fffffff 	.word	0x7fffffff
    9ae0:	20000090 	.word	0x20000090

00009ae4 <strcpy>:
    9ae4:	1c03      	adds	r3, r0, #0
    9ae6:	780a      	ldrb	r2, [r1, #0]
    9ae8:	3101      	adds	r1, #1
    9aea:	701a      	strb	r2, [r3, #0]
    9aec:	3301      	adds	r3, #1
    9aee:	2a00      	cmp	r2, #0
    9af0:	d1f9      	bne.n	9ae6 <strcpy+0x2>
    9af2:	4770      	bx	lr

00009af4 <strlen>:
    9af4:	2300      	movs	r3, #0
    9af6:	5cc2      	ldrb	r2, [r0, r3]
    9af8:	3301      	adds	r3, #1
    9afa:	2a00      	cmp	r2, #0
    9afc:	d1fb      	bne.n	9af6 <strlen+0x2>
    9afe:	1e58      	subs	r0, r3, #1
    9b00:	4770      	bx	lr

00009b02 <_strtoul_l.isra.0>:
    9b02:	b5f0      	push	{r4, r5, r6, r7, lr}
    9b04:	001f      	movs	r7, r3
    9b06:	000e      	movs	r6, r1
    9b08:	b087      	sub	sp, #28
    9b0a:	9005      	str	r0, [sp, #20]
    9b0c:	9103      	str	r1, [sp, #12]
    9b0e:	9201      	str	r2, [sp, #4]
    9b10:	980c      	ldr	r0, [sp, #48]	; 0x30
    9b12:	7834      	ldrb	r4, [r6, #0]
    9b14:	f7ff fa34 	bl	8f80 <__locale_ctype_ptr_l>
    9b18:	2208      	movs	r2, #8
    9b1a:	1900      	adds	r0, r0, r4
    9b1c:	7843      	ldrb	r3, [r0, #1]
    9b1e:	1c75      	adds	r5, r6, #1
    9b20:	4013      	ands	r3, r2
    9b22:	d10c      	bne.n	9b3e <_strtoul_l.isra.0+0x3c>
    9b24:	2c2d      	cmp	r4, #45	; 0x2d
    9b26:	d10c      	bne.n	9b42 <_strtoul_l.isra.0+0x40>
    9b28:	3301      	adds	r3, #1
    9b2a:	782c      	ldrb	r4, [r5, #0]
    9b2c:	9302      	str	r3, [sp, #8]
    9b2e:	1cb5      	adds	r5, r6, #2
    9b30:	2f00      	cmp	r7, #0
    9b32:	d00c      	beq.n	9b4e <_strtoul_l.isra.0+0x4c>
    9b34:	2f10      	cmp	r7, #16
    9b36:	d114      	bne.n	9b62 <_strtoul_l.isra.0+0x60>
    9b38:	2c30      	cmp	r4, #48	; 0x30
    9b3a:	d00a      	beq.n	9b52 <_strtoul_l.isra.0+0x50>
    9b3c:	e011      	b.n	9b62 <_strtoul_l.isra.0+0x60>
    9b3e:	002e      	movs	r6, r5
    9b40:	e7e6      	b.n	9b10 <_strtoul_l.isra.0+0xe>
    9b42:	9302      	str	r3, [sp, #8]
    9b44:	2c2b      	cmp	r4, #43	; 0x2b
    9b46:	d1f3      	bne.n	9b30 <_strtoul_l.isra.0+0x2e>
    9b48:	782c      	ldrb	r4, [r5, #0]
    9b4a:	1cb5      	adds	r5, r6, #2
    9b4c:	e7f0      	b.n	9b30 <_strtoul_l.isra.0+0x2e>
    9b4e:	2c30      	cmp	r4, #48	; 0x30
    9b50:	d12f      	bne.n	9bb2 <_strtoul_l.isra.0+0xb0>
    9b52:	2220      	movs	r2, #32
    9b54:	782b      	ldrb	r3, [r5, #0]
    9b56:	4393      	bics	r3, r2
    9b58:	2b58      	cmp	r3, #88	; 0x58
    9b5a:	d154      	bne.n	9c06 <_strtoul_l.isra.0+0x104>
    9b5c:	2710      	movs	r7, #16
    9b5e:	786c      	ldrb	r4, [r5, #1]
    9b60:	3502      	adds	r5, #2
    9b62:	2001      	movs	r0, #1
    9b64:	0039      	movs	r1, r7
    9b66:	4240      	negs	r0, r0
    9b68:	f7fd faa0 	bl	70ac <__udivsi3>
    9b6c:	0006      	movs	r6, r0
    9b6e:	2001      	movs	r0, #1
    9b70:	0039      	movs	r1, r7
    9b72:	4240      	negs	r0, r0
    9b74:	f7fd fb20 	bl	71b8 <__aeabi_uidivmod>
    9b78:	2300      	movs	r3, #0
    9b7a:	9104      	str	r1, [sp, #16]
    9b7c:	2101      	movs	r1, #1
    9b7e:	2201      	movs	r2, #1
    9b80:	0018      	movs	r0, r3
    9b82:	468c      	mov	ip, r1
    9b84:	4252      	negs	r2, r2
    9b86:	0021      	movs	r1, r4
    9b88:	3930      	subs	r1, #48	; 0x30
    9b8a:	2909      	cmp	r1, #9
    9b8c:	d813      	bhi.n	9bb6 <_strtoul_l.isra.0+0xb4>
    9b8e:	000c      	movs	r4, r1
    9b90:	42a7      	cmp	r7, r4
    9b92:	dd1e      	ble.n	9bd2 <_strtoul_l.isra.0+0xd0>
    9b94:	2b00      	cmp	r3, #0
    9b96:	db1a      	blt.n	9bce <_strtoul_l.isra.0+0xcc>
    9b98:	0013      	movs	r3, r2
    9b9a:	4286      	cmp	r6, r0
    9b9c:	d306      	bcc.n	9bac <_strtoul_l.isra.0+0xaa>
    9b9e:	d102      	bne.n	9ba6 <_strtoul_l.isra.0+0xa4>
    9ba0:	9904      	ldr	r1, [sp, #16]
    9ba2:	42a1      	cmp	r1, r4
    9ba4:	db02      	blt.n	9bac <_strtoul_l.isra.0+0xaa>
    9ba6:	4663      	mov	r3, ip
    9ba8:	4378      	muls	r0, r7
    9baa:	1820      	adds	r0, r4, r0
    9bac:	782c      	ldrb	r4, [r5, #0]
    9bae:	3501      	adds	r5, #1
    9bb0:	e7e9      	b.n	9b86 <_strtoul_l.isra.0+0x84>
    9bb2:	270a      	movs	r7, #10
    9bb4:	e7d5      	b.n	9b62 <_strtoul_l.isra.0+0x60>
    9bb6:	0021      	movs	r1, r4
    9bb8:	3941      	subs	r1, #65	; 0x41
    9bba:	2919      	cmp	r1, #25
    9bbc:	d801      	bhi.n	9bc2 <_strtoul_l.isra.0+0xc0>
    9bbe:	3c37      	subs	r4, #55	; 0x37
    9bc0:	e7e6      	b.n	9b90 <_strtoul_l.isra.0+0x8e>
    9bc2:	0021      	movs	r1, r4
    9bc4:	3961      	subs	r1, #97	; 0x61
    9bc6:	2919      	cmp	r1, #25
    9bc8:	d803      	bhi.n	9bd2 <_strtoul_l.isra.0+0xd0>
    9bca:	3c57      	subs	r4, #87	; 0x57
    9bcc:	e7e0      	b.n	9b90 <_strtoul_l.isra.0+0x8e>
    9bce:	0013      	movs	r3, r2
    9bd0:	e7ec      	b.n	9bac <_strtoul_l.isra.0+0xaa>
    9bd2:	2b00      	cmp	r3, #0
    9bd4:	da09      	bge.n	9bea <_strtoul_l.isra.0+0xe8>
    9bd6:	2322      	movs	r3, #34	; 0x22
    9bd8:	2001      	movs	r0, #1
    9bda:	9a05      	ldr	r2, [sp, #20]
    9bdc:	4240      	negs	r0, r0
    9bde:	6013      	str	r3, [r2, #0]
    9be0:	9b01      	ldr	r3, [sp, #4]
    9be2:	2b00      	cmp	r3, #0
    9be4:	d10b      	bne.n	9bfe <_strtoul_l.isra.0+0xfc>
    9be6:	b007      	add	sp, #28
    9be8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9bea:	9a02      	ldr	r2, [sp, #8]
    9bec:	2a00      	cmp	r2, #0
    9bee:	d000      	beq.n	9bf2 <_strtoul_l.isra.0+0xf0>
    9bf0:	4240      	negs	r0, r0
    9bf2:	9a01      	ldr	r2, [sp, #4]
    9bf4:	2a00      	cmp	r2, #0
    9bf6:	d0f6      	beq.n	9be6 <_strtoul_l.isra.0+0xe4>
    9bf8:	9a03      	ldr	r2, [sp, #12]
    9bfa:	2b00      	cmp	r3, #0
    9bfc:	d000      	beq.n	9c00 <_strtoul_l.isra.0+0xfe>
    9bfe:	1e6a      	subs	r2, r5, #1
    9c00:	9b01      	ldr	r3, [sp, #4]
    9c02:	601a      	str	r2, [r3, #0]
    9c04:	e7ef      	b.n	9be6 <_strtoul_l.isra.0+0xe4>
    9c06:	2430      	movs	r4, #48	; 0x30
    9c08:	2f00      	cmp	r7, #0
    9c0a:	d1aa      	bne.n	9b62 <_strtoul_l.isra.0+0x60>
    9c0c:	3708      	adds	r7, #8
    9c0e:	e7a8      	b.n	9b62 <_strtoul_l.isra.0+0x60>

00009c10 <strtoul>:
    9c10:	b537      	push	{r0, r1, r2, r4, r5, lr}
    9c12:	0013      	movs	r3, r2
    9c14:	4a06      	ldr	r2, [pc, #24]	; (9c30 <strtoul+0x20>)
    9c16:	0005      	movs	r5, r0
    9c18:	6810      	ldr	r0, [r2, #0]
    9c1a:	6a04      	ldr	r4, [r0, #32]
    9c1c:	2c00      	cmp	r4, #0
    9c1e:	d100      	bne.n	9c22 <strtoul+0x12>
    9c20:	4c04      	ldr	r4, [pc, #16]	; (9c34 <strtoul+0x24>)
    9c22:	000a      	movs	r2, r1
    9c24:	9400      	str	r4, [sp, #0]
    9c26:	0029      	movs	r1, r5
    9c28:	f7ff ff6b 	bl	9b02 <_strtoul_l.isra.0>
    9c2c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    9c2e:	46c0      	nop			; (mov r8, r8)
    9c30:	20000090 	.word	0x20000090
    9c34:	200000f4 	.word	0x200000f4

00009c38 <__ascii_wctomb>:
    9c38:	1e0b      	subs	r3, r1, #0
    9c3a:	d004      	beq.n	9c46 <__ascii_wctomb+0xe>
    9c3c:	2aff      	cmp	r2, #255	; 0xff
    9c3e:	d904      	bls.n	9c4a <__ascii_wctomb+0x12>
    9c40:	238a      	movs	r3, #138	; 0x8a
    9c42:	6003      	str	r3, [r0, #0]
    9c44:	3b8b      	subs	r3, #139	; 0x8b
    9c46:	0018      	movs	r0, r3
    9c48:	4770      	bx	lr
    9c4a:	700a      	strb	r2, [r1, #0]
    9c4c:	2301      	movs	r3, #1
    9c4e:	e7fa      	b.n	9c46 <__ascii_wctomb+0xe>

00009c50 <quorem>:
    9c50:	b5f0      	push	{r4, r5, r6, r7, lr}
    9c52:	6903      	ldr	r3, [r0, #16]
    9c54:	690c      	ldr	r4, [r1, #16]
    9c56:	b089      	sub	sp, #36	; 0x24
    9c58:	0007      	movs	r7, r0
    9c5a:	9105      	str	r1, [sp, #20]
    9c5c:	2600      	movs	r6, #0
    9c5e:	429c      	cmp	r4, r3
    9c60:	dc6d      	bgt.n	9d3e <quorem+0xee>
    9c62:	000b      	movs	r3, r1
    9c64:	3c01      	subs	r4, #1
    9c66:	3314      	adds	r3, #20
    9c68:	00a5      	lsls	r5, r4, #2
    9c6a:	9303      	str	r3, [sp, #12]
    9c6c:	195b      	adds	r3, r3, r5
    9c6e:	9304      	str	r3, [sp, #16]
    9c70:	0003      	movs	r3, r0
    9c72:	3314      	adds	r3, #20
    9c74:	9302      	str	r3, [sp, #8]
    9c76:	195d      	adds	r5, r3, r5
    9c78:	9b04      	ldr	r3, [sp, #16]
    9c7a:	6828      	ldr	r0, [r5, #0]
    9c7c:	681b      	ldr	r3, [r3, #0]
    9c7e:	1c59      	adds	r1, r3, #1
    9c80:	9301      	str	r3, [sp, #4]
    9c82:	f7fd fa13 	bl	70ac <__udivsi3>
    9c86:	9001      	str	r0, [sp, #4]
    9c88:	42b0      	cmp	r0, r6
    9c8a:	d02d      	beq.n	9ce8 <quorem+0x98>
    9c8c:	9b03      	ldr	r3, [sp, #12]
    9c8e:	9802      	ldr	r0, [sp, #8]
    9c90:	469c      	mov	ip, r3
    9c92:	9606      	str	r6, [sp, #24]
    9c94:	4662      	mov	r2, ip
    9c96:	ca08      	ldmia	r2!, {r3}
    9c98:	4694      	mov	ip, r2
    9c9a:	9a01      	ldr	r2, [sp, #4]
    9c9c:	b299      	uxth	r1, r3
    9c9e:	4351      	muls	r1, r2
    9ca0:	0c1b      	lsrs	r3, r3, #16
    9ca2:	4353      	muls	r3, r2
    9ca4:	1989      	adds	r1, r1, r6
    9ca6:	0c0a      	lsrs	r2, r1, #16
    9ca8:	189b      	adds	r3, r3, r2
    9caa:	9307      	str	r3, [sp, #28]
    9cac:	8802      	ldrh	r2, [r0, #0]
    9cae:	0c1e      	lsrs	r6, r3, #16
    9cb0:	9b06      	ldr	r3, [sp, #24]
    9cb2:	b289      	uxth	r1, r1
    9cb4:	18d2      	adds	r2, r2, r3
    9cb6:	6803      	ldr	r3, [r0, #0]
    9cb8:	1a52      	subs	r2, r2, r1
    9cba:	0c19      	lsrs	r1, r3, #16
    9cbc:	466b      	mov	r3, sp
    9cbe:	8b9b      	ldrh	r3, [r3, #28]
    9cc0:	1acb      	subs	r3, r1, r3
    9cc2:	1411      	asrs	r1, r2, #16
    9cc4:	185b      	adds	r3, r3, r1
    9cc6:	1419      	asrs	r1, r3, #16
    9cc8:	b292      	uxth	r2, r2
    9cca:	041b      	lsls	r3, r3, #16
    9ccc:	431a      	orrs	r2, r3
    9cce:	9b04      	ldr	r3, [sp, #16]
    9cd0:	9106      	str	r1, [sp, #24]
    9cd2:	c004      	stmia	r0!, {r2}
    9cd4:	4563      	cmp	r3, ip
    9cd6:	d2dd      	bcs.n	9c94 <quorem+0x44>
    9cd8:	682b      	ldr	r3, [r5, #0]
    9cda:	2b00      	cmp	r3, #0
    9cdc:	d104      	bne.n	9ce8 <quorem+0x98>
    9cde:	9b02      	ldr	r3, [sp, #8]
    9ce0:	3d04      	subs	r5, #4
    9ce2:	42ab      	cmp	r3, r5
    9ce4:	d32e      	bcc.n	9d44 <quorem+0xf4>
    9ce6:	613c      	str	r4, [r7, #16]
    9ce8:	9905      	ldr	r1, [sp, #20]
    9cea:	0038      	movs	r0, r7
    9cec:	f001 f847 	bl	ad7e <__mcmp>
    9cf0:	2800      	cmp	r0, #0
    9cf2:	db23      	blt.n	9d3c <quorem+0xec>
    9cf4:	2500      	movs	r5, #0
    9cf6:	9b01      	ldr	r3, [sp, #4]
    9cf8:	9802      	ldr	r0, [sp, #8]
    9cfa:	3301      	adds	r3, #1
    9cfc:	9903      	ldr	r1, [sp, #12]
    9cfe:	9301      	str	r3, [sp, #4]
    9d00:	c908      	ldmia	r1!, {r3}
    9d02:	8802      	ldrh	r2, [r0, #0]
    9d04:	1955      	adds	r5, r2, r5
    9d06:	b29a      	uxth	r2, r3
    9d08:	1aaa      	subs	r2, r5, r2
    9d0a:	6805      	ldr	r5, [r0, #0]
    9d0c:	0c1b      	lsrs	r3, r3, #16
    9d0e:	0c2d      	lsrs	r5, r5, #16
    9d10:	1aeb      	subs	r3, r5, r3
    9d12:	1415      	asrs	r5, r2, #16
    9d14:	195b      	adds	r3, r3, r5
    9d16:	141d      	asrs	r5, r3, #16
    9d18:	b292      	uxth	r2, r2
    9d1a:	041b      	lsls	r3, r3, #16
    9d1c:	4313      	orrs	r3, r2
    9d1e:	c008      	stmia	r0!, {r3}
    9d20:	9b04      	ldr	r3, [sp, #16]
    9d22:	428b      	cmp	r3, r1
    9d24:	d2ec      	bcs.n	9d00 <quorem+0xb0>
    9d26:	9a02      	ldr	r2, [sp, #8]
    9d28:	00a3      	lsls	r3, r4, #2
    9d2a:	18d3      	adds	r3, r2, r3
    9d2c:	681a      	ldr	r2, [r3, #0]
    9d2e:	2a00      	cmp	r2, #0
    9d30:	d104      	bne.n	9d3c <quorem+0xec>
    9d32:	9a02      	ldr	r2, [sp, #8]
    9d34:	3b04      	subs	r3, #4
    9d36:	429a      	cmp	r2, r3
    9d38:	d309      	bcc.n	9d4e <quorem+0xfe>
    9d3a:	613c      	str	r4, [r7, #16]
    9d3c:	9e01      	ldr	r6, [sp, #4]
    9d3e:	0030      	movs	r0, r6
    9d40:	b009      	add	sp, #36	; 0x24
    9d42:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9d44:	682b      	ldr	r3, [r5, #0]
    9d46:	2b00      	cmp	r3, #0
    9d48:	d1cd      	bne.n	9ce6 <quorem+0x96>
    9d4a:	3c01      	subs	r4, #1
    9d4c:	e7c7      	b.n	9cde <quorem+0x8e>
    9d4e:	681a      	ldr	r2, [r3, #0]
    9d50:	2a00      	cmp	r2, #0
    9d52:	d1f2      	bne.n	9d3a <quorem+0xea>
    9d54:	3c01      	subs	r4, #1
    9d56:	e7ec      	b.n	9d32 <quorem+0xe2>

00009d58 <_dtoa_r>:
    9d58:	b5f0      	push	{r4, r5, r6, r7, lr}
    9d5a:	0016      	movs	r6, r2
    9d5c:	001f      	movs	r7, r3
    9d5e:	6a44      	ldr	r4, [r0, #36]	; 0x24
    9d60:	b09d      	sub	sp, #116	; 0x74
    9d62:	9004      	str	r0, [sp, #16]
    9d64:	9d25      	ldr	r5, [sp, #148]	; 0x94
    9d66:	9606      	str	r6, [sp, #24]
    9d68:	9707      	str	r7, [sp, #28]
    9d6a:	2c00      	cmp	r4, #0
    9d6c:	d108      	bne.n	9d80 <_dtoa_r+0x28>
    9d6e:	2010      	movs	r0, #16
    9d70:	f7ff f90a 	bl	8f88 <malloc>
    9d74:	9b04      	ldr	r3, [sp, #16]
    9d76:	6258      	str	r0, [r3, #36]	; 0x24
    9d78:	6044      	str	r4, [r0, #4]
    9d7a:	6084      	str	r4, [r0, #8]
    9d7c:	6004      	str	r4, [r0, #0]
    9d7e:	60c4      	str	r4, [r0, #12]
    9d80:	9b04      	ldr	r3, [sp, #16]
    9d82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    9d84:	6819      	ldr	r1, [r3, #0]
    9d86:	2900      	cmp	r1, #0
    9d88:	d00b      	beq.n	9da2 <_dtoa_r+0x4a>
    9d8a:	685a      	ldr	r2, [r3, #4]
    9d8c:	2301      	movs	r3, #1
    9d8e:	4093      	lsls	r3, r2
    9d90:	604a      	str	r2, [r1, #4]
    9d92:	608b      	str	r3, [r1, #8]
    9d94:	9804      	ldr	r0, [sp, #16]
    9d96:	f000 fe18 	bl	a9ca <_Bfree>
    9d9a:	2200      	movs	r2, #0
    9d9c:	9b04      	ldr	r3, [sp, #16]
    9d9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    9da0:	601a      	str	r2, [r3, #0]
    9da2:	9b07      	ldr	r3, [sp, #28]
    9da4:	2b00      	cmp	r3, #0
    9da6:	da1f      	bge.n	9de8 <_dtoa_r+0x90>
    9da8:	2301      	movs	r3, #1
    9daa:	602b      	str	r3, [r5, #0]
    9dac:	007b      	lsls	r3, r7, #1
    9dae:	085b      	lsrs	r3, r3, #1
    9db0:	9307      	str	r3, [sp, #28]
    9db2:	9c07      	ldr	r4, [sp, #28]
    9db4:	4bb7      	ldr	r3, [pc, #732]	; (a094 <_dtoa_r+0x33c>)
    9db6:	0022      	movs	r2, r4
    9db8:	9319      	str	r3, [sp, #100]	; 0x64
    9dba:	401a      	ands	r2, r3
    9dbc:	429a      	cmp	r2, r3
    9dbe:	d116      	bne.n	9dee <_dtoa_r+0x96>
    9dc0:	4bb5      	ldr	r3, [pc, #724]	; (a098 <_dtoa_r+0x340>)
    9dc2:	9a24      	ldr	r2, [sp, #144]	; 0x90
    9dc4:	6013      	str	r3, [r2, #0]
    9dc6:	9b06      	ldr	r3, [sp, #24]
    9dc8:	2b00      	cmp	r3, #0
    9dca:	d103      	bne.n	9dd4 <_dtoa_r+0x7c>
    9dcc:	0324      	lsls	r4, r4, #12
    9dce:	d101      	bne.n	9dd4 <_dtoa_r+0x7c>
    9dd0:	f000 fd91 	bl	a8f6 <_dtoa_r+0xb9e>
    9dd4:	4bb1      	ldr	r3, [pc, #708]	; (a09c <_dtoa_r+0x344>)
    9dd6:	9a26      	ldr	r2, [sp, #152]	; 0x98
    9dd8:	930a      	str	r3, [sp, #40]	; 0x28
    9dda:	4bb1      	ldr	r3, [pc, #708]	; (a0a0 <_dtoa_r+0x348>)
    9ddc:	2a00      	cmp	r2, #0
    9dde:	d001      	beq.n	9de4 <_dtoa_r+0x8c>
    9de0:	f000 fd8f 	bl	a902 <_dtoa_r+0xbaa>
    9de4:	f000 fd8f 	bl	a906 <_dtoa_r+0xbae>
    9de8:	2300      	movs	r3, #0
    9dea:	602b      	str	r3, [r5, #0]
    9dec:	e7e1      	b.n	9db2 <_dtoa_r+0x5a>
    9dee:	9e06      	ldr	r6, [sp, #24]
    9df0:	9f07      	ldr	r7, [sp, #28]
    9df2:	2200      	movs	r2, #0
    9df4:	2300      	movs	r3, #0
    9df6:	0030      	movs	r0, r6
    9df8:	0039      	movs	r1, r7
    9dfa:	f7fd fadd 	bl	73b8 <__aeabi_dcmpeq>
    9dfe:	1e05      	subs	r5, r0, #0
    9e00:	d00e      	beq.n	9e20 <_dtoa_r+0xc8>
    9e02:	2301      	movs	r3, #1
    9e04:	9a24      	ldr	r2, [sp, #144]	; 0x90
    9e06:	6013      	str	r3, [r2, #0]
    9e08:	4ba6      	ldr	r3, [pc, #664]	; (a0a4 <_dtoa_r+0x34c>)
    9e0a:	9a26      	ldr	r2, [sp, #152]	; 0x98
    9e0c:	930a      	str	r3, [sp, #40]	; 0x28
    9e0e:	2a00      	cmp	r2, #0
    9e10:	d101      	bne.n	9e16 <_dtoa_r+0xbe>
    9e12:	f000 fd78 	bl	a906 <_dtoa_r+0xbae>
    9e16:	4aa4      	ldr	r2, [pc, #656]	; (a0a8 <_dtoa_r+0x350>)
    9e18:	9926      	ldr	r1, [sp, #152]	; 0x98
    9e1a:	600a      	str	r2, [r1, #0]
    9e1c:	f000 fd73 	bl	a906 <_dtoa_r+0xbae>
    9e20:	ab1a      	add	r3, sp, #104	; 0x68
    9e22:	9301      	str	r3, [sp, #4]
    9e24:	ab1b      	add	r3, sp, #108	; 0x6c
    9e26:	9300      	str	r3, [sp, #0]
    9e28:	0032      	movs	r2, r6
    9e2a:	003b      	movs	r3, r7
    9e2c:	9804      	ldr	r0, [sp, #16]
    9e2e:	f001 f823 	bl	ae78 <__d2b>
    9e32:	0063      	lsls	r3, r4, #1
    9e34:	9005      	str	r0, [sp, #20]
    9e36:	0d5b      	lsrs	r3, r3, #21
    9e38:	d100      	bne.n	9e3c <_dtoa_r+0xe4>
    9e3a:	e07f      	b.n	9f3c <_dtoa_r+0x1e4>
    9e3c:	033a      	lsls	r2, r7, #12
    9e3e:	4c9b      	ldr	r4, [pc, #620]	; (a0ac <_dtoa_r+0x354>)
    9e40:	0b12      	lsrs	r2, r2, #12
    9e42:	4314      	orrs	r4, r2
    9e44:	0021      	movs	r1, r4
    9e46:	4a9a      	ldr	r2, [pc, #616]	; (a0b0 <_dtoa_r+0x358>)
    9e48:	0030      	movs	r0, r6
    9e4a:	9518      	str	r5, [sp, #96]	; 0x60
    9e4c:	189e      	adds	r6, r3, r2
    9e4e:	2200      	movs	r2, #0
    9e50:	4b98      	ldr	r3, [pc, #608]	; (a0b4 <_dtoa_r+0x35c>)
    9e52:	f7fe fca3 	bl	879c <__aeabi_dsub>
    9e56:	4a98      	ldr	r2, [pc, #608]	; (a0b8 <_dtoa_r+0x360>)
    9e58:	4b98      	ldr	r3, [pc, #608]	; (a0bc <_dtoa_r+0x364>)
    9e5a:	f7fe fa1f 	bl	829c <__aeabi_dmul>
    9e5e:	4a98      	ldr	r2, [pc, #608]	; (a0c0 <_dtoa_r+0x368>)
    9e60:	4b98      	ldr	r3, [pc, #608]	; (a0c4 <_dtoa_r+0x36c>)
    9e62:	f7fd fad7 	bl	7414 <__aeabi_dadd>
    9e66:	0004      	movs	r4, r0
    9e68:	0030      	movs	r0, r6
    9e6a:	000d      	movs	r5, r1
    9e6c:	f001 f9fa 	bl	b264 <__aeabi_i2d>
    9e70:	4a95      	ldr	r2, [pc, #596]	; (a0c8 <_dtoa_r+0x370>)
    9e72:	4b96      	ldr	r3, [pc, #600]	; (a0cc <_dtoa_r+0x374>)
    9e74:	f7fe fa12 	bl	829c <__aeabi_dmul>
    9e78:	0002      	movs	r2, r0
    9e7a:	000b      	movs	r3, r1
    9e7c:	0020      	movs	r0, r4
    9e7e:	0029      	movs	r1, r5
    9e80:	f7fd fac8 	bl	7414 <__aeabi_dadd>
    9e84:	0004      	movs	r4, r0
    9e86:	000d      	movs	r5, r1
    9e88:	f7fe ffbe 	bl	8e08 <__aeabi_d2iz>
    9e8c:	2200      	movs	r2, #0
    9e8e:	9003      	str	r0, [sp, #12]
    9e90:	2300      	movs	r3, #0
    9e92:	0020      	movs	r0, r4
    9e94:	0029      	movs	r1, r5
    9e96:	f7fd fa95 	bl	73c4 <__aeabi_dcmplt>
    9e9a:	2800      	cmp	r0, #0
    9e9c:	d00e      	beq.n	9ebc <_dtoa_r+0x164>
    9e9e:	9803      	ldr	r0, [sp, #12]
    9ea0:	f001 f9e0 	bl	b264 <__aeabi_i2d>
    9ea4:	000b      	movs	r3, r1
    9ea6:	0002      	movs	r2, r0
    9ea8:	0029      	movs	r1, r5
    9eaa:	0020      	movs	r0, r4
    9eac:	f7fd fa84 	bl	73b8 <__aeabi_dcmpeq>
    9eb0:	0003      	movs	r3, r0
    9eb2:	4258      	negs	r0, r3
    9eb4:	4158      	adcs	r0, r3
    9eb6:	9b03      	ldr	r3, [sp, #12]
    9eb8:	1a1b      	subs	r3, r3, r0
    9eba:	9303      	str	r3, [sp, #12]
    9ebc:	2301      	movs	r3, #1
    9ebe:	9316      	str	r3, [sp, #88]	; 0x58
    9ec0:	9b03      	ldr	r3, [sp, #12]
    9ec2:	2b16      	cmp	r3, #22
    9ec4:	d80f      	bhi.n	9ee6 <_dtoa_r+0x18e>
    9ec6:	4982      	ldr	r1, [pc, #520]	; (a0d0 <_dtoa_r+0x378>)
    9ec8:	00db      	lsls	r3, r3, #3
    9eca:	18c9      	adds	r1, r1, r3
    9ecc:	6808      	ldr	r0, [r1, #0]
    9ece:	6849      	ldr	r1, [r1, #4]
    9ed0:	9a06      	ldr	r2, [sp, #24]
    9ed2:	9b07      	ldr	r3, [sp, #28]
    9ed4:	f7fd fa8a 	bl	73ec <__aeabi_dcmpgt>
    9ed8:	2800      	cmp	r0, #0
    9eda:	d04b      	beq.n	9f74 <_dtoa_r+0x21c>
    9edc:	9b03      	ldr	r3, [sp, #12]
    9ede:	3b01      	subs	r3, #1
    9ee0:	9303      	str	r3, [sp, #12]
    9ee2:	2300      	movs	r3, #0
    9ee4:	9316      	str	r3, [sp, #88]	; 0x58
    9ee6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    9ee8:	1b9e      	subs	r6, r3, r6
    9eea:	2300      	movs	r3, #0
    9eec:	930b      	str	r3, [sp, #44]	; 0x2c
    9eee:	0033      	movs	r3, r6
    9ef0:	3b01      	subs	r3, #1
    9ef2:	930c      	str	r3, [sp, #48]	; 0x30
    9ef4:	d504      	bpl.n	9f00 <_dtoa_r+0x1a8>
    9ef6:	2301      	movs	r3, #1
    9ef8:	1b9b      	subs	r3, r3, r6
    9efa:	930b      	str	r3, [sp, #44]	; 0x2c
    9efc:	2300      	movs	r3, #0
    9efe:	930c      	str	r3, [sp, #48]	; 0x30
    9f00:	9b03      	ldr	r3, [sp, #12]
    9f02:	2b00      	cmp	r3, #0
    9f04:	db38      	blt.n	9f78 <_dtoa_r+0x220>
    9f06:	9a03      	ldr	r2, [sp, #12]
    9f08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9f0a:	4694      	mov	ip, r2
    9f0c:	4463      	add	r3, ip
    9f0e:	930c      	str	r3, [sp, #48]	; 0x30
    9f10:	2300      	movs	r3, #0
    9f12:	920f      	str	r2, [sp, #60]	; 0x3c
    9f14:	9308      	str	r3, [sp, #32]
    9f16:	9b22      	ldr	r3, [sp, #136]	; 0x88
    9f18:	2501      	movs	r5, #1
    9f1a:	2b09      	cmp	r3, #9
    9f1c:	d900      	bls.n	9f20 <_dtoa_r+0x1c8>
    9f1e:	e091      	b.n	a044 <_dtoa_r+0x2ec>
    9f20:	2b05      	cmp	r3, #5
    9f22:	dd02      	ble.n	9f2a <_dtoa_r+0x1d2>
    9f24:	2500      	movs	r5, #0
    9f26:	3b04      	subs	r3, #4
    9f28:	9322      	str	r3, [sp, #136]	; 0x88
    9f2a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    9f2c:	1e98      	subs	r0, r3, #2
    9f2e:	2803      	cmp	r0, #3
    9f30:	d900      	bls.n	9f34 <_dtoa_r+0x1dc>
    9f32:	e091      	b.n	a058 <_dtoa_r+0x300>
    9f34:	f7fd f8b0 	bl	7098 <__gnu_thumb1_case_uqi>
    9f38:	76298482 	.word	0x76298482
    9f3c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    9f3e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    9f40:	189e      	adds	r6, r3, r2
    9f42:	4b64      	ldr	r3, [pc, #400]	; (a0d4 <_dtoa_r+0x37c>)
    9f44:	18f2      	adds	r2, r6, r3
    9f46:	2a20      	cmp	r2, #32
    9f48:	dd0f      	ble.n	9f6a <_dtoa_r+0x212>
    9f4a:	4b63      	ldr	r3, [pc, #396]	; (a0d8 <_dtoa_r+0x380>)
    9f4c:	9806      	ldr	r0, [sp, #24]
    9f4e:	18f3      	adds	r3, r6, r3
    9f50:	40d8      	lsrs	r0, r3
    9f52:	2340      	movs	r3, #64	; 0x40
    9f54:	1a9b      	subs	r3, r3, r2
    9f56:	409c      	lsls	r4, r3
    9f58:	4320      	orrs	r0, r4
    9f5a:	f7fe ff89 	bl	8e70 <__aeabi_ui2d>
    9f5e:	2301      	movs	r3, #1
    9f60:	4c5e      	ldr	r4, [pc, #376]	; (a0dc <_dtoa_r+0x384>)
    9f62:	3e01      	subs	r6, #1
    9f64:	1909      	adds	r1, r1, r4
    9f66:	9318      	str	r3, [sp, #96]	; 0x60
    9f68:	e771      	b.n	9e4e <_dtoa_r+0xf6>
    9f6a:	2320      	movs	r3, #32
    9f6c:	9806      	ldr	r0, [sp, #24]
    9f6e:	1a9b      	subs	r3, r3, r2
    9f70:	4098      	lsls	r0, r3
    9f72:	e7f2      	b.n	9f5a <_dtoa_r+0x202>
    9f74:	9016      	str	r0, [sp, #88]	; 0x58
    9f76:	e7b6      	b.n	9ee6 <_dtoa_r+0x18e>
    9f78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    9f7a:	9a03      	ldr	r2, [sp, #12]
    9f7c:	1a9b      	subs	r3, r3, r2
    9f7e:	930b      	str	r3, [sp, #44]	; 0x2c
    9f80:	4253      	negs	r3, r2
    9f82:	9308      	str	r3, [sp, #32]
    9f84:	2300      	movs	r3, #0
    9f86:	930f      	str	r3, [sp, #60]	; 0x3c
    9f88:	e7c5      	b.n	9f16 <_dtoa_r+0x1be>
    9f8a:	2301      	movs	r3, #1
    9f8c:	930e      	str	r3, [sp, #56]	; 0x38
    9f8e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    9f90:	2b00      	cmp	r3, #0
    9f92:	dd65      	ble.n	a060 <_dtoa_r+0x308>
    9f94:	001f      	movs	r7, r3
    9f96:	930d      	str	r3, [sp, #52]	; 0x34
    9f98:	9a04      	ldr	r2, [sp, #16]
    9f9a:	6a54      	ldr	r4, [r2, #36]	; 0x24
    9f9c:	2200      	movs	r2, #0
    9f9e:	6062      	str	r2, [r4, #4]
    9fa0:	3204      	adds	r2, #4
    9fa2:	0011      	movs	r1, r2
    9fa4:	3114      	adds	r1, #20
    9fa6:	4299      	cmp	r1, r3
    9fa8:	d95f      	bls.n	a06a <_dtoa_r+0x312>
    9faa:	6861      	ldr	r1, [r4, #4]
    9fac:	9804      	ldr	r0, [sp, #16]
    9fae:	f000 fcd4 	bl	a95a <_Balloc>
    9fb2:	9b04      	ldr	r3, [sp, #16]
    9fb4:	6020      	str	r0, [r4, #0]
    9fb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    9fb8:	681b      	ldr	r3, [r3, #0]
    9fba:	930a      	str	r3, [sp, #40]	; 0x28
    9fbc:	2f0e      	cmp	r7, #14
    9fbe:	d900      	bls.n	9fc2 <_dtoa_r+0x26a>
    9fc0:	e105      	b.n	a1ce <_dtoa_r+0x476>
    9fc2:	2d00      	cmp	r5, #0
    9fc4:	d100      	bne.n	9fc8 <_dtoa_r+0x270>
    9fc6:	e102      	b.n	a1ce <_dtoa_r+0x476>
    9fc8:	9b06      	ldr	r3, [sp, #24]
    9fca:	9c07      	ldr	r4, [sp, #28]
    9fcc:	9314      	str	r3, [sp, #80]	; 0x50
    9fce:	9415      	str	r4, [sp, #84]	; 0x54
    9fd0:	9b03      	ldr	r3, [sp, #12]
    9fd2:	2b00      	cmp	r3, #0
    9fd4:	dc00      	bgt.n	9fd8 <_dtoa_r+0x280>
    9fd6:	e085      	b.n	a0e4 <_dtoa_r+0x38c>
    9fd8:	001a      	movs	r2, r3
    9fda:	210f      	movs	r1, #15
    9fdc:	4b3c      	ldr	r3, [pc, #240]	; (a0d0 <_dtoa_r+0x378>)
    9fde:	400a      	ands	r2, r1
    9fe0:	00d2      	lsls	r2, r2, #3
    9fe2:	189b      	adds	r3, r3, r2
    9fe4:	685c      	ldr	r4, [r3, #4]
    9fe6:	681b      	ldr	r3, [r3, #0]
    9fe8:	9310      	str	r3, [sp, #64]	; 0x40
    9fea:	9411      	str	r4, [sp, #68]	; 0x44
    9fec:	9b03      	ldr	r3, [sp, #12]
    9fee:	2402      	movs	r4, #2
    9ff0:	111d      	asrs	r5, r3, #4
    9ff2:	06eb      	lsls	r3, r5, #27
    9ff4:	d50a      	bpl.n	a00c <_dtoa_r+0x2b4>
    9ff6:	4b3a      	ldr	r3, [pc, #232]	; (a0e0 <_dtoa_r+0x388>)
    9ff8:	400d      	ands	r5, r1
    9ffa:	6a1a      	ldr	r2, [r3, #32]
    9ffc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    9ffe:	9814      	ldr	r0, [sp, #80]	; 0x50
    a000:	9915      	ldr	r1, [sp, #84]	; 0x54
    a002:	f7fd fd17 	bl	7a34 <__aeabi_ddiv>
    a006:	9006      	str	r0, [sp, #24]
    a008:	9107      	str	r1, [sp, #28]
    a00a:	3401      	adds	r4, #1
    a00c:	4e34      	ldr	r6, [pc, #208]	; (a0e0 <_dtoa_r+0x388>)
    a00e:	2d00      	cmp	r5, #0
    a010:	d130      	bne.n	a074 <_dtoa_r+0x31c>
    a012:	9a10      	ldr	r2, [sp, #64]	; 0x40
    a014:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a016:	9806      	ldr	r0, [sp, #24]
    a018:	9907      	ldr	r1, [sp, #28]
    a01a:	f7fd fd0b 	bl	7a34 <__aeabi_ddiv>
    a01e:	9006      	str	r0, [sp, #24]
    a020:	9107      	str	r1, [sp, #28]
    a022:	e07a      	b.n	a11a <_dtoa_r+0x3c2>
    a024:	2301      	movs	r3, #1
    a026:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    a028:	930e      	str	r3, [sp, #56]	; 0x38
    a02a:	4694      	mov	ip, r2
    a02c:	9b03      	ldr	r3, [sp, #12]
    a02e:	4463      	add	r3, ip
    a030:	1c5f      	adds	r7, r3, #1
    a032:	930d      	str	r3, [sp, #52]	; 0x34
    a034:	1e3b      	subs	r3, r7, #0
    a036:	dcaf      	bgt.n	9f98 <_dtoa_r+0x240>
    a038:	2301      	movs	r3, #1
    a03a:	e7ad      	b.n	9f98 <_dtoa_r+0x240>
    a03c:	2300      	movs	r3, #0
    a03e:	e7a5      	b.n	9f8c <_dtoa_r+0x234>
    a040:	2300      	movs	r3, #0
    a042:	e7f0      	b.n	a026 <_dtoa_r+0x2ce>
    a044:	2300      	movs	r3, #0
    a046:	950e      	str	r5, [sp, #56]	; 0x38
    a048:	9322      	str	r3, [sp, #136]	; 0x88
    a04a:	3b01      	subs	r3, #1
    a04c:	2200      	movs	r2, #0
    a04e:	930d      	str	r3, [sp, #52]	; 0x34
    a050:	001f      	movs	r7, r3
    a052:	3313      	adds	r3, #19
    a054:	9223      	str	r2, [sp, #140]	; 0x8c
    a056:	e79f      	b.n	9f98 <_dtoa_r+0x240>
    a058:	2301      	movs	r3, #1
    a05a:	930e      	str	r3, [sp, #56]	; 0x38
    a05c:	3b02      	subs	r3, #2
    a05e:	e7f5      	b.n	a04c <_dtoa_r+0x2f4>
    a060:	2301      	movs	r3, #1
    a062:	930d      	str	r3, [sp, #52]	; 0x34
    a064:	001f      	movs	r7, r3
    a066:	001a      	movs	r2, r3
    a068:	e7f4      	b.n	a054 <_dtoa_r+0x2fc>
    a06a:	6861      	ldr	r1, [r4, #4]
    a06c:	0052      	lsls	r2, r2, #1
    a06e:	3101      	adds	r1, #1
    a070:	6061      	str	r1, [r4, #4]
    a072:	e796      	b.n	9fa2 <_dtoa_r+0x24a>
    a074:	2301      	movs	r3, #1
    a076:	421d      	tst	r5, r3
    a078:	d008      	beq.n	a08c <_dtoa_r+0x334>
    a07a:	9810      	ldr	r0, [sp, #64]	; 0x40
    a07c:	9911      	ldr	r1, [sp, #68]	; 0x44
    a07e:	18e4      	adds	r4, r4, r3
    a080:	6832      	ldr	r2, [r6, #0]
    a082:	6873      	ldr	r3, [r6, #4]
    a084:	f7fe f90a 	bl	829c <__aeabi_dmul>
    a088:	9010      	str	r0, [sp, #64]	; 0x40
    a08a:	9111      	str	r1, [sp, #68]	; 0x44
    a08c:	106d      	asrs	r5, r5, #1
    a08e:	3608      	adds	r6, #8
    a090:	e7bd      	b.n	a00e <_dtoa_r+0x2b6>
    a092:	46c0      	nop			; (mov r8, r8)
    a094:	7ff00000 	.word	0x7ff00000
    a098:	0000270f 	.word	0x0000270f
    a09c:	0000bc62 	.word	0x0000bc62
    a0a0:	0000bc65 	.word	0x0000bc65
    a0a4:	0000b477 	.word	0x0000b477
    a0a8:	0000b478 	.word	0x0000b478
    a0ac:	3ff00000 	.word	0x3ff00000
    a0b0:	fffffc01 	.word	0xfffffc01
    a0b4:	3ff80000 	.word	0x3ff80000
    a0b8:	636f4361 	.word	0x636f4361
    a0bc:	3fd287a7 	.word	0x3fd287a7
    a0c0:	8b60c8b3 	.word	0x8b60c8b3
    a0c4:	3fc68a28 	.word	0x3fc68a28
    a0c8:	509f79fb 	.word	0x509f79fb
    a0cc:	3fd34413 	.word	0x3fd34413
    a0d0:	0000bc90 	.word	0x0000bc90
    a0d4:	00000432 	.word	0x00000432
    a0d8:	00000412 	.word	0x00000412
    a0dc:	fe100000 	.word	0xfe100000
    a0e0:	0000bc68 	.word	0x0000bc68
    a0e4:	9b03      	ldr	r3, [sp, #12]
    a0e6:	2402      	movs	r4, #2
    a0e8:	2b00      	cmp	r3, #0
    a0ea:	d016      	beq.n	a11a <_dtoa_r+0x3c2>
    a0ec:	9814      	ldr	r0, [sp, #80]	; 0x50
    a0ee:	9915      	ldr	r1, [sp, #84]	; 0x54
    a0f0:	425d      	negs	r5, r3
    a0f2:	230f      	movs	r3, #15
    a0f4:	4aca      	ldr	r2, [pc, #808]	; (a420 <_dtoa_r+0x6c8>)
    a0f6:	402b      	ands	r3, r5
    a0f8:	00db      	lsls	r3, r3, #3
    a0fa:	18d3      	adds	r3, r2, r3
    a0fc:	681a      	ldr	r2, [r3, #0]
    a0fe:	685b      	ldr	r3, [r3, #4]
    a100:	f7fe f8cc 	bl	829c <__aeabi_dmul>
    a104:	2300      	movs	r3, #0
    a106:	9006      	str	r0, [sp, #24]
    a108:	9107      	str	r1, [sp, #28]
    a10a:	4ec6      	ldr	r6, [pc, #792]	; (a424 <_dtoa_r+0x6cc>)
    a10c:	112d      	asrs	r5, r5, #4
    a10e:	2d00      	cmp	r5, #0
    a110:	d000      	beq.n	a114 <_dtoa_r+0x3bc>
    a112:	e08c      	b.n	a22e <_dtoa_r+0x4d6>
    a114:	2b00      	cmp	r3, #0
    a116:	d000      	beq.n	a11a <_dtoa_r+0x3c2>
    a118:	e781      	b.n	a01e <_dtoa_r+0x2c6>
    a11a:	9b16      	ldr	r3, [sp, #88]	; 0x58
    a11c:	2b00      	cmp	r3, #0
    a11e:	d100      	bne.n	a122 <_dtoa_r+0x3ca>
    a120:	e091      	b.n	a246 <_dtoa_r+0x4ee>
    a122:	9a06      	ldr	r2, [sp, #24]
    a124:	9b07      	ldr	r3, [sp, #28]
    a126:	9210      	str	r2, [sp, #64]	; 0x40
    a128:	9311      	str	r3, [sp, #68]	; 0x44
    a12a:	9810      	ldr	r0, [sp, #64]	; 0x40
    a12c:	9911      	ldr	r1, [sp, #68]	; 0x44
    a12e:	2200      	movs	r2, #0
    a130:	4bbd      	ldr	r3, [pc, #756]	; (a428 <_dtoa_r+0x6d0>)
    a132:	f7fd f947 	bl	73c4 <__aeabi_dcmplt>
    a136:	2800      	cmp	r0, #0
    a138:	d100      	bne.n	a13c <_dtoa_r+0x3e4>
    a13a:	e084      	b.n	a246 <_dtoa_r+0x4ee>
    a13c:	2f00      	cmp	r7, #0
    a13e:	d100      	bne.n	a142 <_dtoa_r+0x3ea>
    a140:	e081      	b.n	a246 <_dtoa_r+0x4ee>
    a142:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    a144:	2b00      	cmp	r3, #0
    a146:	dd3e      	ble.n	a1c6 <_dtoa_r+0x46e>
    a148:	9810      	ldr	r0, [sp, #64]	; 0x40
    a14a:	9911      	ldr	r1, [sp, #68]	; 0x44
    a14c:	9b03      	ldr	r3, [sp, #12]
    a14e:	2200      	movs	r2, #0
    a150:	1e5e      	subs	r6, r3, #1
    a152:	4bb6      	ldr	r3, [pc, #728]	; (a42c <_dtoa_r+0x6d4>)
    a154:	f7fe f8a2 	bl	829c <__aeabi_dmul>
    a158:	9006      	str	r0, [sp, #24]
    a15a:	9107      	str	r1, [sp, #28]
    a15c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    a15e:	3401      	adds	r4, #1
    a160:	0020      	movs	r0, r4
    a162:	f001 f87f 	bl	b264 <__aeabi_i2d>
    a166:	9a06      	ldr	r2, [sp, #24]
    a168:	9b07      	ldr	r3, [sp, #28]
    a16a:	f7fe f897 	bl	829c <__aeabi_dmul>
    a16e:	2200      	movs	r2, #0
    a170:	4baf      	ldr	r3, [pc, #700]	; (a430 <_dtoa_r+0x6d8>)
    a172:	f7fd f94f 	bl	7414 <__aeabi_dadd>
    a176:	9012      	str	r0, [sp, #72]	; 0x48
    a178:	9113      	str	r1, [sp, #76]	; 0x4c
    a17a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a17c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
    a17e:	4aad      	ldr	r2, [pc, #692]	; (a434 <_dtoa_r+0x6dc>)
    a180:	9310      	str	r3, [sp, #64]	; 0x40
    a182:	9411      	str	r4, [sp, #68]	; 0x44
    a184:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    a186:	189c      	adds	r4, r3, r2
    a188:	9411      	str	r4, [sp, #68]	; 0x44
    a18a:	2d00      	cmp	r5, #0
    a18c:	d15e      	bne.n	a24c <_dtoa_r+0x4f4>
    a18e:	9806      	ldr	r0, [sp, #24]
    a190:	9907      	ldr	r1, [sp, #28]
    a192:	2200      	movs	r2, #0
    a194:	4ba8      	ldr	r3, [pc, #672]	; (a438 <_dtoa_r+0x6e0>)
    a196:	f7fe fb01 	bl	879c <__aeabi_dsub>
    a19a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    a19c:	0023      	movs	r3, r4
    a19e:	9006      	str	r0, [sp, #24]
    a1a0:	9107      	str	r1, [sp, #28]
    a1a2:	f7fd f923 	bl	73ec <__aeabi_dcmpgt>
    a1a6:	2800      	cmp	r0, #0
    a1a8:	d000      	beq.n	a1ac <_dtoa_r+0x454>
    a1aa:	e301      	b.n	a7b0 <_dtoa_r+0xa58>
    a1ac:	48a3      	ldr	r0, [pc, #652]	; (a43c <_dtoa_r+0x6e4>)
    a1ae:	9913      	ldr	r1, [sp, #76]	; 0x4c
    a1b0:	4684      	mov	ip, r0
    a1b2:	4461      	add	r1, ip
    a1b4:	000b      	movs	r3, r1
    a1b6:	9806      	ldr	r0, [sp, #24]
    a1b8:	9907      	ldr	r1, [sp, #28]
    a1ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
    a1bc:	f7fd f902 	bl	73c4 <__aeabi_dcmplt>
    a1c0:	2800      	cmp	r0, #0
    a1c2:	d000      	beq.n	a1c6 <_dtoa_r+0x46e>
    a1c4:	e2e8      	b.n	a798 <_dtoa_r+0xa40>
    a1c6:	9b14      	ldr	r3, [sp, #80]	; 0x50
    a1c8:	9c15      	ldr	r4, [sp, #84]	; 0x54
    a1ca:	9306      	str	r3, [sp, #24]
    a1cc:	9407      	str	r4, [sp, #28]
    a1ce:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    a1d0:	2b00      	cmp	r3, #0
    a1d2:	da00      	bge.n	a1d6 <_dtoa_r+0x47e>
    a1d4:	e157      	b.n	a486 <_dtoa_r+0x72e>
    a1d6:	9a03      	ldr	r2, [sp, #12]
    a1d8:	2a0e      	cmp	r2, #14
    a1da:	dd00      	ble.n	a1de <_dtoa_r+0x486>
    a1dc:	e153      	b.n	a486 <_dtoa_r+0x72e>
    a1de:	4b90      	ldr	r3, [pc, #576]	; (a420 <_dtoa_r+0x6c8>)
    a1e0:	00d2      	lsls	r2, r2, #3
    a1e2:	189b      	adds	r3, r3, r2
    a1e4:	685c      	ldr	r4, [r3, #4]
    a1e6:	681b      	ldr	r3, [r3, #0]
    a1e8:	9308      	str	r3, [sp, #32]
    a1ea:	9409      	str	r4, [sp, #36]	; 0x24
    a1ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    a1ee:	2b00      	cmp	r3, #0
    a1f0:	db00      	blt.n	a1f4 <_dtoa_r+0x49c>
    a1f2:	e0ce      	b.n	a392 <_dtoa_r+0x63a>
    a1f4:	2f00      	cmp	r7, #0
    a1f6:	dd00      	ble.n	a1fa <_dtoa_r+0x4a2>
    a1f8:	e0cb      	b.n	a392 <_dtoa_r+0x63a>
    a1fa:	d000      	beq.n	a1fe <_dtoa_r+0x4a6>
    a1fc:	e2cf      	b.n	a79e <_dtoa_r+0xa46>
    a1fe:	9808      	ldr	r0, [sp, #32]
    a200:	9909      	ldr	r1, [sp, #36]	; 0x24
    a202:	2200      	movs	r2, #0
    a204:	4b8c      	ldr	r3, [pc, #560]	; (a438 <_dtoa_r+0x6e0>)
    a206:	f7fe f849 	bl	829c <__aeabi_dmul>
    a20a:	9a06      	ldr	r2, [sp, #24]
    a20c:	9b07      	ldr	r3, [sp, #28]
    a20e:	f7fd f8f7 	bl	7400 <__aeabi_dcmpge>
    a212:	003e      	movs	r6, r7
    a214:	9708      	str	r7, [sp, #32]
    a216:	2800      	cmp	r0, #0
    a218:	d000      	beq.n	a21c <_dtoa_r+0x4c4>
    a21a:	e2a4      	b.n	a766 <_dtoa_r+0xa0e>
    a21c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a21e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a220:	1c5d      	adds	r5, r3, #1
    a222:	2331      	movs	r3, #49	; 0x31
    a224:	7013      	strb	r3, [r2, #0]
    a226:	9b03      	ldr	r3, [sp, #12]
    a228:	3301      	adds	r3, #1
    a22a:	9303      	str	r3, [sp, #12]
    a22c:	e29f      	b.n	a76e <_dtoa_r+0xa16>
    a22e:	2201      	movs	r2, #1
    a230:	4215      	tst	r5, r2
    a232:	d005      	beq.n	a240 <_dtoa_r+0x4e8>
    a234:	18a4      	adds	r4, r4, r2
    a236:	6832      	ldr	r2, [r6, #0]
    a238:	6873      	ldr	r3, [r6, #4]
    a23a:	f7fe f82f 	bl	829c <__aeabi_dmul>
    a23e:	2301      	movs	r3, #1
    a240:	106d      	asrs	r5, r5, #1
    a242:	3608      	adds	r6, #8
    a244:	e763      	b.n	a10e <_dtoa_r+0x3b6>
    a246:	9e03      	ldr	r6, [sp, #12]
    a248:	003d      	movs	r5, r7
    a24a:	e789      	b.n	a160 <_dtoa_r+0x408>
    a24c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a24e:	1e69      	subs	r1, r5, #1
    a250:	1952      	adds	r2, r2, r5
    a252:	9217      	str	r2, [sp, #92]	; 0x5c
    a254:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    a256:	4b72      	ldr	r3, [pc, #456]	; (a420 <_dtoa_r+0x6c8>)
    a258:	00c9      	lsls	r1, r1, #3
    a25a:	2a00      	cmp	r2, #0
    a25c:	d04a      	beq.n	a2f4 <_dtoa_r+0x59c>
    a25e:	185b      	adds	r3, r3, r1
    a260:	681a      	ldr	r2, [r3, #0]
    a262:	685b      	ldr	r3, [r3, #4]
    a264:	2000      	movs	r0, #0
    a266:	4976      	ldr	r1, [pc, #472]	; (a440 <_dtoa_r+0x6e8>)
    a268:	f7fd fbe4 	bl	7a34 <__aeabi_ddiv>
    a26c:	9a10      	ldr	r2, [sp, #64]	; 0x40
    a26e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a270:	f7fe fa94 	bl	879c <__aeabi_dsub>
    a274:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a276:	9010      	str	r0, [sp, #64]	; 0x40
    a278:	9111      	str	r1, [sp, #68]	; 0x44
    a27a:	9312      	str	r3, [sp, #72]	; 0x48
    a27c:	9806      	ldr	r0, [sp, #24]
    a27e:	9907      	ldr	r1, [sp, #28]
    a280:	f7fe fdc2 	bl	8e08 <__aeabi_d2iz>
    a284:	0004      	movs	r4, r0
    a286:	f000 ffed 	bl	b264 <__aeabi_i2d>
    a28a:	0002      	movs	r2, r0
    a28c:	000b      	movs	r3, r1
    a28e:	9806      	ldr	r0, [sp, #24]
    a290:	9907      	ldr	r1, [sp, #28]
    a292:	f7fe fa83 	bl	879c <__aeabi_dsub>
    a296:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a298:	3430      	adds	r4, #48	; 0x30
    a29a:	1c5d      	adds	r5, r3, #1
    a29c:	701c      	strb	r4, [r3, #0]
    a29e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    a2a0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a2a2:	9006      	str	r0, [sp, #24]
    a2a4:	9107      	str	r1, [sp, #28]
    a2a6:	f7fd f88d 	bl	73c4 <__aeabi_dcmplt>
    a2aa:	2800      	cmp	r0, #0
    a2ac:	d165      	bne.n	a37a <_dtoa_r+0x622>
    a2ae:	9a06      	ldr	r2, [sp, #24]
    a2b0:	9b07      	ldr	r3, [sp, #28]
    a2b2:	2000      	movs	r0, #0
    a2b4:	495c      	ldr	r1, [pc, #368]	; (a428 <_dtoa_r+0x6d0>)
    a2b6:	f7fe fa71 	bl	879c <__aeabi_dsub>
    a2ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
    a2bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a2be:	f7fd f881 	bl	73c4 <__aeabi_dcmplt>
    a2c2:	2800      	cmp	r0, #0
    a2c4:	d000      	beq.n	a2c8 <_dtoa_r+0x570>
    a2c6:	e0be      	b.n	a446 <_dtoa_r+0x6ee>
    a2c8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    a2ca:	429d      	cmp	r5, r3
    a2cc:	d100      	bne.n	a2d0 <_dtoa_r+0x578>
    a2ce:	e77a      	b.n	a1c6 <_dtoa_r+0x46e>
    a2d0:	9810      	ldr	r0, [sp, #64]	; 0x40
    a2d2:	9911      	ldr	r1, [sp, #68]	; 0x44
    a2d4:	2200      	movs	r2, #0
    a2d6:	4b55      	ldr	r3, [pc, #340]	; (a42c <_dtoa_r+0x6d4>)
    a2d8:	f7fd ffe0 	bl	829c <__aeabi_dmul>
    a2dc:	2200      	movs	r2, #0
    a2de:	9010      	str	r0, [sp, #64]	; 0x40
    a2e0:	9111      	str	r1, [sp, #68]	; 0x44
    a2e2:	9806      	ldr	r0, [sp, #24]
    a2e4:	9907      	ldr	r1, [sp, #28]
    a2e6:	4b51      	ldr	r3, [pc, #324]	; (a42c <_dtoa_r+0x6d4>)
    a2e8:	f7fd ffd8 	bl	829c <__aeabi_dmul>
    a2ec:	9512      	str	r5, [sp, #72]	; 0x48
    a2ee:	9006      	str	r0, [sp, #24]
    a2f0:	9107      	str	r1, [sp, #28]
    a2f2:	e7c3      	b.n	a27c <_dtoa_r+0x524>
    a2f4:	1859      	adds	r1, r3, r1
    a2f6:	6808      	ldr	r0, [r1, #0]
    a2f8:	6849      	ldr	r1, [r1, #4]
    a2fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
    a2fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a2fe:	f7fd ffcd 	bl	829c <__aeabi_dmul>
    a302:	9010      	str	r0, [sp, #64]	; 0x40
    a304:	9111      	str	r1, [sp, #68]	; 0x44
    a306:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    a308:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    a30a:	9806      	ldr	r0, [sp, #24]
    a30c:	9907      	ldr	r1, [sp, #28]
    a30e:	f7fe fd7b 	bl	8e08 <__aeabi_d2iz>
    a312:	9012      	str	r0, [sp, #72]	; 0x48
    a314:	f000 ffa6 	bl	b264 <__aeabi_i2d>
    a318:	0002      	movs	r2, r0
    a31a:	000b      	movs	r3, r1
    a31c:	9806      	ldr	r0, [sp, #24]
    a31e:	9907      	ldr	r1, [sp, #28]
    a320:	f7fe fa3c 	bl	879c <__aeabi_dsub>
    a324:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a326:	9006      	str	r0, [sp, #24]
    a328:	9107      	str	r1, [sp, #28]
    a32a:	3330      	adds	r3, #48	; 0x30
    a32c:	7023      	strb	r3, [r4, #0]
    a32e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    a330:	3401      	adds	r4, #1
    a332:	2200      	movs	r2, #0
    a334:	42a3      	cmp	r3, r4
    a336:	d124      	bne.n	a382 <_dtoa_r+0x62a>
    a338:	4b41      	ldr	r3, [pc, #260]	; (a440 <_dtoa_r+0x6e8>)
    a33a:	9810      	ldr	r0, [sp, #64]	; 0x40
    a33c:	9911      	ldr	r1, [sp, #68]	; 0x44
    a33e:	f7fd f869 	bl	7414 <__aeabi_dadd>
    a342:	0002      	movs	r2, r0
    a344:	000b      	movs	r3, r1
    a346:	9806      	ldr	r0, [sp, #24]
    a348:	9907      	ldr	r1, [sp, #28]
    a34a:	f7fd f84f 	bl	73ec <__aeabi_dcmpgt>
    a34e:	2800      	cmp	r0, #0
    a350:	d000      	beq.n	a354 <_dtoa_r+0x5fc>
    a352:	e078      	b.n	a446 <_dtoa_r+0x6ee>
    a354:	9a10      	ldr	r2, [sp, #64]	; 0x40
    a356:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a358:	2000      	movs	r0, #0
    a35a:	4939      	ldr	r1, [pc, #228]	; (a440 <_dtoa_r+0x6e8>)
    a35c:	f7fe fa1e 	bl	879c <__aeabi_dsub>
    a360:	0002      	movs	r2, r0
    a362:	000b      	movs	r3, r1
    a364:	9806      	ldr	r0, [sp, #24]
    a366:	9907      	ldr	r1, [sp, #28]
    a368:	f7fd f82c 	bl	73c4 <__aeabi_dcmplt>
    a36c:	2800      	cmp	r0, #0
    a36e:	d100      	bne.n	a372 <_dtoa_r+0x61a>
    a370:	e729      	b.n	a1c6 <_dtoa_r+0x46e>
    a372:	1e6b      	subs	r3, r5, #1
    a374:	781a      	ldrb	r2, [r3, #0]
    a376:	2a30      	cmp	r2, #48	; 0x30
    a378:	d001      	beq.n	a37e <_dtoa_r+0x626>
    a37a:	9603      	str	r6, [sp, #12]
    a37c:	e03f      	b.n	a3fe <_dtoa_r+0x6a6>
    a37e:	001d      	movs	r5, r3
    a380:	e7f7      	b.n	a372 <_dtoa_r+0x61a>
    a382:	9806      	ldr	r0, [sp, #24]
    a384:	9907      	ldr	r1, [sp, #28]
    a386:	4b29      	ldr	r3, [pc, #164]	; (a42c <_dtoa_r+0x6d4>)
    a388:	f7fd ff88 	bl	829c <__aeabi_dmul>
    a38c:	9006      	str	r0, [sp, #24]
    a38e:	9107      	str	r1, [sp, #28]
    a390:	e7bb      	b.n	a30a <_dtoa_r+0x5b2>
    a392:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    a394:	9a08      	ldr	r2, [sp, #32]
    a396:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a398:	9806      	ldr	r0, [sp, #24]
    a39a:	9907      	ldr	r1, [sp, #28]
    a39c:	f7fd fb4a 	bl	7a34 <__aeabi_ddiv>
    a3a0:	f7fe fd32 	bl	8e08 <__aeabi_d2iz>
    a3a4:	0004      	movs	r4, r0
    a3a6:	f000 ff5d 	bl	b264 <__aeabi_i2d>
    a3aa:	9a08      	ldr	r2, [sp, #32]
    a3ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a3ae:	f7fd ff75 	bl	829c <__aeabi_dmul>
    a3b2:	000b      	movs	r3, r1
    a3b4:	0002      	movs	r2, r0
    a3b6:	9806      	ldr	r0, [sp, #24]
    a3b8:	9907      	ldr	r1, [sp, #28]
    a3ba:	f7fe f9ef 	bl	879c <__aeabi_dsub>
    a3be:	0023      	movs	r3, r4
    a3c0:	3330      	adds	r3, #48	; 0x30
    a3c2:	7033      	strb	r3, [r6, #0]
    a3c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a3c6:	1c75      	adds	r5, r6, #1
    a3c8:	1aeb      	subs	r3, r5, r3
    a3ca:	429f      	cmp	r7, r3
    a3cc:	d14c      	bne.n	a468 <_dtoa_r+0x710>
    a3ce:	0002      	movs	r2, r0
    a3d0:	000b      	movs	r3, r1
    a3d2:	f7fd f81f 	bl	7414 <__aeabi_dadd>
    a3d6:	0006      	movs	r6, r0
    a3d8:	000f      	movs	r7, r1
    a3da:	0002      	movs	r2, r0
    a3dc:	000b      	movs	r3, r1
    a3de:	9808      	ldr	r0, [sp, #32]
    a3e0:	9909      	ldr	r1, [sp, #36]	; 0x24
    a3e2:	f7fc ffef 	bl	73c4 <__aeabi_dcmplt>
    a3e6:	2800      	cmp	r0, #0
    a3e8:	d12c      	bne.n	a444 <_dtoa_r+0x6ec>
    a3ea:	9808      	ldr	r0, [sp, #32]
    a3ec:	9909      	ldr	r1, [sp, #36]	; 0x24
    a3ee:	0032      	movs	r2, r6
    a3f0:	003b      	movs	r3, r7
    a3f2:	f7fc ffe1 	bl	73b8 <__aeabi_dcmpeq>
    a3f6:	2800      	cmp	r0, #0
    a3f8:	d001      	beq.n	a3fe <_dtoa_r+0x6a6>
    a3fa:	07e3      	lsls	r3, r4, #31
    a3fc:	d422      	bmi.n	a444 <_dtoa_r+0x6ec>
    a3fe:	9905      	ldr	r1, [sp, #20]
    a400:	9804      	ldr	r0, [sp, #16]
    a402:	f000 fae2 	bl	a9ca <_Bfree>
    a406:	2300      	movs	r3, #0
    a408:	702b      	strb	r3, [r5, #0]
    a40a:	9b03      	ldr	r3, [sp, #12]
    a40c:	9a24      	ldr	r2, [sp, #144]	; 0x90
    a40e:	3301      	adds	r3, #1
    a410:	6013      	str	r3, [r2, #0]
    a412:	9b26      	ldr	r3, [sp, #152]	; 0x98
    a414:	2b00      	cmp	r3, #0
    a416:	d100      	bne.n	a41a <_dtoa_r+0x6c2>
    a418:	e275      	b.n	a906 <_dtoa_r+0xbae>
    a41a:	601d      	str	r5, [r3, #0]
    a41c:	e273      	b.n	a906 <_dtoa_r+0xbae>
    a41e:	46c0      	nop			; (mov r8, r8)
    a420:	0000bc90 	.word	0x0000bc90
    a424:	0000bc68 	.word	0x0000bc68
    a428:	3ff00000 	.word	0x3ff00000
    a42c:	40240000 	.word	0x40240000
    a430:	401c0000 	.word	0x401c0000
    a434:	fcc00000 	.word	0xfcc00000
    a438:	40140000 	.word	0x40140000
    a43c:	7cc00000 	.word	0x7cc00000
    a440:	3fe00000 	.word	0x3fe00000
    a444:	9e03      	ldr	r6, [sp, #12]
    a446:	1e6b      	subs	r3, r5, #1
    a448:	781a      	ldrb	r2, [r3, #0]
    a44a:	2a39      	cmp	r2, #57	; 0x39
    a44c:	d106      	bne.n	a45c <_dtoa_r+0x704>
    a44e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a450:	429a      	cmp	r2, r3
    a452:	d107      	bne.n	a464 <_dtoa_r+0x70c>
    a454:	2330      	movs	r3, #48	; 0x30
    a456:	7013      	strb	r3, [r2, #0]
    a458:	0013      	movs	r3, r2
    a45a:	3601      	adds	r6, #1
    a45c:	781a      	ldrb	r2, [r3, #0]
    a45e:	3201      	adds	r2, #1
    a460:	701a      	strb	r2, [r3, #0]
    a462:	e78a      	b.n	a37a <_dtoa_r+0x622>
    a464:	001d      	movs	r5, r3
    a466:	e7ee      	b.n	a446 <_dtoa_r+0x6ee>
    a468:	2200      	movs	r2, #0
    a46a:	4bcf      	ldr	r3, [pc, #828]	; (a7a8 <_dtoa_r+0xa50>)
    a46c:	f7fd ff16 	bl	829c <__aeabi_dmul>
    a470:	2200      	movs	r2, #0
    a472:	2300      	movs	r3, #0
    a474:	9006      	str	r0, [sp, #24]
    a476:	9107      	str	r1, [sp, #28]
    a478:	002e      	movs	r6, r5
    a47a:	f7fc ff9d 	bl	73b8 <__aeabi_dcmpeq>
    a47e:	2800      	cmp	r0, #0
    a480:	d100      	bne.n	a484 <_dtoa_r+0x72c>
    a482:	e787      	b.n	a394 <_dtoa_r+0x63c>
    a484:	e7bb      	b.n	a3fe <_dtoa_r+0x6a6>
    a486:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    a488:	2a00      	cmp	r2, #0
    a48a:	d100      	bne.n	a48e <_dtoa_r+0x736>
    a48c:	e087      	b.n	a59e <_dtoa_r+0x846>
    a48e:	9a22      	ldr	r2, [sp, #136]	; 0x88
    a490:	2a01      	cmp	r2, #1
    a492:	dc6e      	bgt.n	a572 <_dtoa_r+0x81a>
    a494:	9a18      	ldr	r2, [sp, #96]	; 0x60
    a496:	2a00      	cmp	r2, #0
    a498:	d067      	beq.n	a56a <_dtoa_r+0x812>
    a49a:	4ac4      	ldr	r2, [pc, #784]	; (a7ac <_dtoa_r+0xa54>)
    a49c:	189b      	adds	r3, r3, r2
    a49e:	9d08      	ldr	r5, [sp, #32]
    a4a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    a4a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    a4a4:	2101      	movs	r1, #1
    a4a6:	18d2      	adds	r2, r2, r3
    a4a8:	920b      	str	r2, [sp, #44]	; 0x2c
    a4aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    a4ac:	9804      	ldr	r0, [sp, #16]
    a4ae:	18d3      	adds	r3, r2, r3
    a4b0:	930c      	str	r3, [sp, #48]	; 0x30
    a4b2:	f000 fb28 	bl	ab06 <__i2b>
    a4b6:	0006      	movs	r6, r0
    a4b8:	2c00      	cmp	r4, #0
    a4ba:	dd0e      	ble.n	a4da <_dtoa_r+0x782>
    a4bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a4be:	2b00      	cmp	r3, #0
    a4c0:	dd0b      	ble.n	a4da <_dtoa_r+0x782>
    a4c2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    a4c4:	0023      	movs	r3, r4
    a4c6:	4294      	cmp	r4, r2
    a4c8:	dd00      	ble.n	a4cc <_dtoa_r+0x774>
    a4ca:	0013      	movs	r3, r2
    a4cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    a4ce:	1ae4      	subs	r4, r4, r3
    a4d0:	1ad2      	subs	r2, r2, r3
    a4d2:	920b      	str	r2, [sp, #44]	; 0x2c
    a4d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    a4d6:	1ad3      	subs	r3, r2, r3
    a4d8:	930c      	str	r3, [sp, #48]	; 0x30
    a4da:	9b08      	ldr	r3, [sp, #32]
    a4dc:	2b00      	cmp	r3, #0
    a4de:	d01e      	beq.n	a51e <_dtoa_r+0x7c6>
    a4e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    a4e2:	2b00      	cmp	r3, #0
    a4e4:	d05f      	beq.n	a5a6 <_dtoa_r+0x84e>
    a4e6:	2d00      	cmp	r5, #0
    a4e8:	dd11      	ble.n	a50e <_dtoa_r+0x7b6>
    a4ea:	0031      	movs	r1, r6
    a4ec:	002a      	movs	r2, r5
    a4ee:	9804      	ldr	r0, [sp, #16]
    a4f0:	f000 fba2 	bl	ac38 <__pow5mult>
    a4f4:	9a05      	ldr	r2, [sp, #20]
    a4f6:	0001      	movs	r1, r0
    a4f8:	0006      	movs	r6, r0
    a4fa:	9804      	ldr	r0, [sp, #16]
    a4fc:	f000 fb0c 	bl	ab18 <__multiply>
    a500:	9905      	ldr	r1, [sp, #20]
    a502:	9010      	str	r0, [sp, #64]	; 0x40
    a504:	9804      	ldr	r0, [sp, #16]
    a506:	f000 fa60 	bl	a9ca <_Bfree>
    a50a:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a50c:	9305      	str	r3, [sp, #20]
    a50e:	9b08      	ldr	r3, [sp, #32]
    a510:	1b5a      	subs	r2, r3, r5
    a512:	d004      	beq.n	a51e <_dtoa_r+0x7c6>
    a514:	9905      	ldr	r1, [sp, #20]
    a516:	9804      	ldr	r0, [sp, #16]
    a518:	f000 fb8e 	bl	ac38 <__pow5mult>
    a51c:	9005      	str	r0, [sp, #20]
    a51e:	2101      	movs	r1, #1
    a520:	9804      	ldr	r0, [sp, #16]
    a522:	f000 faf0 	bl	ab06 <__i2b>
    a526:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a528:	9008      	str	r0, [sp, #32]
    a52a:	2b00      	cmp	r3, #0
    a52c:	dd3d      	ble.n	a5aa <_dtoa_r+0x852>
    a52e:	001a      	movs	r2, r3
    a530:	0001      	movs	r1, r0
    a532:	9804      	ldr	r0, [sp, #16]
    a534:	f000 fb80 	bl	ac38 <__pow5mult>
    a538:	9b22      	ldr	r3, [sp, #136]	; 0x88
    a53a:	9008      	str	r0, [sp, #32]
    a53c:	2500      	movs	r5, #0
    a53e:	2b01      	cmp	r3, #1
    a540:	dc3b      	bgt.n	a5ba <_dtoa_r+0x862>
    a542:	2500      	movs	r5, #0
    a544:	9b06      	ldr	r3, [sp, #24]
    a546:	42ab      	cmp	r3, r5
    a548:	d133      	bne.n	a5b2 <_dtoa_r+0x85a>
    a54a:	9b07      	ldr	r3, [sp, #28]
    a54c:	031b      	lsls	r3, r3, #12
    a54e:	42ab      	cmp	r3, r5
    a550:	d12f      	bne.n	a5b2 <_dtoa_r+0x85a>
    a552:	9b19      	ldr	r3, [sp, #100]	; 0x64
    a554:	9a07      	ldr	r2, [sp, #28]
    a556:	4213      	tst	r3, r2
    a558:	d02b      	beq.n	a5b2 <_dtoa_r+0x85a>
    a55a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a55c:	3501      	adds	r5, #1
    a55e:	3301      	adds	r3, #1
    a560:	930b      	str	r3, [sp, #44]	; 0x2c
    a562:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a564:	3301      	adds	r3, #1
    a566:	930c      	str	r3, [sp, #48]	; 0x30
    a568:	e023      	b.n	a5b2 <_dtoa_r+0x85a>
    a56a:	2336      	movs	r3, #54	; 0x36
    a56c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    a56e:	1a9b      	subs	r3, r3, r2
    a570:	e795      	b.n	a49e <_dtoa_r+0x746>
    a572:	9b08      	ldr	r3, [sp, #32]
    a574:	1e7d      	subs	r5, r7, #1
    a576:	42ab      	cmp	r3, r5
    a578:	db06      	blt.n	a588 <_dtoa_r+0x830>
    a57a:	1b5d      	subs	r5, r3, r5
    a57c:	2f00      	cmp	r7, #0
    a57e:	da0b      	bge.n	a598 <_dtoa_r+0x840>
    a580:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a582:	1bdc      	subs	r4, r3, r7
    a584:	2300      	movs	r3, #0
    a586:	e78c      	b.n	a4a2 <_dtoa_r+0x74a>
    a588:	9b08      	ldr	r3, [sp, #32]
    a58a:	9508      	str	r5, [sp, #32]
    a58c:	1aea      	subs	r2, r5, r3
    a58e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a590:	2500      	movs	r5, #0
    a592:	189b      	adds	r3, r3, r2
    a594:	930f      	str	r3, [sp, #60]	; 0x3c
    a596:	e7f1      	b.n	a57c <_dtoa_r+0x824>
    a598:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    a59a:	003b      	movs	r3, r7
    a59c:	e781      	b.n	a4a2 <_dtoa_r+0x74a>
    a59e:	9d08      	ldr	r5, [sp, #32]
    a5a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    a5a2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
    a5a4:	e788      	b.n	a4b8 <_dtoa_r+0x760>
    a5a6:	9a08      	ldr	r2, [sp, #32]
    a5a8:	e7b4      	b.n	a514 <_dtoa_r+0x7bc>
    a5aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
    a5ac:	2500      	movs	r5, #0
    a5ae:	2b01      	cmp	r3, #1
    a5b0:	ddc7      	ble.n	a542 <_dtoa_r+0x7ea>
    a5b2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a5b4:	2001      	movs	r0, #1
    a5b6:	2b00      	cmp	r3, #0
    a5b8:	d00b      	beq.n	a5d2 <_dtoa_r+0x87a>
    a5ba:	9b08      	ldr	r3, [sp, #32]
    a5bc:	9a08      	ldr	r2, [sp, #32]
    a5be:	691b      	ldr	r3, [r3, #16]
    a5c0:	930f      	str	r3, [sp, #60]	; 0x3c
    a5c2:	3303      	adds	r3, #3
    a5c4:	009b      	lsls	r3, r3, #2
    a5c6:	18d3      	adds	r3, r2, r3
    a5c8:	6858      	ldr	r0, [r3, #4]
    a5ca:	f000 fa53 	bl	aa74 <__hi0bits>
    a5ce:	2320      	movs	r3, #32
    a5d0:	1a18      	subs	r0, r3, r0
    a5d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a5d4:	18c0      	adds	r0, r0, r3
    a5d6:	231f      	movs	r3, #31
    a5d8:	4018      	ands	r0, r3
    a5da:	d100      	bne.n	a5de <_dtoa_r+0x886>
    a5dc:	e0ab      	b.n	a736 <_dtoa_r+0x9de>
    a5de:	3301      	adds	r3, #1
    a5e0:	1a1b      	subs	r3, r3, r0
    a5e2:	2b04      	cmp	r3, #4
    a5e4:	dc00      	bgt.n	a5e8 <_dtoa_r+0x890>
    a5e6:	e09b      	b.n	a720 <_dtoa_r+0x9c8>
    a5e8:	231c      	movs	r3, #28
    a5ea:	1a18      	subs	r0, r3, r0
    a5ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a5ee:	1824      	adds	r4, r4, r0
    a5f0:	181b      	adds	r3, r3, r0
    a5f2:	930b      	str	r3, [sp, #44]	; 0x2c
    a5f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a5f6:	181b      	adds	r3, r3, r0
    a5f8:	930c      	str	r3, [sp, #48]	; 0x30
    a5fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a5fc:	2b00      	cmp	r3, #0
    a5fe:	dd05      	ble.n	a60c <_dtoa_r+0x8b4>
    a600:	001a      	movs	r2, r3
    a602:	9905      	ldr	r1, [sp, #20]
    a604:	9804      	ldr	r0, [sp, #16]
    a606:	f000 fb69 	bl	acdc <__lshift>
    a60a:	9005      	str	r0, [sp, #20]
    a60c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a60e:	2b00      	cmp	r3, #0
    a610:	dd05      	ble.n	a61e <_dtoa_r+0x8c6>
    a612:	001a      	movs	r2, r3
    a614:	9908      	ldr	r1, [sp, #32]
    a616:	9804      	ldr	r0, [sp, #16]
    a618:	f000 fb60 	bl	acdc <__lshift>
    a61c:	9008      	str	r0, [sp, #32]
    a61e:	9b16      	ldr	r3, [sp, #88]	; 0x58
    a620:	2b00      	cmp	r3, #0
    a622:	d100      	bne.n	a626 <_dtoa_r+0x8ce>
    a624:	e089      	b.n	a73a <_dtoa_r+0x9e2>
    a626:	9908      	ldr	r1, [sp, #32]
    a628:	9805      	ldr	r0, [sp, #20]
    a62a:	f000 fba8 	bl	ad7e <__mcmp>
    a62e:	2800      	cmp	r0, #0
    a630:	db00      	blt.n	a634 <_dtoa_r+0x8dc>
    a632:	e082      	b.n	a73a <_dtoa_r+0x9e2>
    a634:	9b03      	ldr	r3, [sp, #12]
    a636:	220a      	movs	r2, #10
    a638:	3b01      	subs	r3, #1
    a63a:	9303      	str	r3, [sp, #12]
    a63c:	9905      	ldr	r1, [sp, #20]
    a63e:	2300      	movs	r3, #0
    a640:	9804      	ldr	r0, [sp, #16]
    a642:	f000 f9db 	bl	a9fc <__multadd>
    a646:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    a648:	9005      	str	r0, [sp, #20]
    a64a:	2b00      	cmp	r3, #0
    a64c:	d100      	bne.n	a650 <_dtoa_r+0x8f8>
    a64e:	e15d      	b.n	a90c <_dtoa_r+0xbb4>
    a650:	2300      	movs	r3, #0
    a652:	0031      	movs	r1, r6
    a654:	220a      	movs	r2, #10
    a656:	9804      	ldr	r0, [sp, #16]
    a658:	f000 f9d0 	bl	a9fc <__multadd>
    a65c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    a65e:	0006      	movs	r6, r0
    a660:	2b00      	cmp	r3, #0
    a662:	dc02      	bgt.n	a66a <_dtoa_r+0x912>
    a664:	9b22      	ldr	r3, [sp, #136]	; 0x88
    a666:	2b02      	cmp	r3, #2
    a668:	dc6d      	bgt.n	a746 <_dtoa_r+0x9ee>
    a66a:	2c00      	cmp	r4, #0
    a66c:	dd05      	ble.n	a67a <_dtoa_r+0x922>
    a66e:	0031      	movs	r1, r6
    a670:	0022      	movs	r2, r4
    a672:	9804      	ldr	r0, [sp, #16]
    a674:	f000 fb32 	bl	acdc <__lshift>
    a678:	0006      	movs	r6, r0
    a67a:	0030      	movs	r0, r6
    a67c:	2d00      	cmp	r5, #0
    a67e:	d011      	beq.n	a6a4 <_dtoa_r+0x94c>
    a680:	6871      	ldr	r1, [r6, #4]
    a682:	9804      	ldr	r0, [sp, #16]
    a684:	f000 f969 	bl	a95a <_Balloc>
    a688:	0031      	movs	r1, r6
    a68a:	0004      	movs	r4, r0
    a68c:	6933      	ldr	r3, [r6, #16]
    a68e:	310c      	adds	r1, #12
    a690:	1c9a      	adds	r2, r3, #2
    a692:	0092      	lsls	r2, r2, #2
    a694:	300c      	adds	r0, #12
    a696:	f7fe fcac 	bl	8ff2 <memcpy>
    a69a:	2201      	movs	r2, #1
    a69c:	0021      	movs	r1, r4
    a69e:	9804      	ldr	r0, [sp, #16]
    a6a0:	f000 fb1c 	bl	acdc <__lshift>
    a6a4:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    a6a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a6a8:	3f01      	subs	r7, #1
    a6aa:	930b      	str	r3, [sp, #44]	; 0x2c
    a6ac:	19db      	adds	r3, r3, r7
    a6ae:	0037      	movs	r7, r6
    a6b0:	0006      	movs	r6, r0
    a6b2:	930f      	str	r3, [sp, #60]	; 0x3c
    a6b4:	9908      	ldr	r1, [sp, #32]
    a6b6:	9805      	ldr	r0, [sp, #20]
    a6b8:	f7ff faca 	bl	9c50 <quorem>
    a6bc:	0039      	movs	r1, r7
    a6be:	900d      	str	r0, [sp, #52]	; 0x34
    a6c0:	0004      	movs	r4, r0
    a6c2:	9805      	ldr	r0, [sp, #20]
    a6c4:	f000 fb5b 	bl	ad7e <__mcmp>
    a6c8:	0032      	movs	r2, r6
    a6ca:	900e      	str	r0, [sp, #56]	; 0x38
    a6cc:	9908      	ldr	r1, [sp, #32]
    a6ce:	9804      	ldr	r0, [sp, #16]
    a6d0:	f000 fb6e 	bl	adb0 <__mdiff>
    a6d4:	2301      	movs	r3, #1
    a6d6:	930c      	str	r3, [sp, #48]	; 0x30
    a6d8:	68c3      	ldr	r3, [r0, #12]
    a6da:	3430      	adds	r4, #48	; 0x30
    a6dc:	0005      	movs	r5, r0
    a6de:	2b00      	cmp	r3, #0
    a6e0:	d104      	bne.n	a6ec <_dtoa_r+0x994>
    a6e2:	0001      	movs	r1, r0
    a6e4:	9805      	ldr	r0, [sp, #20]
    a6e6:	f000 fb4a 	bl	ad7e <__mcmp>
    a6ea:	900c      	str	r0, [sp, #48]	; 0x30
    a6ec:	0029      	movs	r1, r5
    a6ee:	9804      	ldr	r0, [sp, #16]
    a6f0:	f000 f96b 	bl	a9ca <_Bfree>
    a6f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a6f6:	9a22      	ldr	r2, [sp, #136]	; 0x88
    a6f8:	4313      	orrs	r3, r2
    a6fa:	d000      	beq.n	a6fe <_dtoa_r+0x9a6>
    a6fc:	e089      	b.n	a812 <_dtoa_r+0xaba>
    a6fe:	9a06      	ldr	r2, [sp, #24]
    a700:	3301      	adds	r3, #1
    a702:	4213      	tst	r3, r2
    a704:	d000      	beq.n	a708 <_dtoa_r+0x9b0>
    a706:	e084      	b.n	a812 <_dtoa_r+0xaba>
    a708:	2c39      	cmp	r4, #57	; 0x39
    a70a:	d100      	bne.n	a70e <_dtoa_r+0x9b6>
    a70c:	e0a3      	b.n	a856 <_dtoa_r+0xafe>
    a70e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    a710:	2b00      	cmp	r3, #0
    a712:	dd01      	ble.n	a718 <_dtoa_r+0x9c0>
    a714:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    a716:	3431      	adds	r4, #49	; 0x31
    a718:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a71a:	1c5d      	adds	r5, r3, #1
    a71c:	701c      	strb	r4, [r3, #0]
    a71e:	e027      	b.n	a770 <_dtoa_r+0xa18>
    a720:	2b04      	cmp	r3, #4
    a722:	d100      	bne.n	a726 <_dtoa_r+0x9ce>
    a724:	e769      	b.n	a5fa <_dtoa_r+0x8a2>
    a726:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    a728:	331c      	adds	r3, #28
    a72a:	18d2      	adds	r2, r2, r3
    a72c:	920b      	str	r2, [sp, #44]	; 0x2c
    a72e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    a730:	18e4      	adds	r4, r4, r3
    a732:	18d3      	adds	r3, r2, r3
    a734:	e760      	b.n	a5f8 <_dtoa_r+0x8a0>
    a736:	0003      	movs	r3, r0
    a738:	e7f5      	b.n	a726 <_dtoa_r+0x9ce>
    a73a:	2f00      	cmp	r7, #0
    a73c:	dc3c      	bgt.n	a7b8 <_dtoa_r+0xa60>
    a73e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    a740:	2b02      	cmp	r3, #2
    a742:	dd39      	ble.n	a7b8 <_dtoa_r+0xa60>
    a744:	970d      	str	r7, [sp, #52]	; 0x34
    a746:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    a748:	2b00      	cmp	r3, #0
    a74a:	d10c      	bne.n	a766 <_dtoa_r+0xa0e>
    a74c:	9908      	ldr	r1, [sp, #32]
    a74e:	2205      	movs	r2, #5
    a750:	9804      	ldr	r0, [sp, #16]
    a752:	f000 f953 	bl	a9fc <__multadd>
    a756:	9008      	str	r0, [sp, #32]
    a758:	0001      	movs	r1, r0
    a75a:	9805      	ldr	r0, [sp, #20]
    a75c:	f000 fb0f 	bl	ad7e <__mcmp>
    a760:	2800      	cmp	r0, #0
    a762:	dd00      	ble.n	a766 <_dtoa_r+0xa0e>
    a764:	e55a      	b.n	a21c <_dtoa_r+0x4c4>
    a766:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    a768:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    a76a:	43db      	mvns	r3, r3
    a76c:	9303      	str	r3, [sp, #12]
    a76e:	2700      	movs	r7, #0
    a770:	9908      	ldr	r1, [sp, #32]
    a772:	9804      	ldr	r0, [sp, #16]
    a774:	f000 f929 	bl	a9ca <_Bfree>
    a778:	2e00      	cmp	r6, #0
    a77a:	d100      	bne.n	a77e <_dtoa_r+0xa26>
    a77c:	e63f      	b.n	a3fe <_dtoa_r+0x6a6>
    a77e:	2f00      	cmp	r7, #0
    a780:	d005      	beq.n	a78e <_dtoa_r+0xa36>
    a782:	42b7      	cmp	r7, r6
    a784:	d003      	beq.n	a78e <_dtoa_r+0xa36>
    a786:	0039      	movs	r1, r7
    a788:	9804      	ldr	r0, [sp, #16]
    a78a:	f000 f91e 	bl	a9ca <_Bfree>
    a78e:	0031      	movs	r1, r6
    a790:	9804      	ldr	r0, [sp, #16]
    a792:	f000 f91a 	bl	a9ca <_Bfree>
    a796:	e632      	b.n	a3fe <_dtoa_r+0x6a6>
    a798:	9508      	str	r5, [sp, #32]
    a79a:	002e      	movs	r6, r5
    a79c:	e7e3      	b.n	a766 <_dtoa_r+0xa0e>
    a79e:	2300      	movs	r3, #0
    a7a0:	9308      	str	r3, [sp, #32]
    a7a2:	001e      	movs	r6, r3
    a7a4:	e7df      	b.n	a766 <_dtoa_r+0xa0e>
    a7a6:	46c0      	nop			; (mov r8, r8)
    a7a8:	40240000 	.word	0x40240000
    a7ac:	00000433 	.word	0x00000433
    a7b0:	9603      	str	r6, [sp, #12]
    a7b2:	9508      	str	r5, [sp, #32]
    a7b4:	002e      	movs	r6, r5
    a7b6:	e531      	b.n	a21c <_dtoa_r+0x4c4>
    a7b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    a7ba:	970d      	str	r7, [sp, #52]	; 0x34
    a7bc:	2b00      	cmp	r3, #0
    a7be:	d000      	beq.n	a7c2 <_dtoa_r+0xa6a>
    a7c0:	e753      	b.n	a66a <_dtoa_r+0x912>
    a7c2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    a7c4:	9908      	ldr	r1, [sp, #32]
    a7c6:	9805      	ldr	r0, [sp, #20]
    a7c8:	f7ff fa42 	bl	9c50 <quorem>
    a7cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a7ce:	3030      	adds	r0, #48	; 0x30
    a7d0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    a7d2:	7028      	strb	r0, [r5, #0]
    a7d4:	3501      	adds	r5, #1
    a7d6:	0004      	movs	r4, r0
    a7d8:	1aeb      	subs	r3, r5, r3
    a7da:	429a      	cmp	r2, r3
    a7dc:	dc78      	bgt.n	a8d0 <_dtoa_r+0xb78>
    a7de:	1e15      	subs	r5, r2, #0
    a7e0:	dc00      	bgt.n	a7e4 <_dtoa_r+0xa8c>
    a7e2:	2501      	movs	r5, #1
    a7e4:	2700      	movs	r7, #0
    a7e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a7e8:	195d      	adds	r5, r3, r5
    a7ea:	9905      	ldr	r1, [sp, #20]
    a7ec:	2201      	movs	r2, #1
    a7ee:	9804      	ldr	r0, [sp, #16]
    a7f0:	f000 fa74 	bl	acdc <__lshift>
    a7f4:	9908      	ldr	r1, [sp, #32]
    a7f6:	9005      	str	r0, [sp, #20]
    a7f8:	f000 fac1 	bl	ad7e <__mcmp>
    a7fc:	2800      	cmp	r0, #0
    a7fe:	dc2f      	bgt.n	a860 <_dtoa_r+0xb08>
    a800:	d101      	bne.n	a806 <_dtoa_r+0xaae>
    a802:	07e3      	lsls	r3, r4, #31
    a804:	d42c      	bmi.n	a860 <_dtoa_r+0xb08>
    a806:	1e6b      	subs	r3, r5, #1
    a808:	781a      	ldrb	r2, [r3, #0]
    a80a:	2a30      	cmp	r2, #48	; 0x30
    a80c:	d1b0      	bne.n	a770 <_dtoa_r+0xa18>
    a80e:	001d      	movs	r5, r3
    a810:	e7f9      	b.n	a806 <_dtoa_r+0xaae>
    a812:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    a814:	2b00      	cmp	r3, #0
    a816:	db07      	blt.n	a828 <_dtoa_r+0xad0>
    a818:	001d      	movs	r5, r3
    a81a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    a81c:	431d      	orrs	r5, r3
    a81e:	d126      	bne.n	a86e <_dtoa_r+0xb16>
    a820:	2301      	movs	r3, #1
    a822:	9a06      	ldr	r2, [sp, #24]
    a824:	4213      	tst	r3, r2
    a826:	d122      	bne.n	a86e <_dtoa_r+0xb16>
    a828:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a82a:	2b00      	cmp	r3, #0
    a82c:	dc00      	bgt.n	a830 <_dtoa_r+0xad8>
    a82e:	e773      	b.n	a718 <_dtoa_r+0x9c0>
    a830:	9905      	ldr	r1, [sp, #20]
    a832:	2201      	movs	r2, #1
    a834:	9804      	ldr	r0, [sp, #16]
    a836:	f000 fa51 	bl	acdc <__lshift>
    a83a:	9908      	ldr	r1, [sp, #32]
    a83c:	9005      	str	r0, [sp, #20]
    a83e:	f000 fa9e 	bl	ad7e <__mcmp>
    a842:	2800      	cmp	r0, #0
    a844:	dc04      	bgt.n	a850 <_dtoa_r+0xaf8>
    a846:	d000      	beq.n	a84a <_dtoa_r+0xaf2>
    a848:	e766      	b.n	a718 <_dtoa_r+0x9c0>
    a84a:	07e3      	lsls	r3, r4, #31
    a84c:	d400      	bmi.n	a850 <_dtoa_r+0xaf8>
    a84e:	e763      	b.n	a718 <_dtoa_r+0x9c0>
    a850:	2c39      	cmp	r4, #57	; 0x39
    a852:	d000      	beq.n	a856 <_dtoa_r+0xafe>
    a854:	e75e      	b.n	a714 <_dtoa_r+0x9bc>
    a856:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a858:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    a85a:	1c5d      	adds	r5, r3, #1
    a85c:	2339      	movs	r3, #57	; 0x39
    a85e:	7013      	strb	r3, [r2, #0]
    a860:	1e6b      	subs	r3, r5, #1
    a862:	781a      	ldrb	r2, [r3, #0]
    a864:	2a39      	cmp	r2, #57	; 0x39
    a866:	d03b      	beq.n	a8e0 <_dtoa_r+0xb88>
    a868:	3201      	adds	r2, #1
    a86a:	701a      	strb	r2, [r3, #0]
    a86c:	e780      	b.n	a770 <_dtoa_r+0xa18>
    a86e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a870:	3301      	adds	r3, #1
    a872:	930d      	str	r3, [sp, #52]	; 0x34
    a874:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a876:	2b00      	cmp	r3, #0
    a878:	dd05      	ble.n	a886 <_dtoa_r+0xb2e>
    a87a:	2c39      	cmp	r4, #57	; 0x39
    a87c:	d0eb      	beq.n	a856 <_dtoa_r+0xafe>
    a87e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    a880:	3401      	adds	r4, #1
    a882:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a884:	e74a      	b.n	a71c <_dtoa_r+0x9c4>
    a886:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a888:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    a88a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    a88c:	701c      	strb	r4, [r3, #0]
    a88e:	4293      	cmp	r3, r2
    a890:	d0ab      	beq.n	a7ea <_dtoa_r+0xa92>
    a892:	2300      	movs	r3, #0
    a894:	220a      	movs	r2, #10
    a896:	9905      	ldr	r1, [sp, #20]
    a898:	9804      	ldr	r0, [sp, #16]
    a89a:	f000 f8af 	bl	a9fc <__multadd>
    a89e:	2300      	movs	r3, #0
    a8a0:	9005      	str	r0, [sp, #20]
    a8a2:	220a      	movs	r2, #10
    a8a4:	0039      	movs	r1, r7
    a8a6:	9804      	ldr	r0, [sp, #16]
    a8a8:	42b7      	cmp	r7, r6
    a8aa:	d106      	bne.n	a8ba <_dtoa_r+0xb62>
    a8ac:	f000 f8a6 	bl	a9fc <__multadd>
    a8b0:	0007      	movs	r7, r0
    a8b2:	0006      	movs	r6, r0
    a8b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    a8b6:	930b      	str	r3, [sp, #44]	; 0x2c
    a8b8:	e6fc      	b.n	a6b4 <_dtoa_r+0x95c>
    a8ba:	f000 f89f 	bl	a9fc <__multadd>
    a8be:	0031      	movs	r1, r6
    a8c0:	0007      	movs	r7, r0
    a8c2:	2300      	movs	r3, #0
    a8c4:	220a      	movs	r2, #10
    a8c6:	9804      	ldr	r0, [sp, #16]
    a8c8:	f000 f898 	bl	a9fc <__multadd>
    a8cc:	0006      	movs	r6, r0
    a8ce:	e7f1      	b.n	a8b4 <_dtoa_r+0xb5c>
    a8d0:	2300      	movs	r3, #0
    a8d2:	220a      	movs	r2, #10
    a8d4:	9905      	ldr	r1, [sp, #20]
    a8d6:	9804      	ldr	r0, [sp, #16]
    a8d8:	f000 f890 	bl	a9fc <__multadd>
    a8dc:	9005      	str	r0, [sp, #20]
    a8de:	e771      	b.n	a7c4 <_dtoa_r+0xa6c>
    a8e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a8e2:	429a      	cmp	r2, r3
    a8e4:	d105      	bne.n	a8f2 <_dtoa_r+0xb9a>
    a8e6:	9b03      	ldr	r3, [sp, #12]
    a8e8:	3301      	adds	r3, #1
    a8ea:	9303      	str	r3, [sp, #12]
    a8ec:	2331      	movs	r3, #49	; 0x31
    a8ee:	7013      	strb	r3, [r2, #0]
    a8f0:	e73e      	b.n	a770 <_dtoa_r+0xa18>
    a8f2:	001d      	movs	r5, r3
    a8f4:	e7b4      	b.n	a860 <_dtoa_r+0xb08>
    a8f6:	4b0a      	ldr	r3, [pc, #40]	; (a920 <_dtoa_r+0xbc8>)
    a8f8:	9a26      	ldr	r2, [sp, #152]	; 0x98
    a8fa:	930a      	str	r3, [sp, #40]	; 0x28
    a8fc:	4b09      	ldr	r3, [pc, #36]	; (a924 <_dtoa_r+0xbcc>)
    a8fe:	2a00      	cmp	r2, #0
    a900:	d001      	beq.n	a906 <_dtoa_r+0xbae>
    a902:	9a26      	ldr	r2, [sp, #152]	; 0x98
    a904:	6013      	str	r3, [r2, #0]
    a906:	980a      	ldr	r0, [sp, #40]	; 0x28
    a908:	b01d      	add	sp, #116	; 0x74
    a90a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a90c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    a90e:	2b00      	cmp	r3, #0
    a910:	dd00      	ble.n	a914 <_dtoa_r+0xbbc>
    a912:	e756      	b.n	a7c2 <_dtoa_r+0xa6a>
    a914:	9b22      	ldr	r3, [sp, #136]	; 0x88
    a916:	2b02      	cmp	r3, #2
    a918:	dc00      	bgt.n	a91c <_dtoa_r+0xbc4>
    a91a:	e752      	b.n	a7c2 <_dtoa_r+0xa6a>
    a91c:	e713      	b.n	a746 <_dtoa_r+0x9ee>
    a91e:	46c0      	nop			; (mov r8, r8)
    a920:	0000bc59 	.word	0x0000bc59
    a924:	0000bc61 	.word	0x0000bc61

0000a928 <_localeconv_r>:
    a928:	4b03      	ldr	r3, [pc, #12]	; (a938 <_localeconv_r+0x10>)
    a92a:	681b      	ldr	r3, [r3, #0]
    a92c:	6a18      	ldr	r0, [r3, #32]
    a92e:	2800      	cmp	r0, #0
    a930:	d100      	bne.n	a934 <_localeconv_r+0xc>
    a932:	4802      	ldr	r0, [pc, #8]	; (a93c <_localeconv_r+0x14>)
    a934:	30f0      	adds	r0, #240	; 0xf0
    a936:	4770      	bx	lr
    a938:	20000090 	.word	0x20000090
    a93c:	200000f4 	.word	0x200000f4

0000a940 <memchr>:
    a940:	b2c9      	uxtb	r1, r1
    a942:	1882      	adds	r2, r0, r2
    a944:	4290      	cmp	r0, r2
    a946:	d101      	bne.n	a94c <memchr+0xc>
    a948:	2000      	movs	r0, #0
    a94a:	4770      	bx	lr
    a94c:	7803      	ldrb	r3, [r0, #0]
    a94e:	428b      	cmp	r3, r1
    a950:	d0fb      	beq.n	a94a <memchr+0xa>
    a952:	3001      	adds	r0, #1
    a954:	e7f6      	b.n	a944 <memchr+0x4>

0000a956 <__malloc_lock>:
    a956:	4770      	bx	lr

0000a958 <__malloc_unlock>:
    a958:	4770      	bx	lr

0000a95a <_Balloc>:
    a95a:	b570      	push	{r4, r5, r6, lr}
    a95c:	6a46      	ldr	r6, [r0, #36]	; 0x24
    a95e:	0004      	movs	r4, r0
    a960:	000d      	movs	r5, r1
    a962:	2e00      	cmp	r6, #0
    a964:	d107      	bne.n	a976 <_Balloc+0x1c>
    a966:	2010      	movs	r0, #16
    a968:	f7fe fb0e 	bl	8f88 <malloc>
    a96c:	6260      	str	r0, [r4, #36]	; 0x24
    a96e:	6046      	str	r6, [r0, #4]
    a970:	6086      	str	r6, [r0, #8]
    a972:	6006      	str	r6, [r0, #0]
    a974:	60c6      	str	r6, [r0, #12]
    a976:	6a66      	ldr	r6, [r4, #36]	; 0x24
    a978:	68f3      	ldr	r3, [r6, #12]
    a97a:	2b00      	cmp	r3, #0
    a97c:	d013      	beq.n	a9a6 <_Balloc+0x4c>
    a97e:	6a63      	ldr	r3, [r4, #36]	; 0x24
    a980:	00aa      	lsls	r2, r5, #2
    a982:	68db      	ldr	r3, [r3, #12]
    a984:	189b      	adds	r3, r3, r2
    a986:	6818      	ldr	r0, [r3, #0]
    a988:	2800      	cmp	r0, #0
    a98a:	d118      	bne.n	a9be <_Balloc+0x64>
    a98c:	2101      	movs	r1, #1
    a98e:	000e      	movs	r6, r1
    a990:	40ae      	lsls	r6, r5
    a992:	1d72      	adds	r2, r6, #5
    a994:	0092      	lsls	r2, r2, #2
    a996:	0020      	movs	r0, r4
    a998:	f000 fac2 	bl	af20 <_calloc_r>
    a99c:	2800      	cmp	r0, #0
    a99e:	d00c      	beq.n	a9ba <_Balloc+0x60>
    a9a0:	6045      	str	r5, [r0, #4]
    a9a2:	6086      	str	r6, [r0, #8]
    a9a4:	e00d      	b.n	a9c2 <_Balloc+0x68>
    a9a6:	2221      	movs	r2, #33	; 0x21
    a9a8:	2104      	movs	r1, #4
    a9aa:	0020      	movs	r0, r4
    a9ac:	f000 fab8 	bl	af20 <_calloc_r>
    a9b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
    a9b2:	60f0      	str	r0, [r6, #12]
    a9b4:	68db      	ldr	r3, [r3, #12]
    a9b6:	2b00      	cmp	r3, #0
    a9b8:	d1e1      	bne.n	a97e <_Balloc+0x24>
    a9ba:	2000      	movs	r0, #0
    a9bc:	bd70      	pop	{r4, r5, r6, pc}
    a9be:	6802      	ldr	r2, [r0, #0]
    a9c0:	601a      	str	r2, [r3, #0]
    a9c2:	2300      	movs	r3, #0
    a9c4:	6103      	str	r3, [r0, #16]
    a9c6:	60c3      	str	r3, [r0, #12]
    a9c8:	e7f8      	b.n	a9bc <_Balloc+0x62>

0000a9ca <_Bfree>:
    a9ca:	b570      	push	{r4, r5, r6, lr}
    a9cc:	6a44      	ldr	r4, [r0, #36]	; 0x24
    a9ce:	0006      	movs	r6, r0
    a9d0:	000d      	movs	r5, r1
    a9d2:	2c00      	cmp	r4, #0
    a9d4:	d107      	bne.n	a9e6 <_Bfree+0x1c>
    a9d6:	2010      	movs	r0, #16
    a9d8:	f7fe fad6 	bl	8f88 <malloc>
    a9dc:	6270      	str	r0, [r6, #36]	; 0x24
    a9de:	6044      	str	r4, [r0, #4]
    a9e0:	6084      	str	r4, [r0, #8]
    a9e2:	6004      	str	r4, [r0, #0]
    a9e4:	60c4      	str	r4, [r0, #12]
    a9e6:	2d00      	cmp	r5, #0
    a9e8:	d007      	beq.n	a9fa <_Bfree+0x30>
    a9ea:	6a73      	ldr	r3, [r6, #36]	; 0x24
    a9ec:	686a      	ldr	r2, [r5, #4]
    a9ee:	68db      	ldr	r3, [r3, #12]
    a9f0:	0092      	lsls	r2, r2, #2
    a9f2:	189b      	adds	r3, r3, r2
    a9f4:	681a      	ldr	r2, [r3, #0]
    a9f6:	602a      	str	r2, [r5, #0]
    a9f8:	601d      	str	r5, [r3, #0]
    a9fa:	bd70      	pop	{r4, r5, r6, pc}

0000a9fc <__multadd>:
    a9fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    a9fe:	001e      	movs	r6, r3
    aa00:	2314      	movs	r3, #20
    aa02:	469c      	mov	ip, r3
    aa04:	0007      	movs	r7, r0
    aa06:	000c      	movs	r4, r1
    aa08:	2000      	movs	r0, #0
    aa0a:	690d      	ldr	r5, [r1, #16]
    aa0c:	448c      	add	ip, r1
    aa0e:	4663      	mov	r3, ip
    aa10:	8819      	ldrh	r1, [r3, #0]
    aa12:	681b      	ldr	r3, [r3, #0]
    aa14:	4351      	muls	r1, r2
    aa16:	0c1b      	lsrs	r3, r3, #16
    aa18:	4353      	muls	r3, r2
    aa1a:	1989      	adds	r1, r1, r6
    aa1c:	0c0e      	lsrs	r6, r1, #16
    aa1e:	199b      	adds	r3, r3, r6
    aa20:	b289      	uxth	r1, r1
    aa22:	0c1e      	lsrs	r6, r3, #16
    aa24:	041b      	lsls	r3, r3, #16
    aa26:	185b      	adds	r3, r3, r1
    aa28:	4661      	mov	r1, ip
    aa2a:	3001      	adds	r0, #1
    aa2c:	c108      	stmia	r1!, {r3}
    aa2e:	468c      	mov	ip, r1
    aa30:	4285      	cmp	r5, r0
    aa32:	dcec      	bgt.n	aa0e <__multadd+0x12>
    aa34:	2e00      	cmp	r6, #0
    aa36:	d01b      	beq.n	aa70 <__multadd+0x74>
    aa38:	68a3      	ldr	r3, [r4, #8]
    aa3a:	429d      	cmp	r5, r3
    aa3c:	db12      	blt.n	aa64 <__multadd+0x68>
    aa3e:	6863      	ldr	r3, [r4, #4]
    aa40:	0038      	movs	r0, r7
    aa42:	1c59      	adds	r1, r3, #1
    aa44:	f7ff ff89 	bl	a95a <_Balloc>
    aa48:	0021      	movs	r1, r4
    aa4a:	6923      	ldr	r3, [r4, #16]
    aa4c:	9001      	str	r0, [sp, #4]
    aa4e:	1c9a      	adds	r2, r3, #2
    aa50:	0092      	lsls	r2, r2, #2
    aa52:	310c      	adds	r1, #12
    aa54:	300c      	adds	r0, #12
    aa56:	f7fe facc 	bl	8ff2 <memcpy>
    aa5a:	0021      	movs	r1, r4
    aa5c:	0038      	movs	r0, r7
    aa5e:	f7ff ffb4 	bl	a9ca <_Bfree>
    aa62:	9c01      	ldr	r4, [sp, #4]
    aa64:	1d2b      	adds	r3, r5, #4
    aa66:	009b      	lsls	r3, r3, #2
    aa68:	18e3      	adds	r3, r4, r3
    aa6a:	3501      	adds	r5, #1
    aa6c:	605e      	str	r6, [r3, #4]
    aa6e:	6125      	str	r5, [r4, #16]
    aa70:	0020      	movs	r0, r4
    aa72:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000aa74 <__hi0bits>:
    aa74:	0003      	movs	r3, r0
    aa76:	0c02      	lsrs	r2, r0, #16
    aa78:	2000      	movs	r0, #0
    aa7a:	4282      	cmp	r2, r0
    aa7c:	d101      	bne.n	aa82 <__hi0bits+0xe>
    aa7e:	041b      	lsls	r3, r3, #16
    aa80:	3010      	adds	r0, #16
    aa82:	0e1a      	lsrs	r2, r3, #24
    aa84:	d101      	bne.n	aa8a <__hi0bits+0x16>
    aa86:	3008      	adds	r0, #8
    aa88:	021b      	lsls	r3, r3, #8
    aa8a:	0f1a      	lsrs	r2, r3, #28
    aa8c:	d101      	bne.n	aa92 <__hi0bits+0x1e>
    aa8e:	3004      	adds	r0, #4
    aa90:	011b      	lsls	r3, r3, #4
    aa92:	0f9a      	lsrs	r2, r3, #30
    aa94:	d101      	bne.n	aa9a <__hi0bits+0x26>
    aa96:	3002      	adds	r0, #2
    aa98:	009b      	lsls	r3, r3, #2
    aa9a:	2b00      	cmp	r3, #0
    aa9c:	db03      	blt.n	aaa6 <__hi0bits+0x32>
    aa9e:	3001      	adds	r0, #1
    aaa0:	005b      	lsls	r3, r3, #1
    aaa2:	d400      	bmi.n	aaa6 <__hi0bits+0x32>
    aaa4:	2020      	movs	r0, #32
    aaa6:	4770      	bx	lr

0000aaa8 <__lo0bits>:
    aaa8:	2207      	movs	r2, #7
    aaaa:	6803      	ldr	r3, [r0, #0]
    aaac:	b510      	push	{r4, lr}
    aaae:	0001      	movs	r1, r0
    aab0:	401a      	ands	r2, r3
    aab2:	d00d      	beq.n	aad0 <__lo0bits+0x28>
    aab4:	2401      	movs	r4, #1
    aab6:	2000      	movs	r0, #0
    aab8:	4223      	tst	r3, r4
    aaba:	d105      	bne.n	aac8 <__lo0bits+0x20>
    aabc:	3002      	adds	r0, #2
    aabe:	4203      	tst	r3, r0
    aac0:	d003      	beq.n	aaca <__lo0bits+0x22>
    aac2:	40e3      	lsrs	r3, r4
    aac4:	0020      	movs	r0, r4
    aac6:	600b      	str	r3, [r1, #0]
    aac8:	bd10      	pop	{r4, pc}
    aaca:	089b      	lsrs	r3, r3, #2
    aacc:	600b      	str	r3, [r1, #0]
    aace:	e7fb      	b.n	aac8 <__lo0bits+0x20>
    aad0:	b29c      	uxth	r4, r3
    aad2:	0010      	movs	r0, r2
    aad4:	2c00      	cmp	r4, #0
    aad6:	d101      	bne.n	aadc <__lo0bits+0x34>
    aad8:	2010      	movs	r0, #16
    aada:	0c1b      	lsrs	r3, r3, #16
    aadc:	b2da      	uxtb	r2, r3
    aade:	2a00      	cmp	r2, #0
    aae0:	d101      	bne.n	aae6 <__lo0bits+0x3e>
    aae2:	3008      	adds	r0, #8
    aae4:	0a1b      	lsrs	r3, r3, #8
    aae6:	071a      	lsls	r2, r3, #28
    aae8:	d101      	bne.n	aaee <__lo0bits+0x46>
    aaea:	3004      	adds	r0, #4
    aaec:	091b      	lsrs	r3, r3, #4
    aaee:	079a      	lsls	r2, r3, #30
    aaf0:	d101      	bne.n	aaf6 <__lo0bits+0x4e>
    aaf2:	3002      	adds	r0, #2
    aaf4:	089b      	lsrs	r3, r3, #2
    aaf6:	07da      	lsls	r2, r3, #31
    aaf8:	d4e8      	bmi.n	aacc <__lo0bits+0x24>
    aafa:	085b      	lsrs	r3, r3, #1
    aafc:	d001      	beq.n	ab02 <__lo0bits+0x5a>
    aafe:	3001      	adds	r0, #1
    ab00:	e7e4      	b.n	aacc <__lo0bits+0x24>
    ab02:	2020      	movs	r0, #32
    ab04:	e7e0      	b.n	aac8 <__lo0bits+0x20>

0000ab06 <__i2b>:
    ab06:	b510      	push	{r4, lr}
    ab08:	000c      	movs	r4, r1
    ab0a:	2101      	movs	r1, #1
    ab0c:	f7ff ff25 	bl	a95a <_Balloc>
    ab10:	2301      	movs	r3, #1
    ab12:	6144      	str	r4, [r0, #20]
    ab14:	6103      	str	r3, [r0, #16]
    ab16:	bd10      	pop	{r4, pc}

0000ab18 <__multiply>:
    ab18:	b5f0      	push	{r4, r5, r6, r7, lr}
    ab1a:	690b      	ldr	r3, [r1, #16]
    ab1c:	0015      	movs	r5, r2
    ab1e:	6912      	ldr	r2, [r2, #16]
    ab20:	b089      	sub	sp, #36	; 0x24
    ab22:	000c      	movs	r4, r1
    ab24:	4293      	cmp	r3, r2
    ab26:	da01      	bge.n	ab2c <__multiply+0x14>
    ab28:	002c      	movs	r4, r5
    ab2a:	000d      	movs	r5, r1
    ab2c:	6927      	ldr	r7, [r4, #16]
    ab2e:	692e      	ldr	r6, [r5, #16]
    ab30:	68a2      	ldr	r2, [r4, #8]
    ab32:	19bb      	adds	r3, r7, r6
    ab34:	6861      	ldr	r1, [r4, #4]
    ab36:	9301      	str	r3, [sp, #4]
    ab38:	4293      	cmp	r3, r2
    ab3a:	dd00      	ble.n	ab3e <__multiply+0x26>
    ab3c:	3101      	adds	r1, #1
    ab3e:	f7ff ff0c 	bl	a95a <_Balloc>
    ab42:	0003      	movs	r3, r0
    ab44:	3314      	adds	r3, #20
    ab46:	9300      	str	r3, [sp, #0]
    ab48:	9a00      	ldr	r2, [sp, #0]
    ab4a:	19bb      	adds	r3, r7, r6
    ab4c:	4694      	mov	ip, r2
    ab4e:	009b      	lsls	r3, r3, #2
    ab50:	449c      	add	ip, r3
    ab52:	0013      	movs	r3, r2
    ab54:	2200      	movs	r2, #0
    ab56:	9004      	str	r0, [sp, #16]
    ab58:	4563      	cmp	r3, ip
    ab5a:	d31c      	bcc.n	ab96 <__multiply+0x7e>
    ab5c:	002a      	movs	r2, r5
    ab5e:	3414      	adds	r4, #20
    ab60:	00bf      	lsls	r7, r7, #2
    ab62:	19e3      	adds	r3, r4, r7
    ab64:	3214      	adds	r2, #20
    ab66:	00b6      	lsls	r6, r6, #2
    ab68:	9305      	str	r3, [sp, #20]
    ab6a:	1993      	adds	r3, r2, r6
    ab6c:	9402      	str	r4, [sp, #8]
    ab6e:	9306      	str	r3, [sp, #24]
    ab70:	9b06      	ldr	r3, [sp, #24]
    ab72:	429a      	cmp	r2, r3
    ab74:	d311      	bcc.n	ab9a <__multiply+0x82>
    ab76:	9b01      	ldr	r3, [sp, #4]
    ab78:	2b00      	cmp	r3, #0
    ab7a:	dd06      	ble.n	ab8a <__multiply+0x72>
    ab7c:	2304      	movs	r3, #4
    ab7e:	425b      	negs	r3, r3
    ab80:	449c      	add	ip, r3
    ab82:	4663      	mov	r3, ip
    ab84:	681b      	ldr	r3, [r3, #0]
    ab86:	2b00      	cmp	r3, #0
    ab88:	d051      	beq.n	ac2e <__multiply+0x116>
    ab8a:	9b04      	ldr	r3, [sp, #16]
    ab8c:	9a01      	ldr	r2, [sp, #4]
    ab8e:	0018      	movs	r0, r3
    ab90:	611a      	str	r2, [r3, #16]
    ab92:	b009      	add	sp, #36	; 0x24
    ab94:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ab96:	c304      	stmia	r3!, {r2}
    ab98:	e7de      	b.n	ab58 <__multiply+0x40>
    ab9a:	8814      	ldrh	r4, [r2, #0]
    ab9c:	2c00      	cmp	r4, #0
    ab9e:	d01e      	beq.n	abde <__multiply+0xc6>
    aba0:	2600      	movs	r6, #0
    aba2:	9d00      	ldr	r5, [sp, #0]
    aba4:	9f02      	ldr	r7, [sp, #8]
    aba6:	cf01      	ldmia	r7!, {r0}
    aba8:	9507      	str	r5, [sp, #28]
    abaa:	cd08      	ldmia	r5!, {r3}
    abac:	9303      	str	r3, [sp, #12]
    abae:	b283      	uxth	r3, r0
    abb0:	4363      	muls	r3, r4
    abb2:	0019      	movs	r1, r3
    abb4:	466b      	mov	r3, sp
    abb6:	0c00      	lsrs	r0, r0, #16
    abb8:	899b      	ldrh	r3, [r3, #12]
    abba:	4360      	muls	r0, r4
    abbc:	18cb      	adds	r3, r1, r3
    abbe:	9903      	ldr	r1, [sp, #12]
    abc0:	199b      	adds	r3, r3, r6
    abc2:	0c09      	lsrs	r1, r1, #16
    abc4:	1841      	adds	r1, r0, r1
    abc6:	0c18      	lsrs	r0, r3, #16
    abc8:	1809      	adds	r1, r1, r0
    abca:	0c0e      	lsrs	r6, r1, #16
    abcc:	b29b      	uxth	r3, r3
    abce:	0409      	lsls	r1, r1, #16
    abd0:	430b      	orrs	r3, r1
    abd2:	9907      	ldr	r1, [sp, #28]
    abd4:	600b      	str	r3, [r1, #0]
    abd6:	9b05      	ldr	r3, [sp, #20]
    abd8:	42bb      	cmp	r3, r7
    abda:	d8e4      	bhi.n	aba6 <__multiply+0x8e>
    abdc:	602e      	str	r6, [r5, #0]
    abde:	6813      	ldr	r3, [r2, #0]
    abe0:	0c1b      	lsrs	r3, r3, #16
    abe2:	9303      	str	r3, [sp, #12]
    abe4:	d01e      	beq.n	ac24 <__multiply+0x10c>
    abe6:	2600      	movs	r6, #0
    abe8:	9b00      	ldr	r3, [sp, #0]
    abea:	9c02      	ldr	r4, [sp, #8]
    abec:	681b      	ldr	r3, [r3, #0]
    abee:	9800      	ldr	r0, [sp, #0]
    abf0:	0007      	movs	r7, r0
    abf2:	8821      	ldrh	r1, [r4, #0]
    abf4:	9d03      	ldr	r5, [sp, #12]
    abf6:	b29b      	uxth	r3, r3
    abf8:	4369      	muls	r1, r5
    abfa:	c820      	ldmia	r0!, {r5}
    abfc:	0c2d      	lsrs	r5, r5, #16
    abfe:	1949      	adds	r1, r1, r5
    ac00:	198e      	adds	r6, r1, r6
    ac02:	0431      	lsls	r1, r6, #16
    ac04:	430b      	orrs	r3, r1
    ac06:	603b      	str	r3, [r7, #0]
    ac08:	cc08      	ldmia	r4!, {r3}
    ac0a:	9903      	ldr	r1, [sp, #12]
    ac0c:	0c1b      	lsrs	r3, r3, #16
    ac0e:	434b      	muls	r3, r1
    ac10:	6879      	ldr	r1, [r7, #4]
    ac12:	0c36      	lsrs	r6, r6, #16
    ac14:	b289      	uxth	r1, r1
    ac16:	185b      	adds	r3, r3, r1
    ac18:	9905      	ldr	r1, [sp, #20]
    ac1a:	199b      	adds	r3, r3, r6
    ac1c:	0c1e      	lsrs	r6, r3, #16
    ac1e:	42a1      	cmp	r1, r4
    ac20:	d8e6      	bhi.n	abf0 <__multiply+0xd8>
    ac22:	6003      	str	r3, [r0, #0]
    ac24:	9b00      	ldr	r3, [sp, #0]
    ac26:	3204      	adds	r2, #4
    ac28:	3304      	adds	r3, #4
    ac2a:	9300      	str	r3, [sp, #0]
    ac2c:	e7a0      	b.n	ab70 <__multiply+0x58>
    ac2e:	9b01      	ldr	r3, [sp, #4]
    ac30:	3b01      	subs	r3, #1
    ac32:	9301      	str	r3, [sp, #4]
    ac34:	e79f      	b.n	ab76 <__multiply+0x5e>
	...

0000ac38 <__pow5mult>:
    ac38:	2303      	movs	r3, #3
    ac3a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    ac3c:	4013      	ands	r3, r2
    ac3e:	0005      	movs	r5, r0
    ac40:	000e      	movs	r6, r1
    ac42:	0014      	movs	r4, r2
    ac44:	2b00      	cmp	r3, #0
    ac46:	d008      	beq.n	ac5a <__pow5mult+0x22>
    ac48:	4922      	ldr	r1, [pc, #136]	; (acd4 <__pow5mult+0x9c>)
    ac4a:	3b01      	subs	r3, #1
    ac4c:	009a      	lsls	r2, r3, #2
    ac4e:	5852      	ldr	r2, [r2, r1]
    ac50:	2300      	movs	r3, #0
    ac52:	0031      	movs	r1, r6
    ac54:	f7ff fed2 	bl	a9fc <__multadd>
    ac58:	0006      	movs	r6, r0
    ac5a:	10a3      	asrs	r3, r4, #2
    ac5c:	9301      	str	r3, [sp, #4]
    ac5e:	d036      	beq.n	acce <__pow5mult+0x96>
    ac60:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    ac62:	2c00      	cmp	r4, #0
    ac64:	d107      	bne.n	ac76 <__pow5mult+0x3e>
    ac66:	2010      	movs	r0, #16
    ac68:	f7fe f98e 	bl	8f88 <malloc>
    ac6c:	6268      	str	r0, [r5, #36]	; 0x24
    ac6e:	6044      	str	r4, [r0, #4]
    ac70:	6084      	str	r4, [r0, #8]
    ac72:	6004      	str	r4, [r0, #0]
    ac74:	60c4      	str	r4, [r0, #12]
    ac76:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    ac78:	68bc      	ldr	r4, [r7, #8]
    ac7a:	2c00      	cmp	r4, #0
    ac7c:	d107      	bne.n	ac8e <__pow5mult+0x56>
    ac7e:	4916      	ldr	r1, [pc, #88]	; (acd8 <__pow5mult+0xa0>)
    ac80:	0028      	movs	r0, r5
    ac82:	f7ff ff40 	bl	ab06 <__i2b>
    ac86:	2300      	movs	r3, #0
    ac88:	0004      	movs	r4, r0
    ac8a:	60b8      	str	r0, [r7, #8]
    ac8c:	6003      	str	r3, [r0, #0]
    ac8e:	2201      	movs	r2, #1
    ac90:	9b01      	ldr	r3, [sp, #4]
    ac92:	4213      	tst	r3, r2
    ac94:	d00a      	beq.n	acac <__pow5mult+0x74>
    ac96:	0031      	movs	r1, r6
    ac98:	0022      	movs	r2, r4
    ac9a:	0028      	movs	r0, r5
    ac9c:	f7ff ff3c 	bl	ab18 <__multiply>
    aca0:	0007      	movs	r7, r0
    aca2:	0031      	movs	r1, r6
    aca4:	0028      	movs	r0, r5
    aca6:	f7ff fe90 	bl	a9ca <_Bfree>
    acaa:	003e      	movs	r6, r7
    acac:	9b01      	ldr	r3, [sp, #4]
    acae:	105b      	asrs	r3, r3, #1
    acb0:	9301      	str	r3, [sp, #4]
    acb2:	d00c      	beq.n	acce <__pow5mult+0x96>
    acb4:	6820      	ldr	r0, [r4, #0]
    acb6:	2800      	cmp	r0, #0
    acb8:	d107      	bne.n	acca <__pow5mult+0x92>
    acba:	0022      	movs	r2, r4
    acbc:	0021      	movs	r1, r4
    acbe:	0028      	movs	r0, r5
    acc0:	f7ff ff2a 	bl	ab18 <__multiply>
    acc4:	2300      	movs	r3, #0
    acc6:	6020      	str	r0, [r4, #0]
    acc8:	6003      	str	r3, [r0, #0]
    acca:	0004      	movs	r4, r0
    accc:	e7df      	b.n	ac8e <__pow5mult+0x56>
    acce:	0030      	movs	r0, r6
    acd0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    acd2:	46c0      	nop			; (mov r8, r8)
    acd4:	0000bd58 	.word	0x0000bd58
    acd8:	00000271 	.word	0x00000271

0000acdc <__lshift>:
    acdc:	b5f0      	push	{r4, r5, r6, r7, lr}
    acde:	000d      	movs	r5, r1
    ace0:	0017      	movs	r7, r2
    ace2:	692b      	ldr	r3, [r5, #16]
    ace4:	1154      	asrs	r4, r2, #5
    ace6:	b085      	sub	sp, #20
    ace8:	18e3      	adds	r3, r4, r3
    acea:	9302      	str	r3, [sp, #8]
    acec:	3301      	adds	r3, #1
    acee:	9301      	str	r3, [sp, #4]
    acf0:	6849      	ldr	r1, [r1, #4]
    acf2:	68ab      	ldr	r3, [r5, #8]
    acf4:	9003      	str	r0, [sp, #12]
    acf6:	9a01      	ldr	r2, [sp, #4]
    acf8:	4293      	cmp	r3, r2
    acfa:	db34      	blt.n	ad66 <__lshift+0x8a>
    acfc:	9803      	ldr	r0, [sp, #12]
    acfe:	f7ff fe2c 	bl	a95a <_Balloc>
    ad02:	2300      	movs	r3, #0
    ad04:	0002      	movs	r2, r0
    ad06:	0006      	movs	r6, r0
    ad08:	0019      	movs	r1, r3
    ad0a:	3214      	adds	r2, #20
    ad0c:	42a3      	cmp	r3, r4
    ad0e:	db2d      	blt.n	ad6c <__lshift+0x90>
    ad10:	43e3      	mvns	r3, r4
    ad12:	17db      	asrs	r3, r3, #31
    ad14:	401c      	ands	r4, r3
    ad16:	002b      	movs	r3, r5
    ad18:	211f      	movs	r1, #31
    ad1a:	00a4      	lsls	r4, r4, #2
    ad1c:	1914      	adds	r4, r2, r4
    ad1e:	692a      	ldr	r2, [r5, #16]
    ad20:	3314      	adds	r3, #20
    ad22:	0092      	lsls	r2, r2, #2
    ad24:	189a      	adds	r2, r3, r2
    ad26:	400f      	ands	r7, r1
    ad28:	d024      	beq.n	ad74 <__lshift+0x98>
    ad2a:	3101      	adds	r1, #1
    ad2c:	1bc9      	subs	r1, r1, r7
    ad2e:	468c      	mov	ip, r1
    ad30:	2100      	movs	r1, #0
    ad32:	6818      	ldr	r0, [r3, #0]
    ad34:	40b8      	lsls	r0, r7
    ad36:	4301      	orrs	r1, r0
    ad38:	4660      	mov	r0, ip
    ad3a:	6021      	str	r1, [r4, #0]
    ad3c:	cb02      	ldmia	r3!, {r1}
    ad3e:	3404      	adds	r4, #4
    ad40:	40c1      	lsrs	r1, r0
    ad42:	429a      	cmp	r2, r3
    ad44:	d8f5      	bhi.n	ad32 <__lshift+0x56>
    ad46:	6021      	str	r1, [r4, #0]
    ad48:	2900      	cmp	r1, #0
    ad4a:	d002      	beq.n	ad52 <__lshift+0x76>
    ad4c:	9b02      	ldr	r3, [sp, #8]
    ad4e:	3302      	adds	r3, #2
    ad50:	9301      	str	r3, [sp, #4]
    ad52:	9b01      	ldr	r3, [sp, #4]
    ad54:	9803      	ldr	r0, [sp, #12]
    ad56:	3b01      	subs	r3, #1
    ad58:	6133      	str	r3, [r6, #16]
    ad5a:	0029      	movs	r1, r5
    ad5c:	f7ff fe35 	bl	a9ca <_Bfree>
    ad60:	0030      	movs	r0, r6
    ad62:	b005      	add	sp, #20
    ad64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ad66:	3101      	adds	r1, #1
    ad68:	005b      	lsls	r3, r3, #1
    ad6a:	e7c4      	b.n	acf6 <__lshift+0x1a>
    ad6c:	0098      	lsls	r0, r3, #2
    ad6e:	5011      	str	r1, [r2, r0]
    ad70:	3301      	adds	r3, #1
    ad72:	e7cb      	b.n	ad0c <__lshift+0x30>
    ad74:	cb02      	ldmia	r3!, {r1}
    ad76:	c402      	stmia	r4!, {r1}
    ad78:	429a      	cmp	r2, r3
    ad7a:	d8fb      	bhi.n	ad74 <__lshift+0x98>
    ad7c:	e7e9      	b.n	ad52 <__lshift+0x76>

0000ad7e <__mcmp>:
    ad7e:	690a      	ldr	r2, [r1, #16]
    ad80:	6903      	ldr	r3, [r0, #16]
    ad82:	b530      	push	{r4, r5, lr}
    ad84:	1a9b      	subs	r3, r3, r2
    ad86:	d10e      	bne.n	ada6 <__mcmp+0x28>
    ad88:	0092      	lsls	r2, r2, #2
    ad8a:	3014      	adds	r0, #20
    ad8c:	3114      	adds	r1, #20
    ad8e:	1884      	adds	r4, r0, r2
    ad90:	1889      	adds	r1, r1, r2
    ad92:	3c04      	subs	r4, #4
    ad94:	3904      	subs	r1, #4
    ad96:	6822      	ldr	r2, [r4, #0]
    ad98:	680d      	ldr	r5, [r1, #0]
    ad9a:	42aa      	cmp	r2, r5
    ad9c:	d005      	beq.n	adaa <__mcmp+0x2c>
    ad9e:	42aa      	cmp	r2, r5
    ada0:	4192      	sbcs	r2, r2
    ada2:	2301      	movs	r3, #1
    ada4:	4313      	orrs	r3, r2
    ada6:	0018      	movs	r0, r3
    ada8:	bd30      	pop	{r4, r5, pc}
    adaa:	42a0      	cmp	r0, r4
    adac:	d3f1      	bcc.n	ad92 <__mcmp+0x14>
    adae:	e7fa      	b.n	ada6 <__mcmp+0x28>

0000adb0 <__mdiff>:
    adb0:	b5f0      	push	{r4, r5, r6, r7, lr}
    adb2:	000d      	movs	r5, r1
    adb4:	b085      	sub	sp, #20
    adb6:	0007      	movs	r7, r0
    adb8:	0011      	movs	r1, r2
    adba:	0028      	movs	r0, r5
    adbc:	0014      	movs	r4, r2
    adbe:	f7ff ffde 	bl	ad7e <__mcmp>
    adc2:	1e06      	subs	r6, r0, #0
    adc4:	d108      	bne.n	add8 <__mdiff+0x28>
    adc6:	0001      	movs	r1, r0
    adc8:	0038      	movs	r0, r7
    adca:	f7ff fdc6 	bl	a95a <_Balloc>
    adce:	2301      	movs	r3, #1
    add0:	6146      	str	r6, [r0, #20]
    add2:	6103      	str	r3, [r0, #16]
    add4:	b005      	add	sp, #20
    add6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    add8:	2301      	movs	r3, #1
    adda:	9301      	str	r3, [sp, #4]
    addc:	2800      	cmp	r0, #0
    adde:	db04      	blt.n	adea <__mdiff+0x3a>
    ade0:	0023      	movs	r3, r4
    ade2:	002c      	movs	r4, r5
    ade4:	001d      	movs	r5, r3
    ade6:	2300      	movs	r3, #0
    ade8:	9301      	str	r3, [sp, #4]
    adea:	6861      	ldr	r1, [r4, #4]
    adec:	0038      	movs	r0, r7
    adee:	f7ff fdb4 	bl	a95a <_Balloc>
    adf2:	002f      	movs	r7, r5
    adf4:	2200      	movs	r2, #0
    adf6:	9b01      	ldr	r3, [sp, #4]
    adf8:	6926      	ldr	r6, [r4, #16]
    adfa:	60c3      	str	r3, [r0, #12]
    adfc:	3414      	adds	r4, #20
    adfe:	00b3      	lsls	r3, r6, #2
    ae00:	18e3      	adds	r3, r4, r3
    ae02:	9302      	str	r3, [sp, #8]
    ae04:	692b      	ldr	r3, [r5, #16]
    ae06:	3714      	adds	r7, #20
    ae08:	009b      	lsls	r3, r3, #2
    ae0a:	18fb      	adds	r3, r7, r3
    ae0c:	9303      	str	r3, [sp, #12]
    ae0e:	0003      	movs	r3, r0
    ae10:	4694      	mov	ip, r2
    ae12:	3314      	adds	r3, #20
    ae14:	cc20      	ldmia	r4!, {r5}
    ae16:	cf04      	ldmia	r7!, {r2}
    ae18:	9201      	str	r2, [sp, #4]
    ae1a:	b2aa      	uxth	r2, r5
    ae1c:	4494      	add	ip, r2
    ae1e:	466a      	mov	r2, sp
    ae20:	4661      	mov	r1, ip
    ae22:	8892      	ldrh	r2, [r2, #4]
    ae24:	0c2d      	lsrs	r5, r5, #16
    ae26:	1a8a      	subs	r2, r1, r2
    ae28:	9901      	ldr	r1, [sp, #4]
    ae2a:	0c09      	lsrs	r1, r1, #16
    ae2c:	1a69      	subs	r1, r5, r1
    ae2e:	1415      	asrs	r5, r2, #16
    ae30:	1949      	adds	r1, r1, r5
    ae32:	140d      	asrs	r5, r1, #16
    ae34:	b292      	uxth	r2, r2
    ae36:	0409      	lsls	r1, r1, #16
    ae38:	430a      	orrs	r2, r1
    ae3a:	601a      	str	r2, [r3, #0]
    ae3c:	9a03      	ldr	r2, [sp, #12]
    ae3e:	46ac      	mov	ip, r5
    ae40:	3304      	adds	r3, #4
    ae42:	42ba      	cmp	r2, r7
    ae44:	d8e6      	bhi.n	ae14 <__mdiff+0x64>
    ae46:	9902      	ldr	r1, [sp, #8]
    ae48:	001a      	movs	r2, r3
    ae4a:	428c      	cmp	r4, r1
    ae4c:	d305      	bcc.n	ae5a <__mdiff+0xaa>
    ae4e:	3a04      	subs	r2, #4
    ae50:	6813      	ldr	r3, [r2, #0]
    ae52:	2b00      	cmp	r3, #0
    ae54:	d00e      	beq.n	ae74 <__mdiff+0xc4>
    ae56:	6106      	str	r6, [r0, #16]
    ae58:	e7bc      	b.n	add4 <__mdiff+0x24>
    ae5a:	cc04      	ldmia	r4!, {r2}
    ae5c:	b291      	uxth	r1, r2
    ae5e:	4461      	add	r1, ip
    ae60:	140d      	asrs	r5, r1, #16
    ae62:	0c12      	lsrs	r2, r2, #16
    ae64:	1952      	adds	r2, r2, r5
    ae66:	1415      	asrs	r5, r2, #16
    ae68:	b289      	uxth	r1, r1
    ae6a:	0412      	lsls	r2, r2, #16
    ae6c:	430a      	orrs	r2, r1
    ae6e:	46ac      	mov	ip, r5
    ae70:	c304      	stmia	r3!, {r2}
    ae72:	e7e8      	b.n	ae46 <__mdiff+0x96>
    ae74:	3e01      	subs	r6, #1
    ae76:	e7ea      	b.n	ae4e <__mdiff+0x9e>

0000ae78 <__d2b>:
    ae78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    ae7a:	001d      	movs	r5, r3
    ae7c:	2101      	movs	r1, #1
    ae7e:	9f08      	ldr	r7, [sp, #32]
    ae80:	0014      	movs	r4, r2
    ae82:	f7ff fd6a 	bl	a95a <_Balloc>
    ae86:	032b      	lsls	r3, r5, #12
    ae88:	006d      	lsls	r5, r5, #1
    ae8a:	0006      	movs	r6, r0
    ae8c:	0b1b      	lsrs	r3, r3, #12
    ae8e:	0d6d      	lsrs	r5, r5, #21
    ae90:	d124      	bne.n	aedc <__d2b+0x64>
    ae92:	9301      	str	r3, [sp, #4]
    ae94:	2c00      	cmp	r4, #0
    ae96:	d027      	beq.n	aee8 <__d2b+0x70>
    ae98:	4668      	mov	r0, sp
    ae9a:	9400      	str	r4, [sp, #0]
    ae9c:	f7ff fe04 	bl	aaa8 <__lo0bits>
    aea0:	9c00      	ldr	r4, [sp, #0]
    aea2:	2800      	cmp	r0, #0
    aea4:	d01e      	beq.n	aee4 <__d2b+0x6c>
    aea6:	9b01      	ldr	r3, [sp, #4]
    aea8:	2120      	movs	r1, #32
    aeaa:	001a      	movs	r2, r3
    aeac:	1a09      	subs	r1, r1, r0
    aeae:	408a      	lsls	r2, r1
    aeb0:	40c3      	lsrs	r3, r0
    aeb2:	4322      	orrs	r2, r4
    aeb4:	6172      	str	r2, [r6, #20]
    aeb6:	9301      	str	r3, [sp, #4]
    aeb8:	9c01      	ldr	r4, [sp, #4]
    aeba:	61b4      	str	r4, [r6, #24]
    aebc:	1e63      	subs	r3, r4, #1
    aebe:	419c      	sbcs	r4, r3
    aec0:	3401      	adds	r4, #1
    aec2:	6134      	str	r4, [r6, #16]
    aec4:	2d00      	cmp	r5, #0
    aec6:	d018      	beq.n	aefa <__d2b+0x82>
    aec8:	4b12      	ldr	r3, [pc, #72]	; (af14 <__d2b+0x9c>)
    aeca:	18ed      	adds	r5, r5, r3
    aecc:	2335      	movs	r3, #53	; 0x35
    aece:	182d      	adds	r5, r5, r0
    aed0:	603d      	str	r5, [r7, #0]
    aed2:	1a18      	subs	r0, r3, r0
    aed4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    aed6:	6018      	str	r0, [r3, #0]
    aed8:	0030      	movs	r0, r6
    aeda:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    aedc:	2280      	movs	r2, #128	; 0x80
    aede:	0352      	lsls	r2, r2, #13
    aee0:	4313      	orrs	r3, r2
    aee2:	e7d6      	b.n	ae92 <__d2b+0x1a>
    aee4:	6174      	str	r4, [r6, #20]
    aee6:	e7e7      	b.n	aeb8 <__d2b+0x40>
    aee8:	a801      	add	r0, sp, #4
    aeea:	f7ff fddd 	bl	aaa8 <__lo0bits>
    aeee:	2401      	movs	r4, #1
    aef0:	9b01      	ldr	r3, [sp, #4]
    aef2:	6134      	str	r4, [r6, #16]
    aef4:	6173      	str	r3, [r6, #20]
    aef6:	3020      	adds	r0, #32
    aef8:	e7e4      	b.n	aec4 <__d2b+0x4c>
    aefa:	4b07      	ldr	r3, [pc, #28]	; (af18 <__d2b+0xa0>)
    aefc:	18c0      	adds	r0, r0, r3
    aefe:	4b07      	ldr	r3, [pc, #28]	; (af1c <__d2b+0xa4>)
    af00:	6038      	str	r0, [r7, #0]
    af02:	18e3      	adds	r3, r4, r3
    af04:	009b      	lsls	r3, r3, #2
    af06:	18f3      	adds	r3, r6, r3
    af08:	6958      	ldr	r0, [r3, #20]
    af0a:	f7ff fdb3 	bl	aa74 <__hi0bits>
    af0e:	0164      	lsls	r4, r4, #5
    af10:	1a20      	subs	r0, r4, r0
    af12:	e7df      	b.n	aed4 <__d2b+0x5c>
    af14:	fffffbcd 	.word	0xfffffbcd
    af18:	fffffbce 	.word	0xfffffbce
    af1c:	3fffffff 	.word	0x3fffffff

0000af20 <_calloc_r>:
    af20:	434a      	muls	r2, r1
    af22:	b570      	push	{r4, r5, r6, lr}
    af24:	0011      	movs	r1, r2
    af26:	0014      	movs	r4, r2
    af28:	f7fe f8d0 	bl	90cc <_malloc_r>
    af2c:	1e05      	subs	r5, r0, #0
    af2e:	d003      	beq.n	af38 <_calloc_r+0x18>
    af30:	0022      	movs	r2, r4
    af32:	2100      	movs	r1, #0
    af34:	f7fe f878 	bl	9028 <memset>
    af38:	0028      	movs	r0, r5
    af3a:	bd70      	pop	{r4, r5, r6, pc}

0000af3c <_realloc_r>:
    af3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    af3e:	0007      	movs	r7, r0
    af40:	000d      	movs	r5, r1
    af42:	0016      	movs	r6, r2
    af44:	2900      	cmp	r1, #0
    af46:	d105      	bne.n	af54 <_realloc_r+0x18>
    af48:	0011      	movs	r1, r2
    af4a:	f7fe f8bf 	bl	90cc <_malloc_r>
    af4e:	0004      	movs	r4, r0
    af50:	0020      	movs	r0, r4
    af52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    af54:	2a00      	cmp	r2, #0
    af56:	d103      	bne.n	af60 <_realloc_r+0x24>
    af58:	f7fe f86e 	bl	9038 <_free_r>
    af5c:	0034      	movs	r4, r6
    af5e:	e7f7      	b.n	af50 <_realloc_r+0x14>
    af60:	f000 f978 	bl	b254 <_malloc_usable_size_r>
    af64:	002c      	movs	r4, r5
    af66:	4286      	cmp	r6, r0
    af68:	d9f2      	bls.n	af50 <_realloc_r+0x14>
    af6a:	0031      	movs	r1, r6
    af6c:	0038      	movs	r0, r7
    af6e:	f7fe f8ad 	bl	90cc <_malloc_r>
    af72:	1e04      	subs	r4, r0, #0
    af74:	d0ec      	beq.n	af50 <_realloc_r+0x14>
    af76:	0029      	movs	r1, r5
    af78:	0032      	movs	r2, r6
    af7a:	f7fe f83a 	bl	8ff2 <memcpy>
    af7e:	0029      	movs	r1, r5
    af80:	0038      	movs	r0, r7
    af82:	f7fe f859 	bl	9038 <_free_r>
    af86:	e7e3      	b.n	af50 <_realloc_r+0x14>

0000af88 <__ssputs_r>:
    af88:	b5f0      	push	{r4, r5, r6, r7, lr}
    af8a:	688e      	ldr	r6, [r1, #8]
    af8c:	b085      	sub	sp, #20
    af8e:	0007      	movs	r7, r0
    af90:	000c      	movs	r4, r1
    af92:	9203      	str	r2, [sp, #12]
    af94:	9301      	str	r3, [sp, #4]
    af96:	429e      	cmp	r6, r3
    af98:	d839      	bhi.n	b00e <__ssputs_r+0x86>
    af9a:	2390      	movs	r3, #144	; 0x90
    af9c:	898a      	ldrh	r2, [r1, #12]
    af9e:	00db      	lsls	r3, r3, #3
    afa0:	421a      	tst	r2, r3
    afa2:	d034      	beq.n	b00e <__ssputs_r+0x86>
    afa4:	2503      	movs	r5, #3
    afa6:	6909      	ldr	r1, [r1, #16]
    afa8:	6823      	ldr	r3, [r4, #0]
    afaa:	1a5b      	subs	r3, r3, r1
    afac:	9302      	str	r3, [sp, #8]
    afae:	6963      	ldr	r3, [r4, #20]
    afb0:	9802      	ldr	r0, [sp, #8]
    afb2:	435d      	muls	r5, r3
    afb4:	0feb      	lsrs	r3, r5, #31
    afb6:	195d      	adds	r5, r3, r5
    afb8:	9b01      	ldr	r3, [sp, #4]
    afba:	106d      	asrs	r5, r5, #1
    afbc:	3301      	adds	r3, #1
    afbe:	181b      	adds	r3, r3, r0
    afc0:	42ab      	cmp	r3, r5
    afc2:	d900      	bls.n	afc6 <__ssputs_r+0x3e>
    afc4:	001d      	movs	r5, r3
    afc6:	0553      	lsls	r3, r2, #21
    afc8:	d532      	bpl.n	b030 <__ssputs_r+0xa8>
    afca:	0029      	movs	r1, r5
    afcc:	0038      	movs	r0, r7
    afce:	f7fe f87d 	bl	90cc <_malloc_r>
    afd2:	1e06      	subs	r6, r0, #0
    afd4:	d109      	bne.n	afea <__ssputs_r+0x62>
    afd6:	230c      	movs	r3, #12
    afd8:	603b      	str	r3, [r7, #0]
    afda:	2340      	movs	r3, #64	; 0x40
    afdc:	2001      	movs	r0, #1
    afde:	89a2      	ldrh	r2, [r4, #12]
    afe0:	4240      	negs	r0, r0
    afe2:	4313      	orrs	r3, r2
    afe4:	81a3      	strh	r3, [r4, #12]
    afe6:	b005      	add	sp, #20
    afe8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    afea:	9a02      	ldr	r2, [sp, #8]
    afec:	6921      	ldr	r1, [r4, #16]
    afee:	f7fe f800 	bl	8ff2 <memcpy>
    aff2:	89a3      	ldrh	r3, [r4, #12]
    aff4:	4a14      	ldr	r2, [pc, #80]	; (b048 <__ssputs_r+0xc0>)
    aff6:	401a      	ands	r2, r3
    aff8:	2380      	movs	r3, #128	; 0x80
    affa:	4313      	orrs	r3, r2
    affc:	81a3      	strh	r3, [r4, #12]
    affe:	9b02      	ldr	r3, [sp, #8]
    b000:	6126      	str	r6, [r4, #16]
    b002:	18f6      	adds	r6, r6, r3
    b004:	6026      	str	r6, [r4, #0]
    b006:	6165      	str	r5, [r4, #20]
    b008:	9e01      	ldr	r6, [sp, #4]
    b00a:	1aed      	subs	r5, r5, r3
    b00c:	60a5      	str	r5, [r4, #8]
    b00e:	9b01      	ldr	r3, [sp, #4]
    b010:	42b3      	cmp	r3, r6
    b012:	d200      	bcs.n	b016 <__ssputs_r+0x8e>
    b014:	001e      	movs	r6, r3
    b016:	0032      	movs	r2, r6
    b018:	9903      	ldr	r1, [sp, #12]
    b01a:	6820      	ldr	r0, [r4, #0]
    b01c:	f7fd fff2 	bl	9004 <memmove>
    b020:	68a3      	ldr	r3, [r4, #8]
    b022:	2000      	movs	r0, #0
    b024:	1b9b      	subs	r3, r3, r6
    b026:	60a3      	str	r3, [r4, #8]
    b028:	6823      	ldr	r3, [r4, #0]
    b02a:	199e      	adds	r6, r3, r6
    b02c:	6026      	str	r6, [r4, #0]
    b02e:	e7da      	b.n	afe6 <__ssputs_r+0x5e>
    b030:	002a      	movs	r2, r5
    b032:	0038      	movs	r0, r7
    b034:	f7ff ff82 	bl	af3c <_realloc_r>
    b038:	1e06      	subs	r6, r0, #0
    b03a:	d1e0      	bne.n	affe <__ssputs_r+0x76>
    b03c:	6921      	ldr	r1, [r4, #16]
    b03e:	0038      	movs	r0, r7
    b040:	f7fd fffa 	bl	9038 <_free_r>
    b044:	e7c7      	b.n	afd6 <__ssputs_r+0x4e>
    b046:	46c0      	nop			; (mov r8, r8)
    b048:	fffffb7f 	.word	0xfffffb7f

0000b04c <_svfiprintf_r>:
    b04c:	b5f0      	push	{r4, r5, r6, r7, lr}
    b04e:	b09f      	sub	sp, #124	; 0x7c
    b050:	9002      	str	r0, [sp, #8]
    b052:	9305      	str	r3, [sp, #20]
    b054:	898b      	ldrh	r3, [r1, #12]
    b056:	000f      	movs	r7, r1
    b058:	0016      	movs	r6, r2
    b05a:	061b      	lsls	r3, r3, #24
    b05c:	d511      	bpl.n	b082 <_svfiprintf_r+0x36>
    b05e:	690b      	ldr	r3, [r1, #16]
    b060:	2b00      	cmp	r3, #0
    b062:	d10e      	bne.n	b082 <_svfiprintf_r+0x36>
    b064:	2140      	movs	r1, #64	; 0x40
    b066:	f7fe f831 	bl	90cc <_malloc_r>
    b06a:	6038      	str	r0, [r7, #0]
    b06c:	6138      	str	r0, [r7, #16]
    b06e:	2800      	cmp	r0, #0
    b070:	d105      	bne.n	b07e <_svfiprintf_r+0x32>
    b072:	230c      	movs	r3, #12
    b074:	9a02      	ldr	r2, [sp, #8]
    b076:	3801      	subs	r0, #1
    b078:	6013      	str	r3, [r2, #0]
    b07a:	b01f      	add	sp, #124	; 0x7c
    b07c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    b07e:	2340      	movs	r3, #64	; 0x40
    b080:	617b      	str	r3, [r7, #20]
    b082:	2300      	movs	r3, #0
    b084:	ad06      	add	r5, sp, #24
    b086:	616b      	str	r3, [r5, #20]
    b088:	3320      	adds	r3, #32
    b08a:	766b      	strb	r3, [r5, #25]
    b08c:	3310      	adds	r3, #16
    b08e:	76ab      	strb	r3, [r5, #26]
    b090:	0034      	movs	r4, r6
    b092:	7823      	ldrb	r3, [r4, #0]
    b094:	2b00      	cmp	r3, #0
    b096:	d147      	bne.n	b128 <_svfiprintf_r+0xdc>
    b098:	1ba3      	subs	r3, r4, r6
    b09a:	9304      	str	r3, [sp, #16]
    b09c:	d00d      	beq.n	b0ba <_svfiprintf_r+0x6e>
    b09e:	1ba3      	subs	r3, r4, r6
    b0a0:	0032      	movs	r2, r6
    b0a2:	0039      	movs	r1, r7
    b0a4:	9802      	ldr	r0, [sp, #8]
    b0a6:	f7ff ff6f 	bl	af88 <__ssputs_r>
    b0aa:	1c43      	adds	r3, r0, #1
    b0ac:	d100      	bne.n	b0b0 <_svfiprintf_r+0x64>
    b0ae:	e0b5      	b.n	b21c <_svfiprintf_r+0x1d0>
    b0b0:	696a      	ldr	r2, [r5, #20]
    b0b2:	9b04      	ldr	r3, [sp, #16]
    b0b4:	4694      	mov	ip, r2
    b0b6:	4463      	add	r3, ip
    b0b8:	616b      	str	r3, [r5, #20]
    b0ba:	7823      	ldrb	r3, [r4, #0]
    b0bc:	2b00      	cmp	r3, #0
    b0be:	d100      	bne.n	b0c2 <_svfiprintf_r+0x76>
    b0c0:	e0ac      	b.n	b21c <_svfiprintf_r+0x1d0>
    b0c2:	2201      	movs	r2, #1
    b0c4:	2300      	movs	r3, #0
    b0c6:	4252      	negs	r2, r2
    b0c8:	606a      	str	r2, [r5, #4]
    b0ca:	a902      	add	r1, sp, #8
    b0cc:	3254      	adds	r2, #84	; 0x54
    b0ce:	1852      	adds	r2, r2, r1
    b0d0:	3401      	adds	r4, #1
    b0d2:	602b      	str	r3, [r5, #0]
    b0d4:	60eb      	str	r3, [r5, #12]
    b0d6:	60ab      	str	r3, [r5, #8]
    b0d8:	7013      	strb	r3, [r2, #0]
    b0da:	65ab      	str	r3, [r5, #88]	; 0x58
    b0dc:	4e58      	ldr	r6, [pc, #352]	; (b240 <_svfiprintf_r+0x1f4>)
    b0de:	2205      	movs	r2, #5
    b0e0:	7821      	ldrb	r1, [r4, #0]
    b0e2:	0030      	movs	r0, r6
    b0e4:	f7ff fc2c 	bl	a940 <memchr>
    b0e8:	1c62      	adds	r2, r4, #1
    b0ea:	2800      	cmp	r0, #0
    b0ec:	d120      	bne.n	b130 <_svfiprintf_r+0xe4>
    b0ee:	6829      	ldr	r1, [r5, #0]
    b0f0:	06cb      	lsls	r3, r1, #27
    b0f2:	d504      	bpl.n	b0fe <_svfiprintf_r+0xb2>
    b0f4:	2353      	movs	r3, #83	; 0x53
    b0f6:	ae02      	add	r6, sp, #8
    b0f8:	3020      	adds	r0, #32
    b0fa:	199b      	adds	r3, r3, r6
    b0fc:	7018      	strb	r0, [r3, #0]
    b0fe:	070b      	lsls	r3, r1, #28
    b100:	d504      	bpl.n	b10c <_svfiprintf_r+0xc0>
    b102:	2353      	movs	r3, #83	; 0x53
    b104:	202b      	movs	r0, #43	; 0x2b
    b106:	ae02      	add	r6, sp, #8
    b108:	199b      	adds	r3, r3, r6
    b10a:	7018      	strb	r0, [r3, #0]
    b10c:	7823      	ldrb	r3, [r4, #0]
    b10e:	2b2a      	cmp	r3, #42	; 0x2a
    b110:	d016      	beq.n	b140 <_svfiprintf_r+0xf4>
    b112:	2000      	movs	r0, #0
    b114:	210a      	movs	r1, #10
    b116:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b118:	7822      	ldrb	r2, [r4, #0]
    b11a:	3a30      	subs	r2, #48	; 0x30
    b11c:	2a09      	cmp	r2, #9
    b11e:	d955      	bls.n	b1cc <_svfiprintf_r+0x180>
    b120:	2800      	cmp	r0, #0
    b122:	d015      	beq.n	b150 <_svfiprintf_r+0x104>
    b124:	9309      	str	r3, [sp, #36]	; 0x24
    b126:	e013      	b.n	b150 <_svfiprintf_r+0x104>
    b128:	2b25      	cmp	r3, #37	; 0x25
    b12a:	d0b5      	beq.n	b098 <_svfiprintf_r+0x4c>
    b12c:	3401      	adds	r4, #1
    b12e:	e7b0      	b.n	b092 <_svfiprintf_r+0x46>
    b130:	2301      	movs	r3, #1
    b132:	1b80      	subs	r0, r0, r6
    b134:	4083      	lsls	r3, r0
    b136:	6829      	ldr	r1, [r5, #0]
    b138:	0014      	movs	r4, r2
    b13a:	430b      	orrs	r3, r1
    b13c:	602b      	str	r3, [r5, #0]
    b13e:	e7cd      	b.n	b0dc <_svfiprintf_r+0x90>
    b140:	9b05      	ldr	r3, [sp, #20]
    b142:	1d18      	adds	r0, r3, #4
    b144:	681b      	ldr	r3, [r3, #0]
    b146:	9005      	str	r0, [sp, #20]
    b148:	2b00      	cmp	r3, #0
    b14a:	db39      	blt.n	b1c0 <_svfiprintf_r+0x174>
    b14c:	9309      	str	r3, [sp, #36]	; 0x24
    b14e:	0014      	movs	r4, r2
    b150:	7823      	ldrb	r3, [r4, #0]
    b152:	2b2e      	cmp	r3, #46	; 0x2e
    b154:	d10b      	bne.n	b16e <_svfiprintf_r+0x122>
    b156:	7863      	ldrb	r3, [r4, #1]
    b158:	1c62      	adds	r2, r4, #1
    b15a:	2b2a      	cmp	r3, #42	; 0x2a
    b15c:	d13e      	bne.n	b1dc <_svfiprintf_r+0x190>
    b15e:	9b05      	ldr	r3, [sp, #20]
    b160:	3402      	adds	r4, #2
    b162:	1d1a      	adds	r2, r3, #4
    b164:	681b      	ldr	r3, [r3, #0]
    b166:	9205      	str	r2, [sp, #20]
    b168:	2b00      	cmp	r3, #0
    b16a:	db34      	blt.n	b1d6 <_svfiprintf_r+0x18a>
    b16c:	9307      	str	r3, [sp, #28]
    b16e:	4e35      	ldr	r6, [pc, #212]	; (b244 <_svfiprintf_r+0x1f8>)
    b170:	7821      	ldrb	r1, [r4, #0]
    b172:	2203      	movs	r2, #3
    b174:	0030      	movs	r0, r6
    b176:	f7ff fbe3 	bl	a940 <memchr>
    b17a:	2800      	cmp	r0, #0
    b17c:	d006      	beq.n	b18c <_svfiprintf_r+0x140>
    b17e:	2340      	movs	r3, #64	; 0x40
    b180:	1b80      	subs	r0, r0, r6
    b182:	4083      	lsls	r3, r0
    b184:	682a      	ldr	r2, [r5, #0]
    b186:	3401      	adds	r4, #1
    b188:	4313      	orrs	r3, r2
    b18a:	602b      	str	r3, [r5, #0]
    b18c:	7821      	ldrb	r1, [r4, #0]
    b18e:	2206      	movs	r2, #6
    b190:	482d      	ldr	r0, [pc, #180]	; (b248 <_svfiprintf_r+0x1fc>)
    b192:	1c66      	adds	r6, r4, #1
    b194:	7629      	strb	r1, [r5, #24]
    b196:	f7ff fbd3 	bl	a940 <memchr>
    b19a:	2800      	cmp	r0, #0
    b19c:	d046      	beq.n	b22c <_svfiprintf_r+0x1e0>
    b19e:	4b2b      	ldr	r3, [pc, #172]	; (b24c <_svfiprintf_r+0x200>)
    b1a0:	2b00      	cmp	r3, #0
    b1a2:	d12f      	bne.n	b204 <_svfiprintf_r+0x1b8>
    b1a4:	6829      	ldr	r1, [r5, #0]
    b1a6:	9b05      	ldr	r3, [sp, #20]
    b1a8:	2207      	movs	r2, #7
    b1aa:	05c9      	lsls	r1, r1, #23
    b1ac:	d528      	bpl.n	b200 <_svfiprintf_r+0x1b4>
    b1ae:	189b      	adds	r3, r3, r2
    b1b0:	4393      	bics	r3, r2
    b1b2:	3308      	adds	r3, #8
    b1b4:	9305      	str	r3, [sp, #20]
    b1b6:	696b      	ldr	r3, [r5, #20]
    b1b8:	9a03      	ldr	r2, [sp, #12]
    b1ba:	189b      	adds	r3, r3, r2
    b1bc:	616b      	str	r3, [r5, #20]
    b1be:	e767      	b.n	b090 <_svfiprintf_r+0x44>
    b1c0:	425b      	negs	r3, r3
    b1c2:	60eb      	str	r3, [r5, #12]
    b1c4:	2302      	movs	r3, #2
    b1c6:	430b      	orrs	r3, r1
    b1c8:	602b      	str	r3, [r5, #0]
    b1ca:	e7c0      	b.n	b14e <_svfiprintf_r+0x102>
    b1cc:	434b      	muls	r3, r1
    b1ce:	3401      	adds	r4, #1
    b1d0:	189b      	adds	r3, r3, r2
    b1d2:	2001      	movs	r0, #1
    b1d4:	e7a0      	b.n	b118 <_svfiprintf_r+0xcc>
    b1d6:	2301      	movs	r3, #1
    b1d8:	425b      	negs	r3, r3
    b1da:	e7c7      	b.n	b16c <_svfiprintf_r+0x120>
    b1dc:	2300      	movs	r3, #0
    b1de:	0014      	movs	r4, r2
    b1e0:	200a      	movs	r0, #10
    b1e2:	001a      	movs	r2, r3
    b1e4:	606b      	str	r3, [r5, #4]
    b1e6:	7821      	ldrb	r1, [r4, #0]
    b1e8:	3930      	subs	r1, #48	; 0x30
    b1ea:	2909      	cmp	r1, #9
    b1ec:	d903      	bls.n	b1f6 <_svfiprintf_r+0x1aa>
    b1ee:	2b00      	cmp	r3, #0
    b1f0:	d0bd      	beq.n	b16e <_svfiprintf_r+0x122>
    b1f2:	9207      	str	r2, [sp, #28]
    b1f4:	e7bb      	b.n	b16e <_svfiprintf_r+0x122>
    b1f6:	4342      	muls	r2, r0
    b1f8:	3401      	adds	r4, #1
    b1fa:	1852      	adds	r2, r2, r1
    b1fc:	2301      	movs	r3, #1
    b1fe:	e7f2      	b.n	b1e6 <_svfiprintf_r+0x19a>
    b200:	3307      	adds	r3, #7
    b202:	e7d5      	b.n	b1b0 <_svfiprintf_r+0x164>
    b204:	ab05      	add	r3, sp, #20
    b206:	9300      	str	r3, [sp, #0]
    b208:	003a      	movs	r2, r7
    b20a:	4b11      	ldr	r3, [pc, #68]	; (b250 <_svfiprintf_r+0x204>)
    b20c:	0029      	movs	r1, r5
    b20e:	9802      	ldr	r0, [sp, #8]
    b210:	f7fe f856 	bl	92c0 <_printf_float>
    b214:	9003      	str	r0, [sp, #12]
    b216:	9b03      	ldr	r3, [sp, #12]
    b218:	3301      	adds	r3, #1
    b21a:	d1cc      	bne.n	b1b6 <_svfiprintf_r+0x16a>
    b21c:	89bb      	ldrh	r3, [r7, #12]
    b21e:	980b      	ldr	r0, [sp, #44]	; 0x2c
    b220:	065b      	lsls	r3, r3, #25
    b222:	d400      	bmi.n	b226 <_svfiprintf_r+0x1da>
    b224:	e729      	b.n	b07a <_svfiprintf_r+0x2e>
    b226:	2001      	movs	r0, #1
    b228:	4240      	negs	r0, r0
    b22a:	e726      	b.n	b07a <_svfiprintf_r+0x2e>
    b22c:	ab05      	add	r3, sp, #20
    b22e:	9300      	str	r3, [sp, #0]
    b230:	003a      	movs	r2, r7
    b232:	4b07      	ldr	r3, [pc, #28]	; (b250 <_svfiprintf_r+0x204>)
    b234:	0029      	movs	r1, r5
    b236:	9802      	ldr	r0, [sp, #8]
    b238:	f7fe fafc 	bl	9834 <_printf_i>
    b23c:	e7ea      	b.n	b214 <_svfiprintf_r+0x1c8>
    b23e:	46c0      	nop			; (mov r8, r8)
    b240:	0000bd64 	.word	0x0000bd64
    b244:	0000bd6a 	.word	0x0000bd6a
    b248:	0000bd6e 	.word	0x0000bd6e
    b24c:	000092c1 	.word	0x000092c1
    b250:	0000af89 	.word	0x0000af89

0000b254 <_malloc_usable_size_r>:
    b254:	1f0b      	subs	r3, r1, #4
    b256:	681b      	ldr	r3, [r3, #0]
    b258:	1f18      	subs	r0, r3, #4
    b25a:	2b00      	cmp	r3, #0
    b25c:	da01      	bge.n	b262 <_malloc_usable_size_r+0xe>
    b25e:	580b      	ldr	r3, [r1, r0]
    b260:	18c0      	adds	r0, r0, r3
    b262:	4770      	bx	lr

0000b264 <__aeabi_i2d>:
    b264:	b570      	push	{r4, r5, r6, lr}
    b266:	2800      	cmp	r0, #0
    b268:	d030      	beq.n	b2cc <__aeabi_i2d+0x68>
    b26a:	17c3      	asrs	r3, r0, #31
    b26c:	18c4      	adds	r4, r0, r3
    b26e:	405c      	eors	r4, r3
    b270:	0fc5      	lsrs	r5, r0, #31
    b272:	0020      	movs	r0, r4
    b274:	f7fd fe34 	bl	8ee0 <__clzsi2>
    b278:	4b17      	ldr	r3, [pc, #92]	; (b2d8 <__aeabi_i2d+0x74>)
    b27a:	4a18      	ldr	r2, [pc, #96]	; (b2dc <__aeabi_i2d+0x78>)
    b27c:	1a1b      	subs	r3, r3, r0
    b27e:	1ad2      	subs	r2, r2, r3
    b280:	2a1f      	cmp	r2, #31
    b282:	dd18      	ble.n	b2b6 <__aeabi_i2d+0x52>
    b284:	4a16      	ldr	r2, [pc, #88]	; (b2e0 <__aeabi_i2d+0x7c>)
    b286:	1ad2      	subs	r2, r2, r3
    b288:	4094      	lsls	r4, r2
    b28a:	2200      	movs	r2, #0
    b28c:	0324      	lsls	r4, r4, #12
    b28e:	055b      	lsls	r3, r3, #21
    b290:	0b24      	lsrs	r4, r4, #12
    b292:	0d5b      	lsrs	r3, r3, #21
    b294:	2100      	movs	r1, #0
    b296:	0010      	movs	r0, r2
    b298:	0324      	lsls	r4, r4, #12
    b29a:	0d0a      	lsrs	r2, r1, #20
    b29c:	0b24      	lsrs	r4, r4, #12
    b29e:	0512      	lsls	r2, r2, #20
    b2a0:	4322      	orrs	r2, r4
    b2a2:	4c10      	ldr	r4, [pc, #64]	; (b2e4 <__aeabi_i2d+0x80>)
    b2a4:	051b      	lsls	r3, r3, #20
    b2a6:	4022      	ands	r2, r4
    b2a8:	4313      	orrs	r3, r2
    b2aa:	005b      	lsls	r3, r3, #1
    b2ac:	07ed      	lsls	r5, r5, #31
    b2ae:	085b      	lsrs	r3, r3, #1
    b2b0:	432b      	orrs	r3, r5
    b2b2:	0019      	movs	r1, r3
    b2b4:	bd70      	pop	{r4, r5, r6, pc}
    b2b6:	0021      	movs	r1, r4
    b2b8:	4091      	lsls	r1, r2
    b2ba:	000a      	movs	r2, r1
    b2bc:	210b      	movs	r1, #11
    b2be:	1a08      	subs	r0, r1, r0
    b2c0:	40c4      	lsrs	r4, r0
    b2c2:	055b      	lsls	r3, r3, #21
    b2c4:	0324      	lsls	r4, r4, #12
    b2c6:	0b24      	lsrs	r4, r4, #12
    b2c8:	0d5b      	lsrs	r3, r3, #21
    b2ca:	e7e3      	b.n	b294 <__aeabi_i2d+0x30>
    b2cc:	2500      	movs	r5, #0
    b2ce:	2300      	movs	r3, #0
    b2d0:	2400      	movs	r4, #0
    b2d2:	2200      	movs	r2, #0
    b2d4:	e7de      	b.n	b294 <__aeabi_i2d+0x30>
    b2d6:	46c0      	nop			; (mov r8, r8)
    b2d8:	0000041e 	.word	0x0000041e
    b2dc:	00000433 	.word	0x00000433
    b2e0:	00000413 	.word	0x00000413
    b2e4:	800fffff 	.word	0x800fffff

0000b2e8 <_sbrk>:
    b2e8:	4a04      	ldr	r2, [pc, #16]	; (b2fc <_sbrk+0x14>)
    b2ea:	6813      	ldr	r3, [r2, #0]
    b2ec:	2b00      	cmp	r3, #0
    b2ee:	d003      	beq.n	b2f8 <_sbrk+0x10>
    b2f0:	1818      	adds	r0, r3, r0
    b2f2:	6010      	str	r0, [r2, #0]
    b2f4:	0018      	movs	r0, r3
    b2f6:	4770      	bx	lr
    b2f8:	4b01      	ldr	r3, [pc, #4]	; (b300 <_sbrk+0x18>)
    b2fa:	e7f9      	b.n	b2f0 <_sbrk+0x8>
    b2fc:	20001088 	.word	0x20001088
    b300:	20001090 	.word	0x20001090

0000b304 <_init>:
    b304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    b306:	46c0      	nop			; (mov r8, r8)
    b308:	bcf8      	pop	{r3, r4, r5, r6, r7}
    b30a:	bc08      	pop	{r3}
    b30c:	469e      	mov	lr, r3
    b30e:	4770      	bx	lr

0000b310 <_fini>:
    b310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    b312:	46c0      	nop			; (mov r8, r8)
    b314:	bcf8      	pop	{r3, r4, r5, r6, r7}
    b316:	bc08      	pop	{r3}
    b318:	469e      	mov	lr, r3
    b31a:	4770      	bx	lr

0000b31c <_ZTV12BLEAttribute>:
	...
    b324:	2115 0000 211b 0000 2117 0000               .!...!...!..

0000b330 <_ZTV17BLECharacteristic>:
	...
    b338:	2179 0000 21a5 0000 3025 7832 253a 3230     y!...!..%02x:%02
    b348:	3a78 3025 7832 253a 3230 3a78 3025 7832     x:%02x:%02x:%02x
    b358:	253a 3230 0078 0000                         :%02x...

0000b360 <_ZTV9BLEDevice>:
	...
    b368:	221d 0000 221f 0000 222d 0000 223d 0000     ."..."..-"..="..
    b378:	2311 0000 224d 0000 2271 0000 22a5 0000     .#..M"..q"..."..
    b388:	22c1 0000 22f1 0000 233d 0000               ."..."..=#..

0000b394 <_ZTV10BLEService>:
	...
    b39c:	23a1 0000 23cd 0000                         .#...#..

0000b3a4 <_ZTV22BLETypedCharacteristicIhE>:
	...
    b3ac:	244d 0000 2461 0000                         M$..a$..

0000b3b4 <_ZTV29BLEUnsignedCharCharacteristic>:
	...
    b3bc:	2475 0000 2489 0000                         u$...$..

0000b3c4 <_ZTV21BLEByteCharacteristic>:
	...
    b3cc:	249d 0000 24b1 0000 3932 3230 0000 0000     .$...$..2902....

0000b3dc <_ZTV22BLELocalCharacteristic>:
	...
    b3e4:	2789 0000 27ed 0000 259d 0000               .'...'...%..

0000b3f0 <_ZTV18BLELocalDescriptor>:
	...
    b3f8:	2915 0000 292d 0000 290d 0000               .)..-)...)..

0000b404 <_ZTV14BLELocalDevice>:
	...
    b40c:	2991 0000 29a9 0000 222d 0000 223d 0000     .)...)..-"..="..
    b41c:	29bd 0000 29d5 0000 29e5 0000 2bb1 0000     .)...)...)...+..
    b42c:	2979 0000 297d 0000 2987 0000               y)..})...)..

0000b438 <_ZTV15BLELocalService>:
	...
    b440:	2ca5 0000 2d01 0000 2be1 0000               .,...-...+..

0000b44c <_ZTV8ATTClass>:
	...
    b454:	2d15 0000 2d31 0000                         .-..1-..

0000b45c <_ZTV8GAPClass>:
	...
    b464:	3d61 0000 3d63 0000 7241 7564 6e69 006f     a=..c=..Arduino.
    b474:	3831 3030 3200 3061 0030 6132 3130 3100     1800.2a00.2a01.1
    b484:	3038 0031 6132 3530 0000 0000               801.2a05....

0000b490 <_ZTV9GATTClass>:
	...
    b498:	4201 0000 4249 0000 4348 2049 4341 444c     .B..IB..HCI ACLD
    b4a8:	5441 2041 5854 2d20 203e 4800 4943 4320     ATA TX -> .HCI C
    b4b8:	4d4f 414d 444e 5420 2058 3e2d 0020 4348     OMMAND TX -> .HC
    b4c8:	2049 4341 444c 5441 2041 5852 3c20 202d     I ACLDATA RX <- 
    b4d8:	4800 4943 4520 4556 544e 5220 2058 2d3c     .HCI EVENT RX <-
    b4e8:	0020 0000                                    ...

0000b4ec <_ZTV8HCIClass>:
	...
    b4f4:	425b 0000 425d 0000                         [B..]B..

0000b4fc <HCITransport>:
    b4fc:	05a0 2000                                   ... 

0000b500 <_ZTV21HCIUartTransportClass>:
	...
    b508:	492f 0000 4941 0000 4997 0000 494d 0000     /I..AI...I..MI..
    b518:	4959 0000 4965 0000 4971 0000 492d 0000     YI..eI..qI..-I..
    b528:	498b 0000                                   .I..

0000b52c <_ZTV19L2CAPSignalingClass>:
	...
    b534:	49f1 0000 49f3 0000 3831 4630 3200 3141     .I...I..180F.2A1
    b544:	0039 3931 3142 3030 3030 452d 4638 2d32     9.19B10000-E8F2-
    b554:	3335 4537 342d 3646 2d43 3144 3430 3637     537E-4F6C-D10476
    b564:	4138 3231 3431 3100 4239 3031 3030 2d31     8A1214.19B10001-
    b574:	3845 3246 352d 3733 2d45 4634 4336 442d     E8F2-537E-4F6C-D
    b584:	3031 3734 3836 3141 3132 0034 3931 3142     104768A1214.19B1
    b594:	3030 3031 452d 4638 2d32 3335 4537 342d     0010-E8F2-537E-4
    b5a4:	3646 2d43 3144 3430 3637 4138 3231 3431     F6C-D104768A1214
    b5b4:	3100 4239 3031 3130 2d31 3845 3246 352d     .19B10011-E8F2-5
    b5c4:	3733 2d45 4634 4336 442d 3031 3734 3836     37E-4F6C-D104768
    b5d4:	3141 3132 0034 3931 3142 3030 3231 452d     A1214.19B10012-E
    b5e4:	4638 2d32 3335 4537 342d 3646 2d43 3144     8F2-537E-4F6C-D1
    b5f4:	3430 3637 4138 3231 3431 6200 7461 6574     04768A1214.batte
    b604:	7972 6c20 7665 6c65 2520 6920 2073 6f6e     ry level % is no
    b614:	3a77 0020 6142 7474 7265 4d79 6e6f 7469     w: .BatteryMonit
    b624:	726f 6300 6e6f 656e 7463 6465 7420 206f     or.connected to 
    b634:	6563 746e 6172 3a6c 0020 6964 6373 6e6f     central: .discon
    b644:	656e 7463 6465 6620 6f72 206d 6563 746e     nected from cent
    b654:	6172 3a6c 0020 7473 7261 6974 676e 4220     ral: .starting B
    b664:	454c 6620 6961 656c 2164 7700 6961 6974     LE failed!.waiti
    b674:	676e 6620 726f 4220 454c 6320 6e6f 656e     ng for BLE conne
    b684:	7463 6f69 006e 0a0d 0000 0000               ction.......

0000b690 <_ZTV7Serial_>:
	...
    b698:	5305 0000 5331 0000 5301 0000 5325 0000     .S..1S...S..%S..
    b6a8:	5319 0000 5369 0000 534d 0000               .S..iS..MS..

0000b6b4 <_ZTV26DoubleBufferedEPOutHandler>:
	...
    b6bc:	57f7 0000 56d9 0000 5635 0000 549d 0000     .W...V..5V...T..
    b6cc:	54b1 0000                                   .T..

0000b6d0 <_ZL14STRING_PRODUCT>:
    b6d0:	7241 7564 6e69 206f 4b4d 2052 6957 6946     Arduino MKR WiFi
    b6e0:	3120 3130 0030                               1010.

0000b6e6 <_ZL15STRING_LANGUAGE>:
    b6e6:	0304 0409                                   ....

0000b6ea <_ZL19STRING_MANUFACTURER>:
    b6ea:	7241 7564 6e69 206f 4c4c 0043               Arduino LLC.

0000b6f6 <_ZL21USB_DeviceDescriptorB>:
    b6f6:	0112 0200 02ef 4001 2341 8054 0100 0201     .......@A#T.....
    b706:	0103                                        ..

0000b708 <g_APinDescription>:
    b708:	0000 0000 0016 0000 0008 0000 001c 0000     ................
    b718:	00ff 0400 0400 0006 0000 0000 0017 0000     ................
    b728:	0008 0000 001c 0000 00ff 0401 0401 0007     ................
    b738:	0000 0000 000a 0000 0008 0000 001c 0000     ................
    b748:	0012 0100 0100 00ff 0000 0000 000b 0000     ................
    b758:	0008 0000 001c 0000 0013 0101 0101 00ff     ................
    b768:	0001 0000 000a 0000 0008 0000 001c 0000     ................
    b778:	00ff 0500 0500 000a 0001 0000 000b 0000     ................
    b788:	0008 0000 001c 0000 00ff 0501 0501 000b     ................
    b798:	0000 0000 0014 0000 0008 0000 002c 0000     ............,...
    b7a8:	00ff 0002 0002 0004 0000 0000 0015 0000     ................
    b7b8:	0008 0000 002c 0000 00ff 0003 0003 0005     ....,...........
    b7c8:	0000 0000 0010 0000 0002 0000 001c 0000     ................
    b7d8:	00ff 0200 0200 0000 0000 0000 0011 0000     ................
    b7e8:	0002 0000 0004 0000 00ff ffff ffff 0001     ................
    b7f8:	0000 0000 0013 0000 0002 0000 001c 0000     ................
    b808:	00ff 0301 0301 00ff 0000 0000 0008 0000     ................
    b818:	0003 0000 0004 0000 0010 ffff ffff 0010     ................
    b828:	0000 0000 0009 0000 0003 0000 0004 0000     ................
    b838:	0011 ffff ffff 00ff 0001 0000 0017 0000     ................
    b848:	0003 0000 0004 0000 00ff ffff ffff 00ff     ................
    b858:	0001 0000 0016 0000 0003 0000 0004 0000     ................
    b868:	00ff ffff ffff 00ff 0000 0000 0002 0000     ................
    b878:	0001 0000 0006 0000 0000 ffff ffff 00ff     ................
    b888:	0001 0000 0002 0000 0001 0000 0004 0000     ................
    b898:	000a ffff ffff 0002 0001 0000 0003 0000     ................
    b8a8:	0001 0000 0004 0000 000b ffff ffff 0003     ................
    b8b8:	0000 0000 0004 0000 0001 0000 001c 0000     ................
    b8c8:	0004 0000 0000 00ff 0000 0000 0005 0000     ................
    b8d8:	0001 0000 001c 0000 0005 0001 0001 00ff     ................
    b8e8:	0000 0000 0006 0000 0001 0000 0004 0000     ................
    b8f8:	0006 ffff ffff 00ff 0000 0000 0007 0000     ................
    b908:	0001 0000 0004 0000 0007 ffff ffff 00ff     ................
    b918:	0000 0000 0018 0000 0006 0000 0000 0000     ................
    b928:	00ff ffff ffff 00ff 0000 0000 0019 0000     ................
    b938:	0006 0000 0000 0000 00ff ffff ffff 00ff     ................
    b948:	0000 0000 0012 0000 0008 0000 0004 0000     ................
    b958:	00ff ffff ffff 00ff 0000 0000 0003 0000     ................
    b968:	0008 0000 0004 0000 00ff ffff ffff 00ff     ................
    b978:	0000 0000 000c 0000 0003 0000 0000 0000     ................
    b988:	00ff ffff ffff 00ff 0000 0000 000d 0000     ................
    b998:	0003 0000 0000 0000 00ff ffff ffff 00ff     ................
    b9a8:	0000 0000 000e 0000 0008 0000 0000 0000     ................
    b9b8:	00ff ffff ffff 00ff 0000 0000 000f 0000     ................
    b9c8:	0003 0000 0000 0000 00ff ffff ffff 00ff     ................
    b9d8:	0000 0000 001b 0000 0008 0000 0000 0000     ................
    b9e8:	00ff ffff ffff 000f 0001 0000 0008 0000     ................
    b9f8:	0008 0000 0006 0000 0002 ffff ffff 00ff     ................
    ba08:	0001 0000 0009 0000 0001 0000 0018 0000     ................
    ba18:	0003 0401 0401 0009 0000 0000 0000 0000     ................
    ba28:	0008 0000 0000 0000 00ff ffff ffff 00ff     ................
    ba38:	0000 0000 0001 0000 0008 0000 0000 0000     ................
    ba48:	00ff ffff ffff 00ff 0000 0000 001c 0000     ................
    ba58:	0008 0000 0004 0000 00ff ffff ffff 00ff     ................

0000ba68 <_ZTV4Uart>:
	...
    ba70:	6edd 0000 4f91 0000 6e03 0000 6dbf 0000     .n...O...n...m..
    ba80:	6dd9 0000 6f91 0000 6b19 0000 6b09 0000     .m...o...k...k..
    ba90:	6b9d 0000 6b33 0000 6b05 0000 7c2c 0000     .k..3k...k..,|..
    baa0:	7c0e 0000 7bc8 0000 7ae6 0000 7bc8 0000     .|...{...z...{..
    bab0:	7c00 0000 7bc8 0000 7ae6 0000 7c0e 0000     .|...{...z...|..
    bac0:	7c0e 0000 7c00 0000 7ae6 0000 7ade 0000     .|...|...z...z..
    bad0:	7ade 0000 7ade 0000 7e44 0000 848c 0000     .z...z..D~......
    bae0:	834c 0000 834c 0000 8348 0000 8464 0000     L...L...H...d...
    baf0:	8464 0000 8456 0000 8348 0000 8464 0000     d...V...H...d...
    bb00:	8456 0000 8464 0000 8348 0000 846c 0000     V...d...H...l...
    bb10:	846c 0000 846c 0000 8670 0000 0043 4f50     l...l...p...C.PO
    bb20:	4953 0058 002e 4e49 0046 6e69 0066 414e     SIX...INF.inf.NA
    bb30:	004e 616e 006e 3130 3332 3534 3736 3938     N.nan.0123456789
    bb40:	4241 4443 4645 3000 3231 3433 3635 3837     ABCDEF.012345678
    bb50:	6139 6362 6564 0066                         9abcdef.

0000bb58 <_ctype_>:
    bb58:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
    bb68:	2020 2020 2020 2020 2020 2020 2020 2020                     
    bb78:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
    bb88:	0410 0404 0404 0404 0404 1004 1010 1010     ................
    bb98:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
    bba8:	0101 0101 0101 0101 0101 0101 1010 1010     ................
    bbb8:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
    bbc8:	0202 0202 0202 0202 0202 0202 1010 1010     ................
    bbd8:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
    bc58:	4900 666e 6e69 7469 0079 614e 004e 0000     .Infinity.NaN...

0000bc68 <__mprec_bigtens>:
    bc68:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
    bc78:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
    bc88:	bf3c 7f73 4fdd 7515                         <.s..O.u

0000bc90 <__mprec_tens>:
    bc90:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
    bca0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
    bcb0:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
    bcc0:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
    bcd0:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
    bce0:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
    bcf0:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
    bd00:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
    bd10:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
    bd20:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
    bd30:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
    bd40:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
    bd50:	9db4 79d9 7843 44ea                         ...yCx.D

0000bd58 <p05.6047>:
    bd58:	0005 0000 0019 0000 007d 0000 2d23 2b30     ........}...#-0+
    bd68:	0020 6c68 004c 6665 4567 4746 0000 0000      .hlL.efgEFG....

0000bd78 <__EH_FRAME_BEGIN__>:
    bd78:	0000 0000                                   ....
